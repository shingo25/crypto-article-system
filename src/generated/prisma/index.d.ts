
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Organization
 * 
 */
export type Organization = $Result.DefaultSelection<Prisma.$OrganizationPayload>
/**
 * Model OrganizationMembership
 * 
 */
export type OrganizationMembership = $Result.DefaultSelection<Prisma.$OrganizationMembershipPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserSession
 * 
 */
export type UserSession = $Result.DefaultSelection<Prisma.$UserSessionPayload>
/**
 * Model Article
 * 
 */
export type Article = $Result.DefaultSelection<Prisma.$ArticlePayload>
/**
 * Model Template
 * 
 */
export type Template = $Result.DefaultSelection<Prisma.$TemplatePayload>
/**
 * Model ArticleVersion
 * 
 */
export type ArticleVersion = $Result.DefaultSelection<Prisma.$ArticleVersionPayload>
/**
 * Model ArticleAnalytics
 * 
 */
export type ArticleAnalytics = $Result.DefaultSelection<Prisma.$ArticleAnalyticsPayload>
/**
 * Model NewsItem
 * 
 */
export type NewsItem = $Result.DefaultSelection<Prisma.$NewsItemPayload>
/**
 * Model RSSSource
 * 
 */
export type RSSSource = $Result.DefaultSelection<Prisma.$RSSSourcePayload>
/**
 * Model PriceAlert
 * 
 */
export type PriceAlert = $Result.DefaultSelection<Prisma.$PriceAlertPayload>
/**
 * Model AlertTrigger
 * 
 */
export type AlertTrigger = $Result.DefaultSelection<Prisma.$AlertTriggerPayload>
/**
 * Model PriceHistory
 * 
 */
export type PriceHistory = $Result.DefaultSelection<Prisma.$PriceHistoryPayload>
/**
 * Model AlertHistory
 * 
 */
export type AlertHistory = $Result.DefaultSelection<Prisma.$AlertHistoryPayload>
/**
 * Model MarketIndicators
 * 
 */
export type MarketIndicators = $Result.DefaultSelection<Prisma.$MarketIndicatorsPayload>
/**
 * Model AlertSettings
 * 
 */
export type AlertSettings = $Result.DefaultSelection<Prisma.$AlertSettingsPayload>
/**
 * Model AIProviderSettings
 * 
 */
export type AIProviderSettings = $Result.DefaultSelection<Prisma.$AIProviderSettingsPayload>
/**
 * Model SystemMetrics
 * 
 */
export type SystemMetrics = $Result.DefaultSelection<Prisma.$SystemMetricsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserRole: {
  ADMIN: 'ADMIN',
  EDITOR: 'EDITOR',
  AUTHOR: 'AUTHOR',
  USER: 'USER'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const MemberRole: {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  EDITOR: 'EDITOR',
  MEMBER: 'MEMBER'
};

export type MemberRole = (typeof MemberRole)[keyof typeof MemberRole]


export const ArticleStatus: {
  DRAFT: 'DRAFT',
  REVIEW: 'REVIEW',
  SCHEDULED: 'SCHEDULED',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

export type ArticleStatus = (typeof ArticleStatus)[keyof typeof ArticleStatus]


export const SourceType: {
  MANUAL: 'MANUAL',
  MARKET: 'MARKET',
  ALERT: 'ALERT',
  NEWS: 'NEWS',
  TEMPLATE: 'TEMPLATE',
  AI_SUGGESTED: 'AI_SUGGESTED'
};

export type SourceType = (typeof SourceType)[keyof typeof SourceType]


export const AlertType: {
  PRICE_ABOVE: 'PRICE_ABOVE',
  PRICE_BELOW: 'PRICE_BELOW',
  PRICE_CHANGE: 'PRICE_CHANGE',
  VOLUME_SURGE: 'VOLUME_SURGE',
  TECHNICAL: 'TECHNICAL'
};

export type AlertType = (typeof AlertType)[keyof typeof AlertType]


export const AIProvider: {
  OPENAI: 'OPENAI',
  CLAUDE: 'CLAUDE',
  GEMINI: 'GEMINI'
};

export type AIProvider = (typeof AIProvider)[keyof typeof AIProvider]

}

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type MemberRole = $Enums.MemberRole

export const MemberRole: typeof $Enums.MemberRole

export type ArticleStatus = $Enums.ArticleStatus

export const ArticleStatus: typeof $Enums.ArticleStatus

export type SourceType = $Enums.SourceType

export const SourceType: typeof $Enums.SourceType

export type AlertType = $Enums.AlertType

export const AlertType: typeof $Enums.AlertType

export type AIProvider = $Enums.AIProvider

export const AIProvider: typeof $Enums.AIProvider

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Organizations
 * const organizations = await prisma.organization.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Organizations
   * const organizations = await prisma.organization.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.organization`: Exposes CRUD operations for the **Organization** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizations
    * const organizations = await prisma.organization.findMany()
    * ```
    */
  get organization(): Prisma.OrganizationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.organizationMembership`: Exposes CRUD operations for the **OrganizationMembership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrganizationMemberships
    * const organizationMemberships = await prisma.organizationMembership.findMany()
    * ```
    */
  get organizationMembership(): Prisma.OrganizationMembershipDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userSession`: Exposes CRUD operations for the **UserSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSessions
    * const userSessions = await prisma.userSession.findMany()
    * ```
    */
  get userSession(): Prisma.UserSessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.article`: Exposes CRUD operations for the **Article** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Articles
    * const articles = await prisma.article.findMany()
    * ```
    */
  get article(): Prisma.ArticleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.template`: Exposes CRUD operations for the **Template** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Templates
    * const templates = await prisma.template.findMany()
    * ```
    */
  get template(): Prisma.TemplateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.articleVersion`: Exposes CRUD operations for the **ArticleVersion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArticleVersions
    * const articleVersions = await prisma.articleVersion.findMany()
    * ```
    */
  get articleVersion(): Prisma.ArticleVersionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.articleAnalytics`: Exposes CRUD operations for the **ArticleAnalytics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArticleAnalytics
    * const articleAnalytics = await prisma.articleAnalytics.findMany()
    * ```
    */
  get articleAnalytics(): Prisma.ArticleAnalyticsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.newsItem`: Exposes CRUD operations for the **NewsItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NewsItems
    * const newsItems = await prisma.newsItem.findMany()
    * ```
    */
  get newsItem(): Prisma.NewsItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rSSSource`: Exposes CRUD operations for the **RSSSource** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RSSSources
    * const rSSSources = await prisma.rSSSource.findMany()
    * ```
    */
  get rSSSource(): Prisma.RSSSourceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.priceAlert`: Exposes CRUD operations for the **PriceAlert** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PriceAlerts
    * const priceAlerts = await prisma.priceAlert.findMany()
    * ```
    */
  get priceAlert(): Prisma.PriceAlertDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alertTrigger`: Exposes CRUD operations for the **AlertTrigger** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlertTriggers
    * const alertTriggers = await prisma.alertTrigger.findMany()
    * ```
    */
  get alertTrigger(): Prisma.AlertTriggerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.priceHistory`: Exposes CRUD operations for the **PriceHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PriceHistories
    * const priceHistories = await prisma.priceHistory.findMany()
    * ```
    */
  get priceHistory(): Prisma.PriceHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alertHistory`: Exposes CRUD operations for the **AlertHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlertHistories
    * const alertHistories = await prisma.alertHistory.findMany()
    * ```
    */
  get alertHistory(): Prisma.AlertHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.marketIndicators`: Exposes CRUD operations for the **MarketIndicators** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MarketIndicators
    * const marketIndicators = await prisma.marketIndicators.findMany()
    * ```
    */
  get marketIndicators(): Prisma.MarketIndicatorsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alertSettings`: Exposes CRUD operations for the **AlertSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AlertSettings
    * const alertSettings = await prisma.alertSettings.findMany()
    * ```
    */
  get alertSettings(): Prisma.AlertSettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aIProviderSettings`: Exposes CRUD operations for the **AIProviderSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AIProviderSettings
    * const aIProviderSettings = await prisma.aIProviderSettings.findMany()
    * ```
    */
  get aIProviderSettings(): Prisma.AIProviderSettingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.systemMetrics`: Exposes CRUD operations for the **SystemMetrics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SystemMetrics
    * const systemMetrics = await prisma.systemMetrics.findMany()
    * ```
    */
  get systemMetrics(): Prisma.SystemMetricsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.0
   * Query Engine version: 9c30299f5a0ea26a96790e13f796dc6094db3173
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Organization: 'Organization',
    OrganizationMembership: 'OrganizationMembership',
    User: 'User',
    UserSession: 'UserSession',
    Article: 'Article',
    Template: 'Template',
    ArticleVersion: 'ArticleVersion',
    ArticleAnalytics: 'ArticleAnalytics',
    NewsItem: 'NewsItem',
    RSSSource: 'RSSSource',
    PriceAlert: 'PriceAlert',
    AlertTrigger: 'AlertTrigger',
    PriceHistory: 'PriceHistory',
    AlertHistory: 'AlertHistory',
    MarketIndicators: 'MarketIndicators',
    AlertSettings: 'AlertSettings',
    AIProviderSettings: 'AIProviderSettings',
    SystemMetrics: 'SystemMetrics'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "organization" | "organizationMembership" | "user" | "userSession" | "article" | "template" | "articleVersion" | "articleAnalytics" | "newsItem" | "rSSSource" | "priceAlert" | "alertTrigger" | "priceHistory" | "alertHistory" | "marketIndicators" | "alertSettings" | "aIProviderSettings" | "systemMetrics"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Organization: {
        payload: Prisma.$OrganizationPayload<ExtArgs>
        fields: Prisma.OrganizationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findFirst: {
            args: Prisma.OrganizationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findMany: {
            args: Prisma.OrganizationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          create: {
            args: Prisma.OrganizationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          createMany: {
            args: Prisma.OrganizationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          delete: {
            args: Prisma.OrganizationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          update: {
            args: Prisma.OrganizationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrganizationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          upsert: {
            args: Prisma.OrganizationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          aggregate: {
            args: Prisma.OrganizationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganization>
          }
          groupBy: {
            args: Prisma.OrganizationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationCountAggregateOutputType> | number
          }
        }
      }
      OrganizationMembership: {
        payload: Prisma.$OrganizationMembershipPayload<ExtArgs>
        fields: Prisma.OrganizationMembershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationMembershipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationMembershipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>
          }
          findFirst: {
            args: Prisma.OrganizationMembershipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationMembershipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>
          }
          findMany: {
            args: Prisma.OrganizationMembershipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>[]
          }
          create: {
            args: Prisma.OrganizationMembershipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>
          }
          createMany: {
            args: Prisma.OrganizationMembershipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationMembershipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>[]
          }
          delete: {
            args: Prisma.OrganizationMembershipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>
          }
          update: {
            args: Prisma.OrganizationMembershipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationMembershipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationMembershipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrganizationMembershipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>[]
          }
          upsert: {
            args: Prisma.OrganizationMembershipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationMembershipPayload>
          }
          aggregate: {
            args: Prisma.OrganizationMembershipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganizationMembership>
          }
          groupBy: {
            args: Prisma.OrganizationMembershipGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationMembershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationMembershipCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationMembershipCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserSession: {
        payload: Prisma.$UserSessionPayload<ExtArgs>
        fields: Prisma.UserSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findFirst: {
            args: Prisma.UserSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findMany: {
            args: Prisma.UserSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          create: {
            args: Prisma.UserSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          createMany: {
            args: Prisma.UserSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          delete: {
            args: Prisma.UserSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          update: {
            args: Prisma.UserSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          deleteMany: {
            args: Prisma.UserSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserSessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          upsert: {
            args: Prisma.UserSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          aggregate: {
            args: Prisma.UserSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSession>
          }
          groupBy: {
            args: Prisma.UserSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSessionCountArgs<ExtArgs>
            result: $Utils.Optional<UserSessionCountAggregateOutputType> | number
          }
        }
      }
      Article: {
        payload: Prisma.$ArticlePayload<ExtArgs>
        fields: Prisma.ArticleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArticleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArticleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>
          }
          findFirst: {
            args: Prisma.ArticleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArticleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>
          }
          findMany: {
            args: Prisma.ArticleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>[]
          }
          create: {
            args: Prisma.ArticleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>
          }
          createMany: {
            args: Prisma.ArticleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArticleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>[]
          }
          delete: {
            args: Prisma.ArticleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>
          }
          update: {
            args: Prisma.ArticleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>
          }
          deleteMany: {
            args: Prisma.ArticleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArticleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArticleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>[]
          }
          upsert: {
            args: Prisma.ArticleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticlePayload>
          }
          aggregate: {
            args: Prisma.ArticleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticle>
          }
          groupBy: {
            args: Prisma.ArticleGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArticleGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArticleCountArgs<ExtArgs>
            result: $Utils.Optional<ArticleCountAggregateOutputType> | number
          }
        }
      }
      Template: {
        payload: Prisma.$TemplatePayload<ExtArgs>
        fields: Prisma.TemplateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TemplateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TemplateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>
          }
          findFirst: {
            args: Prisma.TemplateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TemplateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>
          }
          findMany: {
            args: Prisma.TemplateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>[]
          }
          create: {
            args: Prisma.TemplateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>
          }
          createMany: {
            args: Prisma.TemplateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TemplateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>[]
          }
          delete: {
            args: Prisma.TemplateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>
          }
          update: {
            args: Prisma.TemplateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>
          }
          deleteMany: {
            args: Prisma.TemplateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TemplateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TemplateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>[]
          }
          upsert: {
            args: Prisma.TemplateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TemplatePayload>
          }
          aggregate: {
            args: Prisma.TemplateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTemplate>
          }
          groupBy: {
            args: Prisma.TemplateGroupByArgs<ExtArgs>
            result: $Utils.Optional<TemplateGroupByOutputType>[]
          }
          count: {
            args: Prisma.TemplateCountArgs<ExtArgs>
            result: $Utils.Optional<TemplateCountAggregateOutputType> | number
          }
        }
      }
      ArticleVersion: {
        payload: Prisma.$ArticleVersionPayload<ExtArgs>
        fields: Prisma.ArticleVersionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArticleVersionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArticleVersionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>
          }
          findFirst: {
            args: Prisma.ArticleVersionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArticleVersionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>
          }
          findMany: {
            args: Prisma.ArticleVersionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>[]
          }
          create: {
            args: Prisma.ArticleVersionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>
          }
          createMany: {
            args: Prisma.ArticleVersionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArticleVersionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>[]
          }
          delete: {
            args: Prisma.ArticleVersionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>
          }
          update: {
            args: Prisma.ArticleVersionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>
          }
          deleteMany: {
            args: Prisma.ArticleVersionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArticleVersionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArticleVersionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>[]
          }
          upsert: {
            args: Prisma.ArticleVersionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleVersionPayload>
          }
          aggregate: {
            args: Prisma.ArticleVersionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticleVersion>
          }
          groupBy: {
            args: Prisma.ArticleVersionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArticleVersionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArticleVersionCountArgs<ExtArgs>
            result: $Utils.Optional<ArticleVersionCountAggregateOutputType> | number
          }
        }
      }
      ArticleAnalytics: {
        payload: Prisma.$ArticleAnalyticsPayload<ExtArgs>
        fields: Prisma.ArticleAnalyticsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArticleAnalyticsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArticleAnalyticsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>
          }
          findFirst: {
            args: Prisma.ArticleAnalyticsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArticleAnalyticsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>
          }
          findMany: {
            args: Prisma.ArticleAnalyticsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>[]
          }
          create: {
            args: Prisma.ArticleAnalyticsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>
          }
          createMany: {
            args: Prisma.ArticleAnalyticsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArticleAnalyticsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>[]
          }
          delete: {
            args: Prisma.ArticleAnalyticsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>
          }
          update: {
            args: Prisma.ArticleAnalyticsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>
          }
          deleteMany: {
            args: Prisma.ArticleAnalyticsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArticleAnalyticsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ArticleAnalyticsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>[]
          }
          upsert: {
            args: Prisma.ArticleAnalyticsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArticleAnalyticsPayload>
          }
          aggregate: {
            args: Prisma.ArticleAnalyticsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticleAnalytics>
          }
          groupBy: {
            args: Prisma.ArticleAnalyticsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArticleAnalyticsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArticleAnalyticsCountArgs<ExtArgs>
            result: $Utils.Optional<ArticleAnalyticsCountAggregateOutputType> | number
          }
        }
      }
      NewsItem: {
        payload: Prisma.$NewsItemPayload<ExtArgs>
        fields: Prisma.NewsItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NewsItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NewsItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>
          }
          findFirst: {
            args: Prisma.NewsItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NewsItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>
          }
          findMany: {
            args: Prisma.NewsItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>[]
          }
          create: {
            args: Prisma.NewsItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>
          }
          createMany: {
            args: Prisma.NewsItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NewsItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>[]
          }
          delete: {
            args: Prisma.NewsItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>
          }
          update: {
            args: Prisma.NewsItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>
          }
          deleteMany: {
            args: Prisma.NewsItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NewsItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NewsItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>[]
          }
          upsert: {
            args: Prisma.NewsItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NewsItemPayload>
          }
          aggregate: {
            args: Prisma.NewsItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNewsItem>
          }
          groupBy: {
            args: Prisma.NewsItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<NewsItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.NewsItemCountArgs<ExtArgs>
            result: $Utils.Optional<NewsItemCountAggregateOutputType> | number
          }
        }
      }
      RSSSource: {
        payload: Prisma.$RSSSourcePayload<ExtArgs>
        fields: Prisma.RSSSourceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RSSSourceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RSSSourceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>
          }
          findFirst: {
            args: Prisma.RSSSourceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RSSSourceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>
          }
          findMany: {
            args: Prisma.RSSSourceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>[]
          }
          create: {
            args: Prisma.RSSSourceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>
          }
          createMany: {
            args: Prisma.RSSSourceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RSSSourceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>[]
          }
          delete: {
            args: Prisma.RSSSourceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>
          }
          update: {
            args: Prisma.RSSSourceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>
          }
          deleteMany: {
            args: Prisma.RSSSourceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RSSSourceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RSSSourceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>[]
          }
          upsert: {
            args: Prisma.RSSSourceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RSSSourcePayload>
          }
          aggregate: {
            args: Prisma.RSSSourceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRSSSource>
          }
          groupBy: {
            args: Prisma.RSSSourceGroupByArgs<ExtArgs>
            result: $Utils.Optional<RSSSourceGroupByOutputType>[]
          }
          count: {
            args: Prisma.RSSSourceCountArgs<ExtArgs>
            result: $Utils.Optional<RSSSourceCountAggregateOutputType> | number
          }
        }
      }
      PriceAlert: {
        payload: Prisma.$PriceAlertPayload<ExtArgs>
        fields: Prisma.PriceAlertFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PriceAlertFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PriceAlertFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>
          }
          findFirst: {
            args: Prisma.PriceAlertFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PriceAlertFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>
          }
          findMany: {
            args: Prisma.PriceAlertFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>[]
          }
          create: {
            args: Prisma.PriceAlertCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>
          }
          createMany: {
            args: Prisma.PriceAlertCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PriceAlertCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>[]
          }
          delete: {
            args: Prisma.PriceAlertDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>
          }
          update: {
            args: Prisma.PriceAlertUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>
          }
          deleteMany: {
            args: Prisma.PriceAlertDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PriceAlertUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PriceAlertUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>[]
          }
          upsert: {
            args: Prisma.PriceAlertUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceAlertPayload>
          }
          aggregate: {
            args: Prisma.PriceAlertAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePriceAlert>
          }
          groupBy: {
            args: Prisma.PriceAlertGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceAlertGroupByOutputType>[]
          }
          count: {
            args: Prisma.PriceAlertCountArgs<ExtArgs>
            result: $Utils.Optional<PriceAlertCountAggregateOutputType> | number
          }
        }
      }
      AlertTrigger: {
        payload: Prisma.$AlertTriggerPayload<ExtArgs>
        fields: Prisma.AlertTriggerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlertTriggerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlertTriggerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>
          }
          findFirst: {
            args: Prisma.AlertTriggerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlertTriggerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>
          }
          findMany: {
            args: Prisma.AlertTriggerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>[]
          }
          create: {
            args: Prisma.AlertTriggerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>
          }
          createMany: {
            args: Prisma.AlertTriggerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlertTriggerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>[]
          }
          delete: {
            args: Prisma.AlertTriggerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>
          }
          update: {
            args: Prisma.AlertTriggerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>
          }
          deleteMany: {
            args: Prisma.AlertTriggerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlertTriggerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AlertTriggerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>[]
          }
          upsert: {
            args: Prisma.AlertTriggerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertTriggerPayload>
          }
          aggregate: {
            args: Prisma.AlertTriggerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlertTrigger>
          }
          groupBy: {
            args: Prisma.AlertTriggerGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlertTriggerGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlertTriggerCountArgs<ExtArgs>
            result: $Utils.Optional<AlertTriggerCountAggregateOutputType> | number
          }
        }
      }
      PriceHistory: {
        payload: Prisma.$PriceHistoryPayload<ExtArgs>
        fields: Prisma.PriceHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PriceHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PriceHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          findFirst: {
            args: Prisma.PriceHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PriceHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          findMany: {
            args: Prisma.PriceHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>[]
          }
          create: {
            args: Prisma.PriceHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          createMany: {
            args: Prisma.PriceHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PriceHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>[]
          }
          delete: {
            args: Prisma.PriceHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          update: {
            args: Prisma.PriceHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          deleteMany: {
            args: Prisma.PriceHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PriceHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PriceHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>[]
          }
          upsert: {
            args: Prisma.PriceHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          aggregate: {
            args: Prisma.PriceHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePriceHistory>
          }
          groupBy: {
            args: Prisma.PriceHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.PriceHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<PriceHistoryCountAggregateOutputType> | number
          }
        }
      }
      AlertHistory: {
        payload: Prisma.$AlertHistoryPayload<ExtArgs>
        fields: Prisma.AlertHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlertHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlertHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>
          }
          findFirst: {
            args: Prisma.AlertHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlertHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>
          }
          findMany: {
            args: Prisma.AlertHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>[]
          }
          create: {
            args: Prisma.AlertHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>
          }
          createMany: {
            args: Prisma.AlertHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlertHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>[]
          }
          delete: {
            args: Prisma.AlertHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>
          }
          update: {
            args: Prisma.AlertHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>
          }
          deleteMany: {
            args: Prisma.AlertHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlertHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AlertHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>[]
          }
          upsert: {
            args: Prisma.AlertHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertHistoryPayload>
          }
          aggregate: {
            args: Prisma.AlertHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlertHistory>
          }
          groupBy: {
            args: Prisma.AlertHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlertHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlertHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<AlertHistoryCountAggregateOutputType> | number
          }
        }
      }
      MarketIndicators: {
        payload: Prisma.$MarketIndicatorsPayload<ExtArgs>
        fields: Prisma.MarketIndicatorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarketIndicatorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarketIndicatorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>
          }
          findFirst: {
            args: Prisma.MarketIndicatorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarketIndicatorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>
          }
          findMany: {
            args: Prisma.MarketIndicatorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>[]
          }
          create: {
            args: Prisma.MarketIndicatorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>
          }
          createMany: {
            args: Prisma.MarketIndicatorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarketIndicatorsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>[]
          }
          delete: {
            args: Prisma.MarketIndicatorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>
          }
          update: {
            args: Prisma.MarketIndicatorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>
          }
          deleteMany: {
            args: Prisma.MarketIndicatorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarketIndicatorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MarketIndicatorsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>[]
          }
          upsert: {
            args: Prisma.MarketIndicatorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketIndicatorsPayload>
          }
          aggregate: {
            args: Prisma.MarketIndicatorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarketIndicators>
          }
          groupBy: {
            args: Prisma.MarketIndicatorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarketIndicatorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarketIndicatorsCountArgs<ExtArgs>
            result: $Utils.Optional<MarketIndicatorsCountAggregateOutputType> | number
          }
        }
      }
      AlertSettings: {
        payload: Prisma.$AlertSettingsPayload<ExtArgs>
        fields: Prisma.AlertSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlertSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlertSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>
          }
          findFirst: {
            args: Prisma.AlertSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlertSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>
          }
          findMany: {
            args: Prisma.AlertSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>[]
          }
          create: {
            args: Prisma.AlertSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>
          }
          createMany: {
            args: Prisma.AlertSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlertSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>[]
          }
          delete: {
            args: Prisma.AlertSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>
          }
          update: {
            args: Prisma.AlertSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>
          }
          deleteMany: {
            args: Prisma.AlertSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlertSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AlertSettingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>[]
          }
          upsert: {
            args: Prisma.AlertSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlertSettingsPayload>
          }
          aggregate: {
            args: Prisma.AlertSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlertSettings>
          }
          groupBy: {
            args: Prisma.AlertSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlertSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlertSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<AlertSettingsCountAggregateOutputType> | number
          }
        }
      }
      AIProviderSettings: {
        payload: Prisma.$AIProviderSettingsPayload<ExtArgs>
        fields: Prisma.AIProviderSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AIProviderSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AIProviderSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>
          }
          findFirst: {
            args: Prisma.AIProviderSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AIProviderSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>
          }
          findMany: {
            args: Prisma.AIProviderSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>[]
          }
          create: {
            args: Prisma.AIProviderSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>
          }
          createMany: {
            args: Prisma.AIProviderSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AIProviderSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>[]
          }
          delete: {
            args: Prisma.AIProviderSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>
          }
          update: {
            args: Prisma.AIProviderSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>
          }
          deleteMany: {
            args: Prisma.AIProviderSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AIProviderSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AIProviderSettingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>[]
          }
          upsert: {
            args: Prisma.AIProviderSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIProviderSettingsPayload>
          }
          aggregate: {
            args: Prisma.AIProviderSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAIProviderSettings>
          }
          groupBy: {
            args: Prisma.AIProviderSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AIProviderSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AIProviderSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<AIProviderSettingsCountAggregateOutputType> | number
          }
        }
      }
      SystemMetrics: {
        payload: Prisma.$SystemMetricsPayload<ExtArgs>
        fields: Prisma.SystemMetricsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemMetricsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemMetricsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>
          }
          findFirst: {
            args: Prisma.SystemMetricsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemMetricsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>
          }
          findMany: {
            args: Prisma.SystemMetricsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>[]
          }
          create: {
            args: Prisma.SystemMetricsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>
          }
          createMany: {
            args: Prisma.SystemMetricsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SystemMetricsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>[]
          }
          delete: {
            args: Prisma.SystemMetricsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>
          }
          update: {
            args: Prisma.SystemMetricsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>
          }
          deleteMany: {
            args: Prisma.SystemMetricsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemMetricsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SystemMetricsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>[]
          }
          upsert: {
            args: Prisma.SystemMetricsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemMetricsPayload>
          }
          aggregate: {
            args: Prisma.SystemMetricsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystemMetrics>
          }
          groupBy: {
            args: Prisma.SystemMetricsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemMetricsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemMetricsCountArgs<ExtArgs>
            result: $Utils.Optional<SystemMetricsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    organization?: OrganizationOmit
    organizationMembership?: OrganizationMembershipOmit
    user?: UserOmit
    userSession?: UserSessionOmit
    article?: ArticleOmit
    template?: TemplateOmit
    articleVersion?: ArticleVersionOmit
    articleAnalytics?: ArticleAnalyticsOmit
    newsItem?: NewsItemOmit
    rSSSource?: RSSSourceOmit
    priceAlert?: PriceAlertOmit
    alertTrigger?: AlertTriggerOmit
    priceHistory?: PriceHistoryOmit
    alertHistory?: AlertHistoryOmit
    marketIndicators?: MarketIndicatorsOmit
    alertSettings?: AlertSettingsOmit
    aIProviderSettings?: AIProviderSettingsOmit
    systemMetrics?: SystemMetricsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type OrganizationCountOutputType
   */

  export type OrganizationCountOutputType = {
    memberships: number
    articles: number
    templates: number
    aiProviderSettings: number
    alertSettings: number
    analytics: number
  }

  export type OrganizationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    memberships?: boolean | OrganizationCountOutputTypeCountMembershipsArgs
    articles?: boolean | OrganizationCountOutputTypeCountArticlesArgs
    templates?: boolean | OrganizationCountOutputTypeCountTemplatesArgs
    aiProviderSettings?: boolean | OrganizationCountOutputTypeCountAiProviderSettingsArgs
    alertSettings?: boolean | OrganizationCountOutputTypeCountAlertSettingsArgs
    analytics?: boolean | OrganizationCountOutputTypeCountAnalyticsArgs
  }

  // Custom InputTypes
  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationCountOutputType
     */
    select?: OrganizationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationMembershipWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountArticlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountTemplatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TemplateWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountAiProviderSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIProviderSettingsWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountAlertSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlertSettingsWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleAnalyticsWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    memberships: number
    aiProviderSettings: number
    alertSettings: number
    articleVersions: number
    articles: number
    sessions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    memberships?: boolean | UserCountOutputTypeCountMembershipsArgs
    aiProviderSettings?: boolean | UserCountOutputTypeCountAiProviderSettingsArgs
    alertSettings?: boolean | UserCountOutputTypeCountAlertSettingsArgs
    articleVersions?: boolean | UserCountOutputTypeCountArticleVersionsArgs
    articles?: boolean | UserCountOutputTypeCountArticlesArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationMembershipWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAiProviderSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIProviderSettingsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAlertSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlertSettingsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountArticleVersionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleVersionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountArticlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
  }


  /**
   * Count Type ArticleCountOutputType
   */

  export type ArticleCountOutputType = {
    analytics: number
    versions: number
  }

  export type ArticleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analytics?: boolean | ArticleCountOutputTypeCountAnalyticsArgs
    versions?: boolean | ArticleCountOutputTypeCountVersionsArgs
  }

  // Custom InputTypes
  /**
   * ArticleCountOutputType without action
   */
  export type ArticleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleCountOutputType
     */
    select?: ArticleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ArticleCountOutputType without action
   */
  export type ArticleCountOutputTypeCountAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleAnalyticsWhereInput
  }

  /**
   * ArticleCountOutputType without action
   */
  export type ArticleCountOutputTypeCountVersionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleVersionWhereInput
  }


  /**
   * Count Type TemplateCountOutputType
   */

  export type TemplateCountOutputType = {
    articles: number
  }

  export type TemplateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | TemplateCountOutputTypeCountArticlesArgs
  }

  // Custom InputTypes
  /**
   * TemplateCountOutputType without action
   */
  export type TemplateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TemplateCountOutputType
     */
    select?: TemplateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TemplateCountOutputType without action
   */
  export type TemplateCountOutputTypeCountArticlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Organization
   */

  export type AggregateOrganization = {
    _count: OrganizationCountAggregateOutputType | null
    _avg: OrganizationAvgAggregateOutputType | null
    _sum: OrganizationSumAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  export type OrganizationAvgAggregateOutputType = {
    maxUsers: number | null
  }

  export type OrganizationSumAggregateOutputType = {
    maxUsers: number | null
  }

  export type OrganizationMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    domain: string | null
    plan: string | null
    maxUsers: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrganizationMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    domain: string | null
    plan: string | null
    maxUsers: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrganizationCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    domain: number
    settings: number
    plan: number
    maxUsers: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrganizationAvgAggregateInputType = {
    maxUsers?: true
  }

  export type OrganizationSumAggregateInputType = {
    maxUsers?: true
  }

  export type OrganizationMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    domain?: true
    plan?: true
    maxUsers?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrganizationMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    domain?: true
    plan?: true
    maxUsers?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrganizationCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    domain?: true
    settings?: true
    plan?: true
    maxUsers?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrganizationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organization to aggregate.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Organizations
    **/
    _count?: true | OrganizationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrganizationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrganizationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationMaxAggregateInputType
  }

  export type GetOrganizationAggregateType<T extends OrganizationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganization]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganization[P]>
      : GetScalarType<T[P], AggregateOrganization[P]>
  }




  export type OrganizationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithAggregationInput | OrganizationOrderByWithAggregationInput[]
    by: OrganizationScalarFieldEnum[] | OrganizationScalarFieldEnum
    having?: OrganizationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationCountAggregateInputType | true
    _avg?: OrganizationAvgAggregateInputType
    _sum?: OrganizationSumAggregateInputType
    _min?: OrganizationMinAggregateInputType
    _max?: OrganizationMaxAggregateInputType
  }

  export type OrganizationGroupByOutputType = {
    id: string
    name: string
    slug: string
    domain: string | null
    settings: JsonValue | null
    plan: string
    maxUsers: number
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: OrganizationCountAggregateOutputType | null
    _avg: OrganizationAvgAggregateOutputType | null
    _sum: OrganizationSumAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  type GetOrganizationGroupByPayload<T extends OrganizationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    domain?: boolean
    settings?: boolean
    plan?: boolean
    maxUsers?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    memberships?: boolean | Organization$membershipsArgs<ExtArgs>
    articles?: boolean | Organization$articlesArgs<ExtArgs>
    templates?: boolean | Organization$templatesArgs<ExtArgs>
    aiProviderSettings?: boolean | Organization$aiProviderSettingsArgs<ExtArgs>
    alertSettings?: boolean | Organization$alertSettingsArgs<ExtArgs>
    analytics?: boolean | Organization$analyticsArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    domain?: boolean
    settings?: boolean
    plan?: boolean
    maxUsers?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    domain?: boolean
    settings?: boolean
    plan?: boolean
    maxUsers?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    domain?: boolean
    settings?: boolean
    plan?: boolean
    maxUsers?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrganizationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "domain" | "settings" | "plan" | "maxUsers" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["organization"]>
  export type OrganizationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    memberships?: boolean | Organization$membershipsArgs<ExtArgs>
    articles?: boolean | Organization$articlesArgs<ExtArgs>
    templates?: boolean | Organization$templatesArgs<ExtArgs>
    aiProviderSettings?: boolean | Organization$aiProviderSettingsArgs<ExtArgs>
    alertSettings?: boolean | Organization$alertSettingsArgs<ExtArgs>
    analytics?: boolean | Organization$analyticsArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrganizationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type OrganizationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $OrganizationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Organization"
    objects: {
      memberships: Prisma.$OrganizationMembershipPayload<ExtArgs>[]
      articles: Prisma.$ArticlePayload<ExtArgs>[]
      templates: Prisma.$TemplatePayload<ExtArgs>[]
      aiProviderSettings: Prisma.$AIProviderSettingsPayload<ExtArgs>[]
      alertSettings: Prisma.$AlertSettingsPayload<ExtArgs>[]
      analytics: Prisma.$ArticleAnalyticsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      domain: string | null
      settings: Prisma.JsonValue | null
      plan: string
      maxUsers: number
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["organization"]>
    composites: {}
  }

  type OrganizationGetPayload<S extends boolean | null | undefined | OrganizationDefaultArgs> = $Result.GetResult<Prisma.$OrganizationPayload, S>

  type OrganizationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrganizationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganizationCountAggregateInputType | true
    }

  export interface OrganizationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Organization'], meta: { name: 'Organization' } }
    /**
     * Find zero or one Organization that matches the filter.
     * @param {OrganizationFindUniqueArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationFindUniqueArgs>(args: SelectSubset<T, OrganizationFindUniqueArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Organization that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrganizationFindUniqueOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organization that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationFindFirstArgs>(args?: SelectSubset<T, OrganizationFindFirstArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organization that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Organizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizations
     * const organizations = await prisma.organization.findMany()
     * 
     * // Get first 10 Organizations
     * const organizations = await prisma.organization.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationWithIdOnly = await prisma.organization.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationFindManyArgs>(args?: SelectSubset<T, OrganizationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Organization.
     * @param {OrganizationCreateArgs} args - Arguments to create a Organization.
     * @example
     * // Create one Organization
     * const Organization = await prisma.organization.create({
     *   data: {
     *     // ... data to create a Organization
     *   }
     * })
     * 
     */
    create<T extends OrganizationCreateArgs>(args: SelectSubset<T, OrganizationCreateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Organizations.
     * @param {OrganizationCreateManyArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationCreateManyArgs>(args?: SelectSubset<T, OrganizationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Organizations and returns the data saved in the database.
     * @param {OrganizationCreateManyAndReturnArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Organization.
     * @param {OrganizationDeleteArgs} args - Arguments to delete one Organization.
     * @example
     * // Delete one Organization
     * const Organization = await prisma.organization.delete({
     *   where: {
     *     // ... filter to delete one Organization
     *   }
     * })
     * 
     */
    delete<T extends OrganizationDeleteArgs>(args: SelectSubset<T, OrganizationDeleteArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Organization.
     * @param {OrganizationUpdateArgs} args - Arguments to update one Organization.
     * @example
     * // Update one Organization
     * const organization = await prisma.organization.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationUpdateArgs>(args: SelectSubset<T, OrganizationUpdateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Organizations.
     * @param {OrganizationDeleteManyArgs} args - Arguments to filter Organizations to delete.
     * @example
     * // Delete a few Organizations
     * const { count } = await prisma.organization.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationDeleteManyArgs>(args?: SelectSubset<T, OrganizationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationUpdateManyArgs>(args: SelectSubset<T, OrganizationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations and returns the data updated in the database.
     * @param {OrganizationUpdateManyAndReturnArgs} args - Arguments to update many Organizations.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrganizationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrganizationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Organization.
     * @param {OrganizationUpsertArgs} args - Arguments to update or create a Organization.
     * @example
     * // Update or create a Organization
     * const organization = await prisma.organization.upsert({
     *   create: {
     *     // ... data to create a Organization
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organization we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationUpsertArgs>(args: SelectSubset<T, OrganizationUpsertArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationCountArgs} args - Arguments to filter Organizations to count.
     * @example
     * // Count the number of Organizations
     * const count = await prisma.organization.count({
     *   where: {
     *     // ... the filter for the Organizations we want to count
     *   }
     * })
    **/
    count<T extends OrganizationCountArgs>(
      args?: Subset<T, OrganizationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationAggregateArgs>(args: Subset<T, OrganizationAggregateArgs>): Prisma.PrismaPromise<GetOrganizationAggregateType<T>>

    /**
     * Group by Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Organization model
   */
  readonly fields: OrganizationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Organization.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    memberships<T extends Organization$membershipsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$membershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    articles<T extends Organization$articlesArgs<ExtArgs> = {}>(args?: Subset<T, Organization$articlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    templates<T extends Organization$templatesArgs<ExtArgs> = {}>(args?: Subset<T, Organization$templatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aiProviderSettings<T extends Organization$aiProviderSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$aiProviderSettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alertSettings<T extends Organization$alertSettingsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$alertSettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    analytics<T extends Organization$analyticsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$analyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Organization model
   */
  interface OrganizationFieldRefs {
    readonly id: FieldRef<"Organization", 'String'>
    readonly name: FieldRef<"Organization", 'String'>
    readonly slug: FieldRef<"Organization", 'String'>
    readonly domain: FieldRef<"Organization", 'String'>
    readonly settings: FieldRef<"Organization", 'Json'>
    readonly plan: FieldRef<"Organization", 'String'>
    readonly maxUsers: FieldRef<"Organization", 'Int'>
    readonly isActive: FieldRef<"Organization", 'Boolean'>
    readonly createdAt: FieldRef<"Organization", 'DateTime'>
    readonly updatedAt: FieldRef<"Organization", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Organization findUnique
   */
  export type OrganizationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findUniqueOrThrow
   */
  export type OrganizationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findFirst
   */
  export type OrganizationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findFirstOrThrow
   */
  export type OrganizationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findMany
   */
  export type OrganizationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organizations to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization create
   */
  export type OrganizationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to create a Organization.
     */
    data: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
  }

  /**
   * Organization createMany
   */
  export type OrganizationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization createManyAndReturn
   */
  export type OrganizationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization update
   */
  export type OrganizationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to update a Organization.
     */
    data: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
    /**
     * Choose, which Organization to update.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization updateMany
   */
  export type OrganizationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to update.
     */
    limit?: number
  }

  /**
   * Organization updateManyAndReturn
   */
  export type OrganizationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to update.
     */
    limit?: number
  }

  /**
   * Organization upsert
   */
  export type OrganizationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The filter to search for the Organization to update in case it exists.
     */
    where: OrganizationWhereUniqueInput
    /**
     * In case the Organization found by the `where` argument doesn't exist, create a new Organization with this data.
     */
    create: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
    /**
     * In case the Organization was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
  }

  /**
   * Organization delete
   */
  export type OrganizationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter which Organization to delete.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization deleteMany
   */
  export type OrganizationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organizations to delete
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to delete.
     */
    limit?: number
  }

  /**
   * Organization.memberships
   */
  export type Organization$membershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    where?: OrganizationMembershipWhereInput
    orderBy?: OrganizationMembershipOrderByWithRelationInput | OrganizationMembershipOrderByWithRelationInput[]
    cursor?: OrganizationMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationMembershipScalarFieldEnum | OrganizationMembershipScalarFieldEnum[]
  }

  /**
   * Organization.articles
   */
  export type Organization$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    where?: ArticleWhereInput
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    cursor?: ArticleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleScalarFieldEnum | ArticleScalarFieldEnum[]
  }

  /**
   * Organization.templates
   */
  export type Organization$templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    where?: TemplateWhereInput
    orderBy?: TemplateOrderByWithRelationInput | TemplateOrderByWithRelationInput[]
    cursor?: TemplateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TemplateScalarFieldEnum | TemplateScalarFieldEnum[]
  }

  /**
   * Organization.aiProviderSettings
   */
  export type Organization$aiProviderSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    where?: AIProviderSettingsWhereInput
    orderBy?: AIProviderSettingsOrderByWithRelationInput | AIProviderSettingsOrderByWithRelationInput[]
    cursor?: AIProviderSettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AIProviderSettingsScalarFieldEnum | AIProviderSettingsScalarFieldEnum[]
  }

  /**
   * Organization.alertSettings
   */
  export type Organization$alertSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    where?: AlertSettingsWhereInput
    orderBy?: AlertSettingsOrderByWithRelationInput | AlertSettingsOrderByWithRelationInput[]
    cursor?: AlertSettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlertSettingsScalarFieldEnum | AlertSettingsScalarFieldEnum[]
  }

  /**
   * Organization.analytics
   */
  export type Organization$analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    where?: ArticleAnalyticsWhereInput
    orderBy?: ArticleAnalyticsOrderByWithRelationInput | ArticleAnalyticsOrderByWithRelationInput[]
    cursor?: ArticleAnalyticsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleAnalyticsScalarFieldEnum | ArticleAnalyticsScalarFieldEnum[]
  }

  /**
   * Organization without action
   */
  export type OrganizationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
  }


  /**
   * Model OrganizationMembership
   */

  export type AggregateOrganizationMembership = {
    _count: OrganizationMembershipCountAggregateOutputType | null
    _min: OrganizationMembershipMinAggregateOutputType | null
    _max: OrganizationMembershipMaxAggregateOutputType | null
  }

  export type OrganizationMembershipMinAggregateOutputType = {
    id: string | null
    userId: string | null
    organizationId: string | null
    role: $Enums.MemberRole | null
    isActive: boolean | null
    joinedAt: Date | null
  }

  export type OrganizationMembershipMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    organizationId: string | null
    role: $Enums.MemberRole | null
    isActive: boolean | null
    joinedAt: Date | null
  }

  export type OrganizationMembershipCountAggregateOutputType = {
    id: number
    userId: number
    organizationId: number
    role: number
    isActive: number
    joinedAt: number
    _all: number
  }


  export type OrganizationMembershipMinAggregateInputType = {
    id?: true
    userId?: true
    organizationId?: true
    role?: true
    isActive?: true
    joinedAt?: true
  }

  export type OrganizationMembershipMaxAggregateInputType = {
    id?: true
    userId?: true
    organizationId?: true
    role?: true
    isActive?: true
    joinedAt?: true
  }

  export type OrganizationMembershipCountAggregateInputType = {
    id?: true
    userId?: true
    organizationId?: true
    role?: true
    isActive?: true
    joinedAt?: true
    _all?: true
  }

  export type OrganizationMembershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrganizationMembership to aggregate.
     */
    where?: OrganizationMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationMemberships to fetch.
     */
    orderBy?: OrganizationMembershipOrderByWithRelationInput | OrganizationMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrganizationMemberships
    **/
    _count?: true | OrganizationMembershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationMembershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationMembershipMaxAggregateInputType
  }

  export type GetOrganizationMembershipAggregateType<T extends OrganizationMembershipAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganizationMembership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganizationMembership[P]>
      : GetScalarType<T[P], AggregateOrganizationMembership[P]>
  }




  export type OrganizationMembershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationMembershipWhereInput
    orderBy?: OrganizationMembershipOrderByWithAggregationInput | OrganizationMembershipOrderByWithAggregationInput[]
    by: OrganizationMembershipScalarFieldEnum[] | OrganizationMembershipScalarFieldEnum
    having?: OrganizationMembershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationMembershipCountAggregateInputType | true
    _min?: OrganizationMembershipMinAggregateInputType
    _max?: OrganizationMembershipMaxAggregateInputType
  }

  export type OrganizationMembershipGroupByOutputType = {
    id: string
    userId: string
    organizationId: string
    role: $Enums.MemberRole
    isActive: boolean
    joinedAt: Date
    _count: OrganizationMembershipCountAggregateOutputType | null
    _min: OrganizationMembershipMinAggregateOutputType | null
    _max: OrganizationMembershipMaxAggregateOutputType | null
  }

  type GetOrganizationMembershipGroupByPayload<T extends OrganizationMembershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationMembershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationMembershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationMembershipGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationMembershipGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationMembershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    organizationId?: boolean
    role?: boolean
    isActive?: boolean
    joinedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizationMembership"]>

  export type OrganizationMembershipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    organizationId?: boolean
    role?: boolean
    isActive?: boolean
    joinedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizationMembership"]>

  export type OrganizationMembershipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    organizationId?: boolean
    role?: boolean
    isActive?: boolean
    joinedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizationMembership"]>

  export type OrganizationMembershipSelectScalar = {
    id?: boolean
    userId?: boolean
    organizationId?: boolean
    role?: boolean
    isActive?: boolean
    joinedAt?: boolean
  }

  export type OrganizationMembershipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "organizationId" | "role" | "isActive" | "joinedAt", ExtArgs["result"]["organizationMembership"]>
  export type OrganizationMembershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type OrganizationMembershipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type OrganizationMembershipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $OrganizationMembershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrganizationMembership"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      organization: Prisma.$OrganizationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      organizationId: string
      role: $Enums.MemberRole
      isActive: boolean
      joinedAt: Date
    }, ExtArgs["result"]["organizationMembership"]>
    composites: {}
  }

  type OrganizationMembershipGetPayload<S extends boolean | null | undefined | OrganizationMembershipDefaultArgs> = $Result.GetResult<Prisma.$OrganizationMembershipPayload, S>

  type OrganizationMembershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrganizationMembershipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganizationMembershipCountAggregateInputType | true
    }

  export interface OrganizationMembershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrganizationMembership'], meta: { name: 'OrganizationMembership' } }
    /**
     * Find zero or one OrganizationMembership that matches the filter.
     * @param {OrganizationMembershipFindUniqueArgs} args - Arguments to find a OrganizationMembership
     * @example
     * // Get one OrganizationMembership
     * const organizationMembership = await prisma.organizationMembership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationMembershipFindUniqueArgs>(args: SelectSubset<T, OrganizationMembershipFindUniqueArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrganizationMembership that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrganizationMembershipFindUniqueOrThrowArgs} args - Arguments to find a OrganizationMembership
     * @example
     * // Get one OrganizationMembership
     * const organizationMembership = await prisma.organizationMembership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationMembershipFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationMembershipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrganizationMembership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipFindFirstArgs} args - Arguments to find a OrganizationMembership
     * @example
     * // Get one OrganizationMembership
     * const organizationMembership = await prisma.organizationMembership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationMembershipFindFirstArgs>(args?: SelectSubset<T, OrganizationMembershipFindFirstArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrganizationMembership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipFindFirstOrThrowArgs} args - Arguments to find a OrganizationMembership
     * @example
     * // Get one OrganizationMembership
     * const organizationMembership = await prisma.organizationMembership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationMembershipFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationMembershipFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrganizationMemberships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrganizationMemberships
     * const organizationMemberships = await prisma.organizationMembership.findMany()
     * 
     * // Get first 10 OrganizationMemberships
     * const organizationMemberships = await prisma.organizationMembership.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationMembershipWithIdOnly = await prisma.organizationMembership.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationMembershipFindManyArgs>(args?: SelectSubset<T, OrganizationMembershipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrganizationMembership.
     * @param {OrganizationMembershipCreateArgs} args - Arguments to create a OrganizationMembership.
     * @example
     * // Create one OrganizationMembership
     * const OrganizationMembership = await prisma.organizationMembership.create({
     *   data: {
     *     // ... data to create a OrganizationMembership
     *   }
     * })
     * 
     */
    create<T extends OrganizationMembershipCreateArgs>(args: SelectSubset<T, OrganizationMembershipCreateArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrganizationMemberships.
     * @param {OrganizationMembershipCreateManyArgs} args - Arguments to create many OrganizationMemberships.
     * @example
     * // Create many OrganizationMemberships
     * const organizationMembership = await prisma.organizationMembership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationMembershipCreateManyArgs>(args?: SelectSubset<T, OrganizationMembershipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrganizationMemberships and returns the data saved in the database.
     * @param {OrganizationMembershipCreateManyAndReturnArgs} args - Arguments to create many OrganizationMemberships.
     * @example
     * // Create many OrganizationMemberships
     * const organizationMembership = await prisma.organizationMembership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrganizationMemberships and only return the `id`
     * const organizationMembershipWithIdOnly = await prisma.organizationMembership.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationMembershipCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationMembershipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrganizationMembership.
     * @param {OrganizationMembershipDeleteArgs} args - Arguments to delete one OrganizationMembership.
     * @example
     * // Delete one OrganizationMembership
     * const OrganizationMembership = await prisma.organizationMembership.delete({
     *   where: {
     *     // ... filter to delete one OrganizationMembership
     *   }
     * })
     * 
     */
    delete<T extends OrganizationMembershipDeleteArgs>(args: SelectSubset<T, OrganizationMembershipDeleteArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrganizationMembership.
     * @param {OrganizationMembershipUpdateArgs} args - Arguments to update one OrganizationMembership.
     * @example
     * // Update one OrganizationMembership
     * const organizationMembership = await prisma.organizationMembership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationMembershipUpdateArgs>(args: SelectSubset<T, OrganizationMembershipUpdateArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrganizationMemberships.
     * @param {OrganizationMembershipDeleteManyArgs} args - Arguments to filter OrganizationMemberships to delete.
     * @example
     * // Delete a few OrganizationMemberships
     * const { count } = await prisma.organizationMembership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationMembershipDeleteManyArgs>(args?: SelectSubset<T, OrganizationMembershipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrganizationMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrganizationMemberships
     * const organizationMembership = await prisma.organizationMembership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationMembershipUpdateManyArgs>(args: SelectSubset<T, OrganizationMembershipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrganizationMemberships and returns the data updated in the database.
     * @param {OrganizationMembershipUpdateManyAndReturnArgs} args - Arguments to update many OrganizationMemberships.
     * @example
     * // Update many OrganizationMemberships
     * const organizationMembership = await prisma.organizationMembership.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrganizationMemberships and only return the `id`
     * const organizationMembershipWithIdOnly = await prisma.organizationMembership.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrganizationMembershipUpdateManyAndReturnArgs>(args: SelectSubset<T, OrganizationMembershipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrganizationMembership.
     * @param {OrganizationMembershipUpsertArgs} args - Arguments to update or create a OrganizationMembership.
     * @example
     * // Update or create a OrganizationMembership
     * const organizationMembership = await prisma.organizationMembership.upsert({
     *   create: {
     *     // ... data to create a OrganizationMembership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrganizationMembership we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationMembershipUpsertArgs>(args: SelectSubset<T, OrganizationMembershipUpsertArgs<ExtArgs>>): Prisma__OrganizationMembershipClient<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrganizationMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipCountArgs} args - Arguments to filter OrganizationMemberships to count.
     * @example
     * // Count the number of OrganizationMemberships
     * const count = await prisma.organizationMembership.count({
     *   where: {
     *     // ... the filter for the OrganizationMemberships we want to count
     *   }
     * })
    **/
    count<T extends OrganizationMembershipCountArgs>(
      args?: Subset<T, OrganizationMembershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationMembershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrganizationMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationMembershipAggregateArgs>(args: Subset<T, OrganizationMembershipAggregateArgs>): Prisma.PrismaPromise<GetOrganizationMembershipAggregateType<T>>

    /**
     * Group by OrganizationMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationMembershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationMembershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationMembershipGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationMembershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationMembershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationMembershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrganizationMembership model
   */
  readonly fields: OrganizationMembershipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrganizationMembership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationMembershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrganizationMembership model
   */
  interface OrganizationMembershipFieldRefs {
    readonly id: FieldRef<"OrganizationMembership", 'String'>
    readonly userId: FieldRef<"OrganizationMembership", 'String'>
    readonly organizationId: FieldRef<"OrganizationMembership", 'String'>
    readonly role: FieldRef<"OrganizationMembership", 'MemberRole'>
    readonly isActive: FieldRef<"OrganizationMembership", 'Boolean'>
    readonly joinedAt: FieldRef<"OrganizationMembership", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrganizationMembership findUnique
   */
  export type OrganizationMembershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationMembership to fetch.
     */
    where: OrganizationMembershipWhereUniqueInput
  }

  /**
   * OrganizationMembership findUniqueOrThrow
   */
  export type OrganizationMembershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationMembership to fetch.
     */
    where: OrganizationMembershipWhereUniqueInput
  }

  /**
   * OrganizationMembership findFirst
   */
  export type OrganizationMembershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationMembership to fetch.
     */
    where?: OrganizationMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationMemberships to fetch.
     */
    orderBy?: OrganizationMembershipOrderByWithRelationInput | OrganizationMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrganizationMemberships.
     */
    cursor?: OrganizationMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrganizationMemberships.
     */
    distinct?: OrganizationMembershipScalarFieldEnum | OrganizationMembershipScalarFieldEnum[]
  }

  /**
   * OrganizationMembership findFirstOrThrow
   */
  export type OrganizationMembershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationMembership to fetch.
     */
    where?: OrganizationMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationMemberships to fetch.
     */
    orderBy?: OrganizationMembershipOrderByWithRelationInput | OrganizationMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrganizationMemberships.
     */
    cursor?: OrganizationMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrganizationMemberships.
     */
    distinct?: OrganizationMembershipScalarFieldEnum | OrganizationMembershipScalarFieldEnum[]
  }

  /**
   * OrganizationMembership findMany
   */
  export type OrganizationMembershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationMemberships to fetch.
     */
    where?: OrganizationMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationMemberships to fetch.
     */
    orderBy?: OrganizationMembershipOrderByWithRelationInput | OrganizationMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrganizationMemberships.
     */
    cursor?: OrganizationMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationMemberships.
     */
    skip?: number
    distinct?: OrganizationMembershipScalarFieldEnum | OrganizationMembershipScalarFieldEnum[]
  }

  /**
   * OrganizationMembership create
   */
  export type OrganizationMembershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * The data needed to create a OrganizationMembership.
     */
    data: XOR<OrganizationMembershipCreateInput, OrganizationMembershipUncheckedCreateInput>
  }

  /**
   * OrganizationMembership createMany
   */
  export type OrganizationMembershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrganizationMemberships.
     */
    data: OrganizationMembershipCreateManyInput | OrganizationMembershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrganizationMembership createManyAndReturn
   */
  export type OrganizationMembershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * The data used to create many OrganizationMemberships.
     */
    data: OrganizationMembershipCreateManyInput | OrganizationMembershipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrganizationMembership update
   */
  export type OrganizationMembershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * The data needed to update a OrganizationMembership.
     */
    data: XOR<OrganizationMembershipUpdateInput, OrganizationMembershipUncheckedUpdateInput>
    /**
     * Choose, which OrganizationMembership to update.
     */
    where: OrganizationMembershipWhereUniqueInput
  }

  /**
   * OrganizationMembership updateMany
   */
  export type OrganizationMembershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrganizationMemberships.
     */
    data: XOR<OrganizationMembershipUpdateManyMutationInput, OrganizationMembershipUncheckedUpdateManyInput>
    /**
     * Filter which OrganizationMemberships to update
     */
    where?: OrganizationMembershipWhereInput
    /**
     * Limit how many OrganizationMemberships to update.
     */
    limit?: number
  }

  /**
   * OrganizationMembership updateManyAndReturn
   */
  export type OrganizationMembershipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * The data used to update OrganizationMemberships.
     */
    data: XOR<OrganizationMembershipUpdateManyMutationInput, OrganizationMembershipUncheckedUpdateManyInput>
    /**
     * Filter which OrganizationMemberships to update
     */
    where?: OrganizationMembershipWhereInput
    /**
     * Limit how many OrganizationMemberships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrganizationMembership upsert
   */
  export type OrganizationMembershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * The filter to search for the OrganizationMembership to update in case it exists.
     */
    where: OrganizationMembershipWhereUniqueInput
    /**
     * In case the OrganizationMembership found by the `where` argument doesn't exist, create a new OrganizationMembership with this data.
     */
    create: XOR<OrganizationMembershipCreateInput, OrganizationMembershipUncheckedCreateInput>
    /**
     * In case the OrganizationMembership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationMembershipUpdateInput, OrganizationMembershipUncheckedUpdateInput>
  }

  /**
   * OrganizationMembership delete
   */
  export type OrganizationMembershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    /**
     * Filter which OrganizationMembership to delete.
     */
    where: OrganizationMembershipWhereUniqueInput
  }

  /**
   * OrganizationMembership deleteMany
   */
  export type OrganizationMembershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrganizationMemberships to delete
     */
    where?: OrganizationMembershipWhereInput
    /**
     * Limit how many OrganizationMemberships to delete.
     */
    limit?: number
  }

  /**
   * OrganizationMembership without action
   */
  export type OrganizationMembershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    username: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    avatar: string | null
    role: $Enums.UserRole | null
    isActive: boolean | null
    lastLoginAt: Date | null
    emailVerified: boolean | null
    emailVerifiedAt: Date | null
    mfaEnabled: boolean | null
    mfaSecret: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    username: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    avatar: string | null
    role: $Enums.UserRole | null
    isActive: boolean | null
    lastLoginAt: Date | null
    emailVerified: boolean | null
    emailVerifiedAt: Date | null
    mfaEnabled: boolean | null
    mfaSecret: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    username: number
    password: number
    firstName: number
    lastName: number
    avatar: number
    role: number
    isActive: number
    lastLoginAt: number
    emailVerified: number
    emailVerifiedAt: number
    preferences: number
    mfaEnabled: number
    mfaSecret: number
    mfaBackupCodes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    username?: true
    password?: true
    firstName?: true
    lastName?: true
    avatar?: true
    role?: true
    isActive?: true
    lastLoginAt?: true
    emailVerified?: true
    emailVerifiedAt?: true
    mfaEnabled?: true
    mfaSecret?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    username?: true
    password?: true
    firstName?: true
    lastName?: true
    avatar?: true
    role?: true
    isActive?: true
    lastLoginAt?: true
    emailVerified?: true
    emailVerifiedAt?: true
    mfaEnabled?: true
    mfaSecret?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    username?: true
    password?: true
    firstName?: true
    lastName?: true
    avatar?: true
    role?: true
    isActive?: true
    lastLoginAt?: true
    emailVerified?: true
    emailVerifiedAt?: true
    preferences?: true
    mfaEnabled?: true
    mfaSecret?: true
    mfaBackupCodes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    username: string
    password: string
    firstName: string | null
    lastName: string | null
    avatar: string | null
    role: $Enums.UserRole
    isActive: boolean
    lastLoginAt: Date | null
    emailVerified: boolean
    emailVerifiedAt: Date | null
    preferences: JsonValue | null
    mfaEnabled: boolean
    mfaSecret: string | null
    mfaBackupCodes: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    username?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    avatar?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    preferences?: boolean
    mfaEnabled?: boolean
    mfaSecret?: boolean
    mfaBackupCodes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    memberships?: boolean | User$membershipsArgs<ExtArgs>
    aiProviderSettings?: boolean | User$aiProviderSettingsArgs<ExtArgs>
    alertSettings?: boolean | User$alertSettingsArgs<ExtArgs>
    articleVersions?: boolean | User$articleVersionsArgs<ExtArgs>
    articles?: boolean | User$articlesArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    username?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    avatar?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    preferences?: boolean
    mfaEnabled?: boolean
    mfaSecret?: boolean
    mfaBackupCodes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    username?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    avatar?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    preferences?: boolean
    mfaEnabled?: boolean
    mfaSecret?: boolean
    mfaBackupCodes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    username?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    avatar?: boolean
    role?: boolean
    isActive?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    preferences?: boolean
    mfaEnabled?: boolean
    mfaSecret?: boolean
    mfaBackupCodes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "username" | "password" | "firstName" | "lastName" | "avatar" | "role" | "isActive" | "lastLoginAt" | "emailVerified" | "emailVerifiedAt" | "preferences" | "mfaEnabled" | "mfaSecret" | "mfaBackupCodes" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    memberships?: boolean | User$membershipsArgs<ExtArgs>
    aiProviderSettings?: boolean | User$aiProviderSettingsArgs<ExtArgs>
    alertSettings?: boolean | User$alertSettingsArgs<ExtArgs>
    articleVersions?: boolean | User$articleVersionsArgs<ExtArgs>
    articles?: boolean | User$articlesArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      memberships: Prisma.$OrganizationMembershipPayload<ExtArgs>[]
      aiProviderSettings: Prisma.$AIProviderSettingsPayload<ExtArgs>[]
      alertSettings: Prisma.$AlertSettingsPayload<ExtArgs>[]
      articleVersions: Prisma.$ArticleVersionPayload<ExtArgs>[]
      articles: Prisma.$ArticlePayload<ExtArgs>[]
      sessions: Prisma.$UserSessionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      username: string
      password: string
      firstName: string | null
      lastName: string | null
      avatar: string | null
      role: $Enums.UserRole
      isActive: boolean
      lastLoginAt: Date | null
      emailVerified: boolean
      emailVerifiedAt: Date | null
      preferences: Prisma.JsonValue | null
      mfaEnabled: boolean
      mfaSecret: string | null
      mfaBackupCodes: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    memberships<T extends User$membershipsArgs<ExtArgs> = {}>(args?: Subset<T, User$membershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aiProviderSettings<T extends User$aiProviderSettingsArgs<ExtArgs> = {}>(args?: Subset<T, User$aiProviderSettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alertSettings<T extends User$alertSettingsArgs<ExtArgs> = {}>(args?: Subset<T, User$alertSettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    articleVersions<T extends User$articleVersionsArgs<ExtArgs> = {}>(args?: Subset<T, User$articleVersionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    articles<T extends User$articlesArgs<ExtArgs> = {}>(args?: Subset<T, User$articlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly emailVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly preferences: FieldRef<"User", 'Json'>
    readonly mfaEnabled: FieldRef<"User", 'Boolean'>
    readonly mfaSecret: FieldRef<"User", 'String'>
    readonly mfaBackupCodes: FieldRef<"User", 'Json'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.memberships
   */
  export type User$membershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationMembership
     */
    select?: OrganizationMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationMembership
     */
    omit?: OrganizationMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationMembershipInclude<ExtArgs> | null
    where?: OrganizationMembershipWhereInput
    orderBy?: OrganizationMembershipOrderByWithRelationInput | OrganizationMembershipOrderByWithRelationInput[]
    cursor?: OrganizationMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationMembershipScalarFieldEnum | OrganizationMembershipScalarFieldEnum[]
  }

  /**
   * User.aiProviderSettings
   */
  export type User$aiProviderSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    where?: AIProviderSettingsWhereInput
    orderBy?: AIProviderSettingsOrderByWithRelationInput | AIProviderSettingsOrderByWithRelationInput[]
    cursor?: AIProviderSettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AIProviderSettingsScalarFieldEnum | AIProviderSettingsScalarFieldEnum[]
  }

  /**
   * User.alertSettings
   */
  export type User$alertSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    where?: AlertSettingsWhereInput
    orderBy?: AlertSettingsOrderByWithRelationInput | AlertSettingsOrderByWithRelationInput[]
    cursor?: AlertSettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlertSettingsScalarFieldEnum | AlertSettingsScalarFieldEnum[]
  }

  /**
   * User.articleVersions
   */
  export type User$articleVersionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    where?: ArticleVersionWhereInput
    orderBy?: ArticleVersionOrderByWithRelationInput | ArticleVersionOrderByWithRelationInput[]
    cursor?: ArticleVersionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleVersionScalarFieldEnum | ArticleVersionScalarFieldEnum[]
  }

  /**
   * User.articles
   */
  export type User$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    where?: ArticleWhereInput
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    cursor?: ArticleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleScalarFieldEnum | ArticleScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    cursor?: UserSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserSession
   */

  export type AggregateUserSession = {
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  export type UserSessionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    sessionToken: string | null
    userAgent: string | null
    ipAddress: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type UserSessionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    sessionToken: string | null
    userAgent: string | null
    ipAddress: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type UserSessionCountAggregateOutputType = {
    id: number
    userId: number
    sessionToken: number
    userAgent: number
    ipAddress: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type UserSessionMinAggregateInputType = {
    id?: true
    userId?: true
    sessionToken?: true
    userAgent?: true
    ipAddress?: true
    expiresAt?: true
    createdAt?: true
  }

  export type UserSessionMaxAggregateInputType = {
    id?: true
    userId?: true
    sessionToken?: true
    userAgent?: true
    ipAddress?: true
    expiresAt?: true
    createdAt?: true
  }

  export type UserSessionCountAggregateInputType = {
    id?: true
    userId?: true
    sessionToken?: true
    userAgent?: true
    ipAddress?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type UserSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSession to aggregate.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSessions
    **/
    _count?: true | UserSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSessionMaxAggregateInputType
  }

  export type GetUserSessionAggregateType<T extends UserSessionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSession[P]>
      : GetScalarType<T[P], AggregateUserSession[P]>
  }




  export type UserSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithAggregationInput | UserSessionOrderByWithAggregationInput[]
    by: UserSessionScalarFieldEnum[] | UserSessionScalarFieldEnum
    having?: UserSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSessionCountAggregateInputType | true
    _min?: UserSessionMinAggregateInputType
    _max?: UserSessionMaxAggregateInputType
  }

  export type UserSessionGroupByOutputType = {
    id: string
    userId: string
    sessionToken: string
    userAgent: string | null
    ipAddress: string | null
    expiresAt: Date
    createdAt: Date
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  type GetUserSessionGroupByPayload<T extends UserSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
            : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
        }
      >
    >


  export type UserSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sessionToken?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sessionToken?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sessionToken?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectScalar = {
    id?: boolean
    userId?: boolean
    sessionToken?: boolean
    userAgent?: boolean
    ipAddress?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type UserSessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "sessionToken" | "userAgent" | "ipAddress" | "expiresAt" | "createdAt", ExtArgs["result"]["userSession"]>
  export type UserSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSession"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      sessionToken: string
      userAgent: string | null
      ipAddress: string | null
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["userSession"]>
    composites: {}
  }

  type UserSessionGetPayload<S extends boolean | null | undefined | UserSessionDefaultArgs> = $Result.GetResult<Prisma.$UserSessionPayload, S>

  type UserSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserSessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserSessionCountAggregateInputType | true
    }

  export interface UserSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSession'], meta: { name: 'UserSession' } }
    /**
     * Find zero or one UserSession that matches the filter.
     * @param {UserSessionFindUniqueArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSessionFindUniqueArgs>(args: SelectSubset<T, UserSessionFindUniqueArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserSession that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserSessionFindUniqueOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSessionFindFirstArgs>(args?: SelectSubset<T, UserSessionFindFirstArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSessions
     * const userSessions = await prisma.userSession.findMany()
     * 
     * // Get first 10 UserSessions
     * const userSessions = await prisma.userSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSessionWithIdOnly = await prisma.userSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSessionFindManyArgs>(args?: SelectSubset<T, UserSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserSession.
     * @param {UserSessionCreateArgs} args - Arguments to create a UserSession.
     * @example
     * // Create one UserSession
     * const UserSession = await prisma.userSession.create({
     *   data: {
     *     // ... data to create a UserSession
     *   }
     * })
     * 
     */
    create<T extends UserSessionCreateArgs>(args: SelectSubset<T, UserSessionCreateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserSessions.
     * @param {UserSessionCreateManyArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSessionCreateManyArgs>(args?: SelectSubset<T, UserSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSessions and returns the data saved in the database.
     * @param {UserSessionCreateManyAndReturnArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSessions and only return the `id`
     * const userSessionWithIdOnly = await prisma.userSession.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSessionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserSession.
     * @param {UserSessionDeleteArgs} args - Arguments to delete one UserSession.
     * @example
     * // Delete one UserSession
     * const UserSession = await prisma.userSession.delete({
     *   where: {
     *     // ... filter to delete one UserSession
     *   }
     * })
     * 
     */
    delete<T extends UserSessionDeleteArgs>(args: SelectSubset<T, UserSessionDeleteArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserSession.
     * @param {UserSessionUpdateArgs} args - Arguments to update one UserSession.
     * @example
     * // Update one UserSession
     * const userSession = await prisma.userSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSessionUpdateArgs>(args: SelectSubset<T, UserSessionUpdateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserSessions.
     * @param {UserSessionDeleteManyArgs} args - Arguments to filter UserSessions to delete.
     * @example
     * // Delete a few UserSessions
     * const { count } = await prisma.userSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSessionDeleteManyArgs>(args?: SelectSubset<T, UserSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSessions
     * const userSession = await prisma.userSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSessionUpdateManyArgs>(args: SelectSubset<T, UserSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSessions and returns the data updated in the database.
     * @param {UserSessionUpdateManyAndReturnArgs} args - Arguments to update many UserSessions.
     * @example
     * // Update many UserSessions
     * const userSession = await prisma.userSession.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserSessions and only return the `id`
     * const userSessionWithIdOnly = await prisma.userSession.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserSessionUpdateManyAndReturnArgs>(args: SelectSubset<T, UserSessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserSession.
     * @param {UserSessionUpsertArgs} args - Arguments to update or create a UserSession.
     * @example
     * // Update or create a UserSession
     * const userSession = await prisma.userSession.upsert({
     *   create: {
     *     // ... data to create a UserSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSession we want to update
     *   }
     * })
     */
    upsert<T extends UserSessionUpsertArgs>(args: SelectSubset<T, UserSessionUpsertArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionCountArgs} args - Arguments to filter UserSessions to count.
     * @example
     * // Count the number of UserSessions
     * const count = await prisma.userSession.count({
     *   where: {
     *     // ... the filter for the UserSessions we want to count
     *   }
     * })
    **/
    count<T extends UserSessionCountArgs>(
      args?: Subset<T, UserSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSessionAggregateArgs>(args: Subset<T, UserSessionAggregateArgs>): Prisma.PrismaPromise<GetUserSessionAggregateType<T>>

    /**
     * Group by UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSessionGroupByArgs['orderBy'] }
        : { orderBy?: UserSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSession model
   */
  readonly fields: UserSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSession model
   */
  interface UserSessionFieldRefs {
    readonly id: FieldRef<"UserSession", 'String'>
    readonly userId: FieldRef<"UserSession", 'String'>
    readonly sessionToken: FieldRef<"UserSession", 'String'>
    readonly userAgent: FieldRef<"UserSession", 'String'>
    readonly ipAddress: FieldRef<"UserSession", 'String'>
    readonly expiresAt: FieldRef<"UserSession", 'DateTime'>
    readonly createdAt: FieldRef<"UserSession", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSession findUnique
   */
  export type UserSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findUniqueOrThrow
   */
  export type UserSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findFirst
   */
  export type UserSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findFirstOrThrow
   */
  export type UserSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findMany
   */
  export type UserSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSessions to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession create
   */
  export type UserSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSession.
     */
    data: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
  }

  /**
   * UserSession createMany
   */
  export type UserSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSession createManyAndReturn
   */
  export type UserSessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSession update
   */
  export type UserSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSession.
     */
    data: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
    /**
     * Choose, which UserSession to update.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession updateMany
   */
  export type UserSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSessions.
     */
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyInput>
    /**
     * Filter which UserSessions to update
     */
    where?: UserSessionWhereInput
    /**
     * Limit how many UserSessions to update.
     */
    limit?: number
  }

  /**
   * UserSession updateManyAndReturn
   */
  export type UserSessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * The data used to update UserSessions.
     */
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyInput>
    /**
     * Filter which UserSessions to update
     */
    where?: UserSessionWhereInput
    /**
     * Limit how many UserSessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSession upsert
   */
  export type UserSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSession to update in case it exists.
     */
    where: UserSessionWhereUniqueInput
    /**
     * In case the UserSession found by the `where` argument doesn't exist, create a new UserSession with this data.
     */
    create: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
    /**
     * In case the UserSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
  }

  /**
   * UserSession delete
   */
  export type UserSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter which UserSession to delete.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession deleteMany
   */
  export type UserSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSessions to delete
     */
    where?: UserSessionWhereInput
    /**
     * Limit how many UserSessions to delete.
     */
    limit?: number
  }

  /**
   * UserSession without action
   */
  export type UserSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSession
     */
    omit?: UserSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
  }


  /**
   * Model Article
   */

  export type AggregateArticle = {
    _count: ArticleCountAggregateOutputType | null
    _avg: ArticleAvgAggregateOutputType | null
    _sum: ArticleSumAggregateOutputType | null
    _min: ArticleMinAggregateOutputType | null
    _max: ArticleMaxAggregateOutputType | null
  }

  export type ArticleAvgAggregateOutputType = {
    viewCount: number | null
    shareCount: number | null
    engagementRate: number | null
  }

  export type ArticleSumAggregateOutputType = {
    viewCount: number | null
    shareCount: number | null
    engagementRate: number | null
  }

  export type ArticleMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    title: string | null
    content: string | null
    summary: string | null
    slug: string | null
    status: $Enums.ArticleStatus | null
    authorId: string | null
    metaTitle: string | null
    metaDescription: string | null
    sourceType: $Enums.SourceType | null
    generatedBy: string | null
    templateId: string | null
    publishedAt: Date | null
    scheduledAt: Date | null
    viewCount: number | null
    shareCount: number | null
    engagementRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ArticleMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    title: string | null
    content: string | null
    summary: string | null
    slug: string | null
    status: $Enums.ArticleStatus | null
    authorId: string | null
    metaTitle: string | null
    metaDescription: string | null
    sourceType: $Enums.SourceType | null
    generatedBy: string | null
    templateId: string | null
    publishedAt: Date | null
    scheduledAt: Date | null
    viewCount: number | null
    shareCount: number | null
    engagementRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ArticleCountAggregateOutputType = {
    id: number
    organizationId: number
    title: number
    content: number
    summary: number
    slug: number
    status: number
    authorId: number
    metaTitle: number
    metaDescription: number
    tags: number
    keywords: number
    sourceType: number
    sourceData: number
    generatedBy: number
    templateId: number
    publishedAt: number
    scheduledAt: number
    viewCount: number
    shareCount: number
    engagementRate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ArticleAvgAggregateInputType = {
    viewCount?: true
    shareCount?: true
    engagementRate?: true
  }

  export type ArticleSumAggregateInputType = {
    viewCount?: true
    shareCount?: true
    engagementRate?: true
  }

  export type ArticleMinAggregateInputType = {
    id?: true
    organizationId?: true
    title?: true
    content?: true
    summary?: true
    slug?: true
    status?: true
    authorId?: true
    metaTitle?: true
    metaDescription?: true
    sourceType?: true
    generatedBy?: true
    templateId?: true
    publishedAt?: true
    scheduledAt?: true
    viewCount?: true
    shareCount?: true
    engagementRate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ArticleMaxAggregateInputType = {
    id?: true
    organizationId?: true
    title?: true
    content?: true
    summary?: true
    slug?: true
    status?: true
    authorId?: true
    metaTitle?: true
    metaDescription?: true
    sourceType?: true
    generatedBy?: true
    templateId?: true
    publishedAt?: true
    scheduledAt?: true
    viewCount?: true
    shareCount?: true
    engagementRate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ArticleCountAggregateInputType = {
    id?: true
    organizationId?: true
    title?: true
    content?: true
    summary?: true
    slug?: true
    status?: true
    authorId?: true
    metaTitle?: true
    metaDescription?: true
    tags?: true
    keywords?: true
    sourceType?: true
    sourceData?: true
    generatedBy?: true
    templateId?: true
    publishedAt?: true
    scheduledAt?: true
    viewCount?: true
    shareCount?: true
    engagementRate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ArticleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Article to aggregate.
     */
    where?: ArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articles to fetch.
     */
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Articles
    **/
    _count?: true | ArticleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArticleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArticleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArticleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArticleMaxAggregateInputType
  }

  export type GetArticleAggregateType<T extends ArticleAggregateArgs> = {
        [P in keyof T & keyof AggregateArticle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticle[P]>
      : GetScalarType<T[P], AggregateArticle[P]>
  }




  export type ArticleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleWhereInput
    orderBy?: ArticleOrderByWithAggregationInput | ArticleOrderByWithAggregationInput[]
    by: ArticleScalarFieldEnum[] | ArticleScalarFieldEnum
    having?: ArticleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArticleCountAggregateInputType | true
    _avg?: ArticleAvgAggregateInputType
    _sum?: ArticleSumAggregateInputType
    _min?: ArticleMinAggregateInputType
    _max?: ArticleMaxAggregateInputType
  }

  export type ArticleGroupByOutputType = {
    id: string
    organizationId: string
    title: string
    content: string | null
    summary: string | null
    slug: string
    status: $Enums.ArticleStatus
    authorId: string | null
    metaTitle: string | null
    metaDescription: string | null
    tags: JsonValue | null
    keywords: JsonValue | null
    sourceType: $Enums.SourceType
    sourceData: JsonValue | null
    generatedBy: string | null
    templateId: string | null
    publishedAt: Date | null
    scheduledAt: Date | null
    viewCount: number
    shareCount: number
    engagementRate: number
    createdAt: Date
    updatedAt: Date
    _count: ArticleCountAggregateOutputType | null
    _avg: ArticleAvgAggregateOutputType | null
    _sum: ArticleSumAggregateOutputType | null
    _min: ArticleMinAggregateOutputType | null
    _max: ArticleMaxAggregateOutputType | null
  }

  type GetArticleGroupByPayload<T extends ArticleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArticleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArticleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArticleGroupByOutputType[P]>
            : GetScalarType<T[P], ArticleGroupByOutputType[P]>
        }
      >
    >


  export type ArticleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    slug?: boolean
    status?: boolean
    authorId?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    keywords?: boolean
    sourceType?: boolean
    sourceData?: boolean
    generatedBy?: boolean
    templateId?: boolean
    publishedAt?: boolean
    scheduledAt?: boolean
    viewCount?: boolean
    shareCount?: boolean
    engagementRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    analytics?: boolean | Article$analyticsArgs<ExtArgs>
    versions?: boolean | Article$versionsArgs<ExtArgs>
    author?: boolean | Article$authorArgs<ExtArgs>
    template?: boolean | Article$templateArgs<ExtArgs>
    _count?: boolean | ArticleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article"]>

  export type ArticleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    slug?: boolean
    status?: boolean
    authorId?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    keywords?: boolean
    sourceType?: boolean
    sourceData?: boolean
    generatedBy?: boolean
    templateId?: boolean
    publishedAt?: boolean
    scheduledAt?: boolean
    viewCount?: boolean
    shareCount?: boolean
    engagementRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    author?: boolean | Article$authorArgs<ExtArgs>
    template?: boolean | Article$templateArgs<ExtArgs>
  }, ExtArgs["result"]["article"]>

  export type ArticleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    slug?: boolean
    status?: boolean
    authorId?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    keywords?: boolean
    sourceType?: boolean
    sourceData?: boolean
    generatedBy?: boolean
    templateId?: boolean
    publishedAt?: boolean
    scheduledAt?: boolean
    viewCount?: boolean
    shareCount?: boolean
    engagementRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    author?: boolean | Article$authorArgs<ExtArgs>
    template?: boolean | Article$templateArgs<ExtArgs>
  }, ExtArgs["result"]["article"]>

  export type ArticleSelectScalar = {
    id?: boolean
    organizationId?: boolean
    title?: boolean
    content?: boolean
    summary?: boolean
    slug?: boolean
    status?: boolean
    authorId?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    keywords?: boolean
    sourceType?: boolean
    sourceData?: boolean
    generatedBy?: boolean
    templateId?: boolean
    publishedAt?: boolean
    scheduledAt?: boolean
    viewCount?: boolean
    shareCount?: boolean
    engagementRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ArticleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "title" | "content" | "summary" | "slug" | "status" | "authorId" | "metaTitle" | "metaDescription" | "tags" | "keywords" | "sourceType" | "sourceData" | "generatedBy" | "templateId" | "publishedAt" | "scheduledAt" | "viewCount" | "shareCount" | "engagementRate" | "createdAt" | "updatedAt", ExtArgs["result"]["article"]>
  export type ArticleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    analytics?: boolean | Article$analyticsArgs<ExtArgs>
    versions?: boolean | Article$versionsArgs<ExtArgs>
    author?: boolean | Article$authorArgs<ExtArgs>
    template?: boolean | Article$templateArgs<ExtArgs>
    _count?: boolean | ArticleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ArticleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    author?: boolean | Article$authorArgs<ExtArgs>
    template?: boolean | Article$templateArgs<ExtArgs>
  }
  export type ArticleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    author?: boolean | Article$authorArgs<ExtArgs>
    template?: boolean | Article$templateArgs<ExtArgs>
  }

  export type $ArticlePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Article"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      analytics: Prisma.$ArticleAnalyticsPayload<ExtArgs>[]
      versions: Prisma.$ArticleVersionPayload<ExtArgs>[]
      author: Prisma.$UserPayload<ExtArgs> | null
      template: Prisma.$TemplatePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      title: string
      content: string | null
      summary: string | null
      slug: string
      status: $Enums.ArticleStatus
      authorId: string | null
      metaTitle: string | null
      metaDescription: string | null
      tags: Prisma.JsonValue | null
      keywords: Prisma.JsonValue | null
      sourceType: $Enums.SourceType
      sourceData: Prisma.JsonValue | null
      generatedBy: string | null
      templateId: string | null
      publishedAt: Date | null
      scheduledAt: Date | null
      viewCount: number
      shareCount: number
      engagementRate: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["article"]>
    composites: {}
  }

  type ArticleGetPayload<S extends boolean | null | undefined | ArticleDefaultArgs> = $Result.GetResult<Prisma.$ArticlePayload, S>

  type ArticleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArticleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArticleCountAggregateInputType | true
    }

  export interface ArticleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Article'], meta: { name: 'Article' } }
    /**
     * Find zero or one Article that matches the filter.
     * @param {ArticleFindUniqueArgs} args - Arguments to find a Article
     * @example
     * // Get one Article
     * const article = await prisma.article.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArticleFindUniqueArgs>(args: SelectSubset<T, ArticleFindUniqueArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Article that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArticleFindUniqueOrThrowArgs} args - Arguments to find a Article
     * @example
     * // Get one Article
     * const article = await prisma.article.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArticleFindUniqueOrThrowArgs>(args: SelectSubset<T, ArticleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Article that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleFindFirstArgs} args - Arguments to find a Article
     * @example
     * // Get one Article
     * const article = await prisma.article.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArticleFindFirstArgs>(args?: SelectSubset<T, ArticleFindFirstArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Article that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleFindFirstOrThrowArgs} args - Arguments to find a Article
     * @example
     * // Get one Article
     * const article = await prisma.article.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArticleFindFirstOrThrowArgs>(args?: SelectSubset<T, ArticleFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Articles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Articles
     * const articles = await prisma.article.findMany()
     * 
     * // Get first 10 Articles
     * const articles = await prisma.article.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const articleWithIdOnly = await prisma.article.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArticleFindManyArgs>(args?: SelectSubset<T, ArticleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Article.
     * @param {ArticleCreateArgs} args - Arguments to create a Article.
     * @example
     * // Create one Article
     * const Article = await prisma.article.create({
     *   data: {
     *     // ... data to create a Article
     *   }
     * })
     * 
     */
    create<T extends ArticleCreateArgs>(args: SelectSubset<T, ArticleCreateArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Articles.
     * @param {ArticleCreateManyArgs} args - Arguments to create many Articles.
     * @example
     * // Create many Articles
     * const article = await prisma.article.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArticleCreateManyArgs>(args?: SelectSubset<T, ArticleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Articles and returns the data saved in the database.
     * @param {ArticleCreateManyAndReturnArgs} args - Arguments to create many Articles.
     * @example
     * // Create many Articles
     * const article = await prisma.article.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Articles and only return the `id`
     * const articleWithIdOnly = await prisma.article.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArticleCreateManyAndReturnArgs>(args?: SelectSubset<T, ArticleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Article.
     * @param {ArticleDeleteArgs} args - Arguments to delete one Article.
     * @example
     * // Delete one Article
     * const Article = await prisma.article.delete({
     *   where: {
     *     // ... filter to delete one Article
     *   }
     * })
     * 
     */
    delete<T extends ArticleDeleteArgs>(args: SelectSubset<T, ArticleDeleteArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Article.
     * @param {ArticleUpdateArgs} args - Arguments to update one Article.
     * @example
     * // Update one Article
     * const article = await prisma.article.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArticleUpdateArgs>(args: SelectSubset<T, ArticleUpdateArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Articles.
     * @param {ArticleDeleteManyArgs} args - Arguments to filter Articles to delete.
     * @example
     * // Delete a few Articles
     * const { count } = await prisma.article.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArticleDeleteManyArgs>(args?: SelectSubset<T, ArticleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Articles
     * const article = await prisma.article.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArticleUpdateManyArgs>(args: SelectSubset<T, ArticleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Articles and returns the data updated in the database.
     * @param {ArticleUpdateManyAndReturnArgs} args - Arguments to update many Articles.
     * @example
     * // Update many Articles
     * const article = await prisma.article.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Articles and only return the `id`
     * const articleWithIdOnly = await prisma.article.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArticleUpdateManyAndReturnArgs>(args: SelectSubset<T, ArticleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Article.
     * @param {ArticleUpsertArgs} args - Arguments to update or create a Article.
     * @example
     * // Update or create a Article
     * const article = await prisma.article.upsert({
     *   create: {
     *     // ... data to create a Article
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Article we want to update
     *   }
     * })
     */
    upsert<T extends ArticleUpsertArgs>(args: SelectSubset<T, ArticleUpsertArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleCountArgs} args - Arguments to filter Articles to count.
     * @example
     * // Count the number of Articles
     * const count = await prisma.article.count({
     *   where: {
     *     // ... the filter for the Articles we want to count
     *   }
     * })
    **/
    count<T extends ArticleCountArgs>(
      args?: Subset<T, ArticleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArticleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Article.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArticleAggregateArgs>(args: Subset<T, ArticleAggregateArgs>): Prisma.PrismaPromise<GetArticleAggregateType<T>>

    /**
     * Group by Article.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArticleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArticleGroupByArgs['orderBy'] }
        : { orderBy?: ArticleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArticleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Article model
   */
  readonly fields: ArticleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Article.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArticleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    analytics<T extends Article$analyticsArgs<ExtArgs> = {}>(args?: Subset<T, Article$analyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    versions<T extends Article$versionsArgs<ExtArgs> = {}>(args?: Subset<T, Article$versionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    author<T extends Article$authorArgs<ExtArgs> = {}>(args?: Subset<T, Article$authorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    template<T extends Article$templateArgs<ExtArgs> = {}>(args?: Subset<T, Article$templateArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Article model
   */
  interface ArticleFieldRefs {
    readonly id: FieldRef<"Article", 'String'>
    readonly organizationId: FieldRef<"Article", 'String'>
    readonly title: FieldRef<"Article", 'String'>
    readonly content: FieldRef<"Article", 'String'>
    readonly summary: FieldRef<"Article", 'String'>
    readonly slug: FieldRef<"Article", 'String'>
    readonly status: FieldRef<"Article", 'ArticleStatus'>
    readonly authorId: FieldRef<"Article", 'String'>
    readonly metaTitle: FieldRef<"Article", 'String'>
    readonly metaDescription: FieldRef<"Article", 'String'>
    readonly tags: FieldRef<"Article", 'Json'>
    readonly keywords: FieldRef<"Article", 'Json'>
    readonly sourceType: FieldRef<"Article", 'SourceType'>
    readonly sourceData: FieldRef<"Article", 'Json'>
    readonly generatedBy: FieldRef<"Article", 'String'>
    readonly templateId: FieldRef<"Article", 'String'>
    readonly publishedAt: FieldRef<"Article", 'DateTime'>
    readonly scheduledAt: FieldRef<"Article", 'DateTime'>
    readonly viewCount: FieldRef<"Article", 'Int'>
    readonly shareCount: FieldRef<"Article", 'Int'>
    readonly engagementRate: FieldRef<"Article", 'Float'>
    readonly createdAt: FieldRef<"Article", 'DateTime'>
    readonly updatedAt: FieldRef<"Article", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Article findUnique
   */
  export type ArticleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * Filter, which Article to fetch.
     */
    where: ArticleWhereUniqueInput
  }

  /**
   * Article findUniqueOrThrow
   */
  export type ArticleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * Filter, which Article to fetch.
     */
    where: ArticleWhereUniqueInput
  }

  /**
   * Article findFirst
   */
  export type ArticleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * Filter, which Article to fetch.
     */
    where?: ArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articles to fetch.
     */
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Articles.
     */
    cursor?: ArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Articles.
     */
    distinct?: ArticleScalarFieldEnum | ArticleScalarFieldEnum[]
  }

  /**
   * Article findFirstOrThrow
   */
  export type ArticleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * Filter, which Article to fetch.
     */
    where?: ArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articles to fetch.
     */
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Articles.
     */
    cursor?: ArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Articles.
     */
    distinct?: ArticleScalarFieldEnum | ArticleScalarFieldEnum[]
  }

  /**
   * Article findMany
   */
  export type ArticleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * Filter, which Articles to fetch.
     */
    where?: ArticleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Articles to fetch.
     */
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Articles.
     */
    cursor?: ArticleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Articles.
     */
    skip?: number
    distinct?: ArticleScalarFieldEnum | ArticleScalarFieldEnum[]
  }

  /**
   * Article create
   */
  export type ArticleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * The data needed to create a Article.
     */
    data: XOR<ArticleCreateInput, ArticleUncheckedCreateInput>
  }

  /**
   * Article createMany
   */
  export type ArticleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Articles.
     */
    data: ArticleCreateManyInput | ArticleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Article createManyAndReturn
   */
  export type ArticleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * The data used to create many Articles.
     */
    data: ArticleCreateManyInput | ArticleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Article update
   */
  export type ArticleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * The data needed to update a Article.
     */
    data: XOR<ArticleUpdateInput, ArticleUncheckedUpdateInput>
    /**
     * Choose, which Article to update.
     */
    where: ArticleWhereUniqueInput
  }

  /**
   * Article updateMany
   */
  export type ArticleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Articles.
     */
    data: XOR<ArticleUpdateManyMutationInput, ArticleUncheckedUpdateManyInput>
    /**
     * Filter which Articles to update
     */
    where?: ArticleWhereInput
    /**
     * Limit how many Articles to update.
     */
    limit?: number
  }

  /**
   * Article updateManyAndReturn
   */
  export type ArticleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * The data used to update Articles.
     */
    data: XOR<ArticleUpdateManyMutationInput, ArticleUncheckedUpdateManyInput>
    /**
     * Filter which Articles to update
     */
    where?: ArticleWhereInput
    /**
     * Limit how many Articles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Article upsert
   */
  export type ArticleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * The filter to search for the Article to update in case it exists.
     */
    where: ArticleWhereUniqueInput
    /**
     * In case the Article found by the `where` argument doesn't exist, create a new Article with this data.
     */
    create: XOR<ArticleCreateInput, ArticleUncheckedCreateInput>
    /**
     * In case the Article was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArticleUpdateInput, ArticleUncheckedUpdateInput>
  }

  /**
   * Article delete
   */
  export type ArticleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    /**
     * Filter which Article to delete.
     */
    where: ArticleWhereUniqueInput
  }

  /**
   * Article deleteMany
   */
  export type ArticleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Articles to delete
     */
    where?: ArticleWhereInput
    /**
     * Limit how many Articles to delete.
     */
    limit?: number
  }

  /**
   * Article.analytics
   */
  export type Article$analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    where?: ArticleAnalyticsWhereInput
    orderBy?: ArticleAnalyticsOrderByWithRelationInput | ArticleAnalyticsOrderByWithRelationInput[]
    cursor?: ArticleAnalyticsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleAnalyticsScalarFieldEnum | ArticleAnalyticsScalarFieldEnum[]
  }

  /**
   * Article.versions
   */
  export type Article$versionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    where?: ArticleVersionWhereInput
    orderBy?: ArticleVersionOrderByWithRelationInput | ArticleVersionOrderByWithRelationInput[]
    cursor?: ArticleVersionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleVersionScalarFieldEnum | ArticleVersionScalarFieldEnum[]
  }

  /**
   * Article.author
   */
  export type Article$authorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Article.template
   */
  export type Article$templateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    where?: TemplateWhereInput
  }

  /**
   * Article without action
   */
  export type ArticleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
  }


  /**
   * Model Template
   */

  export type AggregateTemplate = {
    _count: TemplateCountAggregateOutputType | null
    _avg: TemplateAvgAggregateOutputType | null
    _sum: TemplateSumAggregateOutputType | null
    _min: TemplateMinAggregateOutputType | null
    _max: TemplateMaxAggregateOutputType | null
  }

  export type TemplateAvgAggregateOutputType = {
    usageCount: number | null
  }

  export type TemplateSumAggregateOutputType = {
    usageCount: number | null
  }

  export type TemplateMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    description: string | null
    content: string | null
    category: string | null
    usageCount: number | null
    lastUsedAt: Date | null
    isActive: boolean | null
    isSystem: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TemplateMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    name: string | null
    description: string | null
    content: string | null
    category: string | null
    usageCount: number | null
    lastUsedAt: Date | null
    isActive: boolean | null
    isSystem: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TemplateCountAggregateOutputType = {
    id: number
    organizationId: number
    name: number
    description: number
    content: number
    variables: number
    category: number
    usageCount: number
    lastUsedAt: number
    isActive: number
    isSystem: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TemplateAvgAggregateInputType = {
    usageCount?: true
  }

  export type TemplateSumAggregateInputType = {
    usageCount?: true
  }

  export type TemplateMinAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    description?: true
    content?: true
    category?: true
    usageCount?: true
    lastUsedAt?: true
    isActive?: true
    isSystem?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TemplateMaxAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    description?: true
    content?: true
    category?: true
    usageCount?: true
    lastUsedAt?: true
    isActive?: true
    isSystem?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TemplateCountAggregateInputType = {
    id?: true
    organizationId?: true
    name?: true
    description?: true
    content?: true
    variables?: true
    category?: true
    usageCount?: true
    lastUsedAt?: true
    isActive?: true
    isSystem?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TemplateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Template to aggregate.
     */
    where?: TemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Templates to fetch.
     */
    orderBy?: TemplateOrderByWithRelationInput | TemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Templates
    **/
    _count?: true | TemplateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TemplateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TemplateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TemplateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TemplateMaxAggregateInputType
  }

  export type GetTemplateAggregateType<T extends TemplateAggregateArgs> = {
        [P in keyof T & keyof AggregateTemplate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTemplate[P]>
      : GetScalarType<T[P], AggregateTemplate[P]>
  }




  export type TemplateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TemplateWhereInput
    orderBy?: TemplateOrderByWithAggregationInput | TemplateOrderByWithAggregationInput[]
    by: TemplateScalarFieldEnum[] | TemplateScalarFieldEnum
    having?: TemplateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TemplateCountAggregateInputType | true
    _avg?: TemplateAvgAggregateInputType
    _sum?: TemplateSumAggregateInputType
    _min?: TemplateMinAggregateInputType
    _max?: TemplateMaxAggregateInputType
  }

  export type TemplateGroupByOutputType = {
    id: string
    organizationId: string
    name: string
    description: string | null
    content: string
    variables: JsonValue
    category: string | null
    usageCount: number
    lastUsedAt: Date | null
    isActive: boolean
    isSystem: boolean
    createdAt: Date
    updatedAt: Date
    _count: TemplateCountAggregateOutputType | null
    _avg: TemplateAvgAggregateOutputType | null
    _sum: TemplateSumAggregateOutputType | null
    _min: TemplateMinAggregateOutputType | null
    _max: TemplateMaxAggregateOutputType | null
  }

  type GetTemplateGroupByPayload<T extends TemplateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TemplateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TemplateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TemplateGroupByOutputType[P]>
            : GetScalarType<T[P], TemplateGroupByOutputType[P]>
        }
      >
    >


  export type TemplateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    content?: boolean
    variables?: boolean
    category?: boolean
    usageCount?: boolean
    lastUsedAt?: boolean
    isActive?: boolean
    isSystem?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    articles?: boolean | Template$articlesArgs<ExtArgs>
    _count?: boolean | TemplateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["template"]>

  export type TemplateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    content?: boolean
    variables?: boolean
    category?: boolean
    usageCount?: boolean
    lastUsedAt?: boolean
    isActive?: boolean
    isSystem?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["template"]>

  export type TemplateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    content?: boolean
    variables?: boolean
    category?: boolean
    usageCount?: boolean
    lastUsedAt?: boolean
    isActive?: boolean
    isSystem?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["template"]>

  export type TemplateSelectScalar = {
    id?: boolean
    organizationId?: boolean
    name?: boolean
    description?: boolean
    content?: boolean
    variables?: boolean
    category?: boolean
    usageCount?: boolean
    lastUsedAt?: boolean
    isActive?: boolean
    isSystem?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TemplateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "name" | "description" | "content" | "variables" | "category" | "usageCount" | "lastUsedAt" | "isActive" | "isSystem" | "createdAt" | "updatedAt", ExtArgs["result"]["template"]>
  export type TemplateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    articles?: boolean | Template$articlesArgs<ExtArgs>
    _count?: boolean | TemplateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TemplateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type TemplateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $TemplatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Template"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      articles: Prisma.$ArticlePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      name: string
      description: string | null
      content: string
      variables: Prisma.JsonValue
      category: string | null
      usageCount: number
      lastUsedAt: Date | null
      isActive: boolean
      isSystem: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["template"]>
    composites: {}
  }

  type TemplateGetPayload<S extends boolean | null | undefined | TemplateDefaultArgs> = $Result.GetResult<Prisma.$TemplatePayload, S>

  type TemplateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TemplateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TemplateCountAggregateInputType | true
    }

  export interface TemplateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Template'], meta: { name: 'Template' } }
    /**
     * Find zero or one Template that matches the filter.
     * @param {TemplateFindUniqueArgs} args - Arguments to find a Template
     * @example
     * // Get one Template
     * const template = await prisma.template.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TemplateFindUniqueArgs>(args: SelectSubset<T, TemplateFindUniqueArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Template that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TemplateFindUniqueOrThrowArgs} args - Arguments to find a Template
     * @example
     * // Get one Template
     * const template = await prisma.template.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TemplateFindUniqueOrThrowArgs>(args: SelectSubset<T, TemplateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Template that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateFindFirstArgs} args - Arguments to find a Template
     * @example
     * // Get one Template
     * const template = await prisma.template.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TemplateFindFirstArgs>(args?: SelectSubset<T, TemplateFindFirstArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Template that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateFindFirstOrThrowArgs} args - Arguments to find a Template
     * @example
     * // Get one Template
     * const template = await prisma.template.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TemplateFindFirstOrThrowArgs>(args?: SelectSubset<T, TemplateFindFirstOrThrowArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Templates
     * const templates = await prisma.template.findMany()
     * 
     * // Get first 10 Templates
     * const templates = await prisma.template.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const templateWithIdOnly = await prisma.template.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TemplateFindManyArgs>(args?: SelectSubset<T, TemplateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Template.
     * @param {TemplateCreateArgs} args - Arguments to create a Template.
     * @example
     * // Create one Template
     * const Template = await prisma.template.create({
     *   data: {
     *     // ... data to create a Template
     *   }
     * })
     * 
     */
    create<T extends TemplateCreateArgs>(args: SelectSubset<T, TemplateCreateArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Templates.
     * @param {TemplateCreateManyArgs} args - Arguments to create many Templates.
     * @example
     * // Create many Templates
     * const template = await prisma.template.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TemplateCreateManyArgs>(args?: SelectSubset<T, TemplateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Templates and returns the data saved in the database.
     * @param {TemplateCreateManyAndReturnArgs} args - Arguments to create many Templates.
     * @example
     * // Create many Templates
     * const template = await prisma.template.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Templates and only return the `id`
     * const templateWithIdOnly = await prisma.template.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TemplateCreateManyAndReturnArgs>(args?: SelectSubset<T, TemplateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Template.
     * @param {TemplateDeleteArgs} args - Arguments to delete one Template.
     * @example
     * // Delete one Template
     * const Template = await prisma.template.delete({
     *   where: {
     *     // ... filter to delete one Template
     *   }
     * })
     * 
     */
    delete<T extends TemplateDeleteArgs>(args: SelectSubset<T, TemplateDeleteArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Template.
     * @param {TemplateUpdateArgs} args - Arguments to update one Template.
     * @example
     * // Update one Template
     * const template = await prisma.template.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TemplateUpdateArgs>(args: SelectSubset<T, TemplateUpdateArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Templates.
     * @param {TemplateDeleteManyArgs} args - Arguments to filter Templates to delete.
     * @example
     * // Delete a few Templates
     * const { count } = await prisma.template.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TemplateDeleteManyArgs>(args?: SelectSubset<T, TemplateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Templates
     * const template = await prisma.template.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TemplateUpdateManyArgs>(args: SelectSubset<T, TemplateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Templates and returns the data updated in the database.
     * @param {TemplateUpdateManyAndReturnArgs} args - Arguments to update many Templates.
     * @example
     * // Update many Templates
     * const template = await prisma.template.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Templates and only return the `id`
     * const templateWithIdOnly = await prisma.template.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TemplateUpdateManyAndReturnArgs>(args: SelectSubset<T, TemplateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Template.
     * @param {TemplateUpsertArgs} args - Arguments to update or create a Template.
     * @example
     * // Update or create a Template
     * const template = await prisma.template.upsert({
     *   create: {
     *     // ... data to create a Template
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Template we want to update
     *   }
     * })
     */
    upsert<T extends TemplateUpsertArgs>(args: SelectSubset<T, TemplateUpsertArgs<ExtArgs>>): Prisma__TemplateClient<$Result.GetResult<Prisma.$TemplatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateCountArgs} args - Arguments to filter Templates to count.
     * @example
     * // Count the number of Templates
     * const count = await prisma.template.count({
     *   where: {
     *     // ... the filter for the Templates we want to count
     *   }
     * })
    **/
    count<T extends TemplateCountArgs>(
      args?: Subset<T, TemplateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TemplateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Template.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TemplateAggregateArgs>(args: Subset<T, TemplateAggregateArgs>): Prisma.PrismaPromise<GetTemplateAggregateType<T>>

    /**
     * Group by Template.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TemplateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TemplateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TemplateGroupByArgs['orderBy'] }
        : { orderBy?: TemplateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTemplateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Template model
   */
  readonly fields: TemplateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Template.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TemplateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    articles<T extends Template$articlesArgs<ExtArgs> = {}>(args?: Subset<T, Template$articlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Template model
   */
  interface TemplateFieldRefs {
    readonly id: FieldRef<"Template", 'String'>
    readonly organizationId: FieldRef<"Template", 'String'>
    readonly name: FieldRef<"Template", 'String'>
    readonly description: FieldRef<"Template", 'String'>
    readonly content: FieldRef<"Template", 'String'>
    readonly variables: FieldRef<"Template", 'Json'>
    readonly category: FieldRef<"Template", 'String'>
    readonly usageCount: FieldRef<"Template", 'Int'>
    readonly lastUsedAt: FieldRef<"Template", 'DateTime'>
    readonly isActive: FieldRef<"Template", 'Boolean'>
    readonly isSystem: FieldRef<"Template", 'Boolean'>
    readonly createdAt: FieldRef<"Template", 'DateTime'>
    readonly updatedAt: FieldRef<"Template", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Template findUnique
   */
  export type TemplateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * Filter, which Template to fetch.
     */
    where: TemplateWhereUniqueInput
  }

  /**
   * Template findUniqueOrThrow
   */
  export type TemplateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * Filter, which Template to fetch.
     */
    where: TemplateWhereUniqueInput
  }

  /**
   * Template findFirst
   */
  export type TemplateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * Filter, which Template to fetch.
     */
    where?: TemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Templates to fetch.
     */
    orderBy?: TemplateOrderByWithRelationInput | TemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Templates.
     */
    cursor?: TemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Templates.
     */
    distinct?: TemplateScalarFieldEnum | TemplateScalarFieldEnum[]
  }

  /**
   * Template findFirstOrThrow
   */
  export type TemplateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * Filter, which Template to fetch.
     */
    where?: TemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Templates to fetch.
     */
    orderBy?: TemplateOrderByWithRelationInput | TemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Templates.
     */
    cursor?: TemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Templates.
     */
    distinct?: TemplateScalarFieldEnum | TemplateScalarFieldEnum[]
  }

  /**
   * Template findMany
   */
  export type TemplateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * Filter, which Templates to fetch.
     */
    where?: TemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Templates to fetch.
     */
    orderBy?: TemplateOrderByWithRelationInput | TemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Templates.
     */
    cursor?: TemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Templates.
     */
    skip?: number
    distinct?: TemplateScalarFieldEnum | TemplateScalarFieldEnum[]
  }

  /**
   * Template create
   */
  export type TemplateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * The data needed to create a Template.
     */
    data: XOR<TemplateCreateInput, TemplateUncheckedCreateInput>
  }

  /**
   * Template createMany
   */
  export type TemplateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Templates.
     */
    data: TemplateCreateManyInput | TemplateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Template createManyAndReturn
   */
  export type TemplateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * The data used to create many Templates.
     */
    data: TemplateCreateManyInput | TemplateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Template update
   */
  export type TemplateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * The data needed to update a Template.
     */
    data: XOR<TemplateUpdateInput, TemplateUncheckedUpdateInput>
    /**
     * Choose, which Template to update.
     */
    where: TemplateWhereUniqueInput
  }

  /**
   * Template updateMany
   */
  export type TemplateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Templates.
     */
    data: XOR<TemplateUpdateManyMutationInput, TemplateUncheckedUpdateManyInput>
    /**
     * Filter which Templates to update
     */
    where?: TemplateWhereInput
    /**
     * Limit how many Templates to update.
     */
    limit?: number
  }

  /**
   * Template updateManyAndReturn
   */
  export type TemplateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * The data used to update Templates.
     */
    data: XOR<TemplateUpdateManyMutationInput, TemplateUncheckedUpdateManyInput>
    /**
     * Filter which Templates to update
     */
    where?: TemplateWhereInput
    /**
     * Limit how many Templates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Template upsert
   */
  export type TemplateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * The filter to search for the Template to update in case it exists.
     */
    where: TemplateWhereUniqueInput
    /**
     * In case the Template found by the `where` argument doesn't exist, create a new Template with this data.
     */
    create: XOR<TemplateCreateInput, TemplateUncheckedCreateInput>
    /**
     * In case the Template was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TemplateUpdateInput, TemplateUncheckedUpdateInput>
  }

  /**
   * Template delete
   */
  export type TemplateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
    /**
     * Filter which Template to delete.
     */
    where: TemplateWhereUniqueInput
  }

  /**
   * Template deleteMany
   */
  export type TemplateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Templates to delete
     */
    where?: TemplateWhereInput
    /**
     * Limit how many Templates to delete.
     */
    limit?: number
  }

  /**
   * Template.articles
   */
  export type Template$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Article
     */
    select?: ArticleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Article
     */
    omit?: ArticleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleInclude<ExtArgs> | null
    where?: ArticleWhereInput
    orderBy?: ArticleOrderByWithRelationInput | ArticleOrderByWithRelationInput[]
    cursor?: ArticleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ArticleScalarFieldEnum | ArticleScalarFieldEnum[]
  }

  /**
   * Template without action
   */
  export type TemplateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Template
     */
    select?: TemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Template
     */
    omit?: TemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TemplateInclude<ExtArgs> | null
  }


  /**
   * Model ArticleVersion
   */

  export type AggregateArticleVersion = {
    _count: ArticleVersionCountAggregateOutputType | null
    _avg: ArticleVersionAvgAggregateOutputType | null
    _sum: ArticleVersionSumAggregateOutputType | null
    _min: ArticleVersionMinAggregateOutputType | null
    _max: ArticleVersionMaxAggregateOutputType | null
  }

  export type ArticleVersionAvgAggregateOutputType = {
    version: number | null
  }

  export type ArticleVersionSumAggregateOutputType = {
    version: number | null
  }

  export type ArticleVersionMinAggregateOutputType = {
    id: string | null
    articleId: string | null
    version: number | null
    title: string | null
    content: string | null
    changes: string | null
    createdAt: Date | null
    authorId: string | null
    changeType: string | null
  }

  export type ArticleVersionMaxAggregateOutputType = {
    id: string | null
    articleId: string | null
    version: number | null
    title: string | null
    content: string | null
    changes: string | null
    createdAt: Date | null
    authorId: string | null
    changeType: string | null
  }

  export type ArticleVersionCountAggregateOutputType = {
    id: number
    articleId: number
    version: number
    title: number
    content: number
    changes: number
    createdAt: number
    authorId: number
    changeType: number
    _all: number
  }


  export type ArticleVersionAvgAggregateInputType = {
    version?: true
  }

  export type ArticleVersionSumAggregateInputType = {
    version?: true
  }

  export type ArticleVersionMinAggregateInputType = {
    id?: true
    articleId?: true
    version?: true
    title?: true
    content?: true
    changes?: true
    createdAt?: true
    authorId?: true
    changeType?: true
  }

  export type ArticleVersionMaxAggregateInputType = {
    id?: true
    articleId?: true
    version?: true
    title?: true
    content?: true
    changes?: true
    createdAt?: true
    authorId?: true
    changeType?: true
  }

  export type ArticleVersionCountAggregateInputType = {
    id?: true
    articleId?: true
    version?: true
    title?: true
    content?: true
    changes?: true
    createdAt?: true
    authorId?: true
    changeType?: true
    _all?: true
  }

  export type ArticleVersionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArticleVersion to aggregate.
     */
    where?: ArticleVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleVersions to fetch.
     */
    orderBy?: ArticleVersionOrderByWithRelationInput | ArticleVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArticleVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArticleVersions
    **/
    _count?: true | ArticleVersionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArticleVersionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArticleVersionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArticleVersionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArticleVersionMaxAggregateInputType
  }

  export type GetArticleVersionAggregateType<T extends ArticleVersionAggregateArgs> = {
        [P in keyof T & keyof AggregateArticleVersion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticleVersion[P]>
      : GetScalarType<T[P], AggregateArticleVersion[P]>
  }




  export type ArticleVersionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleVersionWhereInput
    orderBy?: ArticleVersionOrderByWithAggregationInput | ArticleVersionOrderByWithAggregationInput[]
    by: ArticleVersionScalarFieldEnum[] | ArticleVersionScalarFieldEnum
    having?: ArticleVersionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArticleVersionCountAggregateInputType | true
    _avg?: ArticleVersionAvgAggregateInputType
    _sum?: ArticleVersionSumAggregateInputType
    _min?: ArticleVersionMinAggregateInputType
    _max?: ArticleVersionMaxAggregateInputType
  }

  export type ArticleVersionGroupByOutputType = {
    id: string
    articleId: string
    version: number
    title: string
    content: string
    changes: string | null
    createdAt: Date
    authorId: string | null
    changeType: string | null
    _count: ArticleVersionCountAggregateOutputType | null
    _avg: ArticleVersionAvgAggregateOutputType | null
    _sum: ArticleVersionSumAggregateOutputType | null
    _min: ArticleVersionMinAggregateOutputType | null
    _max: ArticleVersionMaxAggregateOutputType | null
  }

  type GetArticleVersionGroupByPayload<T extends ArticleVersionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArticleVersionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArticleVersionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArticleVersionGroupByOutputType[P]>
            : GetScalarType<T[P], ArticleVersionGroupByOutputType[P]>
        }
      >
    >


  export type ArticleVersionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    articleId?: boolean
    version?: boolean
    title?: boolean
    content?: boolean
    changes?: boolean
    createdAt?: boolean
    authorId?: boolean
    changeType?: boolean
    article?: boolean | ArticleDefaultArgs<ExtArgs>
    author?: boolean | ArticleVersion$authorArgs<ExtArgs>
  }, ExtArgs["result"]["articleVersion"]>

  export type ArticleVersionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    articleId?: boolean
    version?: boolean
    title?: boolean
    content?: boolean
    changes?: boolean
    createdAt?: boolean
    authorId?: boolean
    changeType?: boolean
    article?: boolean | ArticleDefaultArgs<ExtArgs>
    author?: boolean | ArticleVersion$authorArgs<ExtArgs>
  }, ExtArgs["result"]["articleVersion"]>

  export type ArticleVersionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    articleId?: boolean
    version?: boolean
    title?: boolean
    content?: boolean
    changes?: boolean
    createdAt?: boolean
    authorId?: boolean
    changeType?: boolean
    article?: boolean | ArticleDefaultArgs<ExtArgs>
    author?: boolean | ArticleVersion$authorArgs<ExtArgs>
  }, ExtArgs["result"]["articleVersion"]>

  export type ArticleVersionSelectScalar = {
    id?: boolean
    articleId?: boolean
    version?: boolean
    title?: boolean
    content?: boolean
    changes?: boolean
    createdAt?: boolean
    authorId?: boolean
    changeType?: boolean
  }

  export type ArticleVersionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "articleId" | "version" | "title" | "content" | "changes" | "createdAt" | "authorId" | "changeType", ExtArgs["result"]["articleVersion"]>
  export type ArticleVersionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article?: boolean | ArticleDefaultArgs<ExtArgs>
    author?: boolean | ArticleVersion$authorArgs<ExtArgs>
  }
  export type ArticleVersionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article?: boolean | ArticleDefaultArgs<ExtArgs>
    author?: boolean | ArticleVersion$authorArgs<ExtArgs>
  }
  export type ArticleVersionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article?: boolean | ArticleDefaultArgs<ExtArgs>
    author?: boolean | ArticleVersion$authorArgs<ExtArgs>
  }

  export type $ArticleVersionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArticleVersion"
    objects: {
      article: Prisma.$ArticlePayload<ExtArgs>
      author: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      articleId: string
      version: number
      title: string
      content: string
      changes: string | null
      createdAt: Date
      authorId: string | null
      changeType: string | null
    }, ExtArgs["result"]["articleVersion"]>
    composites: {}
  }

  type ArticleVersionGetPayload<S extends boolean | null | undefined | ArticleVersionDefaultArgs> = $Result.GetResult<Prisma.$ArticleVersionPayload, S>

  type ArticleVersionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArticleVersionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArticleVersionCountAggregateInputType | true
    }

  export interface ArticleVersionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArticleVersion'], meta: { name: 'ArticleVersion' } }
    /**
     * Find zero or one ArticleVersion that matches the filter.
     * @param {ArticleVersionFindUniqueArgs} args - Arguments to find a ArticleVersion
     * @example
     * // Get one ArticleVersion
     * const articleVersion = await prisma.articleVersion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArticleVersionFindUniqueArgs>(args: SelectSubset<T, ArticleVersionFindUniqueArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ArticleVersion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArticleVersionFindUniqueOrThrowArgs} args - Arguments to find a ArticleVersion
     * @example
     * // Get one ArticleVersion
     * const articleVersion = await prisma.articleVersion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArticleVersionFindUniqueOrThrowArgs>(args: SelectSubset<T, ArticleVersionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArticleVersion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionFindFirstArgs} args - Arguments to find a ArticleVersion
     * @example
     * // Get one ArticleVersion
     * const articleVersion = await prisma.articleVersion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArticleVersionFindFirstArgs>(args?: SelectSubset<T, ArticleVersionFindFirstArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArticleVersion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionFindFirstOrThrowArgs} args - Arguments to find a ArticleVersion
     * @example
     * // Get one ArticleVersion
     * const articleVersion = await prisma.articleVersion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArticleVersionFindFirstOrThrowArgs>(args?: SelectSubset<T, ArticleVersionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ArticleVersions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArticleVersions
     * const articleVersions = await prisma.articleVersion.findMany()
     * 
     * // Get first 10 ArticleVersions
     * const articleVersions = await prisma.articleVersion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const articleVersionWithIdOnly = await prisma.articleVersion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArticleVersionFindManyArgs>(args?: SelectSubset<T, ArticleVersionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ArticleVersion.
     * @param {ArticleVersionCreateArgs} args - Arguments to create a ArticleVersion.
     * @example
     * // Create one ArticleVersion
     * const ArticleVersion = await prisma.articleVersion.create({
     *   data: {
     *     // ... data to create a ArticleVersion
     *   }
     * })
     * 
     */
    create<T extends ArticleVersionCreateArgs>(args: SelectSubset<T, ArticleVersionCreateArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ArticleVersions.
     * @param {ArticleVersionCreateManyArgs} args - Arguments to create many ArticleVersions.
     * @example
     * // Create many ArticleVersions
     * const articleVersion = await prisma.articleVersion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArticleVersionCreateManyArgs>(args?: SelectSubset<T, ArticleVersionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArticleVersions and returns the data saved in the database.
     * @param {ArticleVersionCreateManyAndReturnArgs} args - Arguments to create many ArticleVersions.
     * @example
     * // Create many ArticleVersions
     * const articleVersion = await prisma.articleVersion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArticleVersions and only return the `id`
     * const articleVersionWithIdOnly = await prisma.articleVersion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArticleVersionCreateManyAndReturnArgs>(args?: SelectSubset<T, ArticleVersionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ArticleVersion.
     * @param {ArticleVersionDeleteArgs} args - Arguments to delete one ArticleVersion.
     * @example
     * // Delete one ArticleVersion
     * const ArticleVersion = await prisma.articleVersion.delete({
     *   where: {
     *     // ... filter to delete one ArticleVersion
     *   }
     * })
     * 
     */
    delete<T extends ArticleVersionDeleteArgs>(args: SelectSubset<T, ArticleVersionDeleteArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ArticleVersion.
     * @param {ArticleVersionUpdateArgs} args - Arguments to update one ArticleVersion.
     * @example
     * // Update one ArticleVersion
     * const articleVersion = await prisma.articleVersion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArticleVersionUpdateArgs>(args: SelectSubset<T, ArticleVersionUpdateArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ArticleVersions.
     * @param {ArticleVersionDeleteManyArgs} args - Arguments to filter ArticleVersions to delete.
     * @example
     * // Delete a few ArticleVersions
     * const { count } = await prisma.articleVersion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArticleVersionDeleteManyArgs>(args?: SelectSubset<T, ArticleVersionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArticleVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArticleVersions
     * const articleVersion = await prisma.articleVersion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArticleVersionUpdateManyArgs>(args: SelectSubset<T, ArticleVersionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArticleVersions and returns the data updated in the database.
     * @param {ArticleVersionUpdateManyAndReturnArgs} args - Arguments to update many ArticleVersions.
     * @example
     * // Update many ArticleVersions
     * const articleVersion = await prisma.articleVersion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ArticleVersions and only return the `id`
     * const articleVersionWithIdOnly = await prisma.articleVersion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArticleVersionUpdateManyAndReturnArgs>(args: SelectSubset<T, ArticleVersionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ArticleVersion.
     * @param {ArticleVersionUpsertArgs} args - Arguments to update or create a ArticleVersion.
     * @example
     * // Update or create a ArticleVersion
     * const articleVersion = await prisma.articleVersion.upsert({
     *   create: {
     *     // ... data to create a ArticleVersion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArticleVersion we want to update
     *   }
     * })
     */
    upsert<T extends ArticleVersionUpsertArgs>(args: SelectSubset<T, ArticleVersionUpsertArgs<ExtArgs>>): Prisma__ArticleVersionClient<$Result.GetResult<Prisma.$ArticleVersionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ArticleVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionCountArgs} args - Arguments to filter ArticleVersions to count.
     * @example
     * // Count the number of ArticleVersions
     * const count = await prisma.articleVersion.count({
     *   where: {
     *     // ... the filter for the ArticleVersions we want to count
     *   }
     * })
    **/
    count<T extends ArticleVersionCountArgs>(
      args?: Subset<T, ArticleVersionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArticleVersionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArticleVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArticleVersionAggregateArgs>(args: Subset<T, ArticleVersionAggregateArgs>): Prisma.PrismaPromise<GetArticleVersionAggregateType<T>>

    /**
     * Group by ArticleVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleVersionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArticleVersionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArticleVersionGroupByArgs['orderBy'] }
        : { orderBy?: ArticleVersionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArticleVersionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticleVersionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArticleVersion model
   */
  readonly fields: ArticleVersionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArticleVersion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArticleVersionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    article<T extends ArticleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ArticleDefaultArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    author<T extends ArticleVersion$authorArgs<ExtArgs> = {}>(args?: Subset<T, ArticleVersion$authorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArticleVersion model
   */
  interface ArticleVersionFieldRefs {
    readonly id: FieldRef<"ArticleVersion", 'String'>
    readonly articleId: FieldRef<"ArticleVersion", 'String'>
    readonly version: FieldRef<"ArticleVersion", 'Int'>
    readonly title: FieldRef<"ArticleVersion", 'String'>
    readonly content: FieldRef<"ArticleVersion", 'String'>
    readonly changes: FieldRef<"ArticleVersion", 'String'>
    readonly createdAt: FieldRef<"ArticleVersion", 'DateTime'>
    readonly authorId: FieldRef<"ArticleVersion", 'String'>
    readonly changeType: FieldRef<"ArticleVersion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ArticleVersion findUnique
   */
  export type ArticleVersionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * Filter, which ArticleVersion to fetch.
     */
    where: ArticleVersionWhereUniqueInput
  }

  /**
   * ArticleVersion findUniqueOrThrow
   */
  export type ArticleVersionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * Filter, which ArticleVersion to fetch.
     */
    where: ArticleVersionWhereUniqueInput
  }

  /**
   * ArticleVersion findFirst
   */
  export type ArticleVersionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * Filter, which ArticleVersion to fetch.
     */
    where?: ArticleVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleVersions to fetch.
     */
    orderBy?: ArticleVersionOrderByWithRelationInput | ArticleVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArticleVersions.
     */
    cursor?: ArticleVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArticleVersions.
     */
    distinct?: ArticleVersionScalarFieldEnum | ArticleVersionScalarFieldEnum[]
  }

  /**
   * ArticleVersion findFirstOrThrow
   */
  export type ArticleVersionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * Filter, which ArticleVersion to fetch.
     */
    where?: ArticleVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleVersions to fetch.
     */
    orderBy?: ArticleVersionOrderByWithRelationInput | ArticleVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArticleVersions.
     */
    cursor?: ArticleVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArticleVersions.
     */
    distinct?: ArticleVersionScalarFieldEnum | ArticleVersionScalarFieldEnum[]
  }

  /**
   * ArticleVersion findMany
   */
  export type ArticleVersionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * Filter, which ArticleVersions to fetch.
     */
    where?: ArticleVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleVersions to fetch.
     */
    orderBy?: ArticleVersionOrderByWithRelationInput | ArticleVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArticleVersions.
     */
    cursor?: ArticleVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleVersions.
     */
    skip?: number
    distinct?: ArticleVersionScalarFieldEnum | ArticleVersionScalarFieldEnum[]
  }

  /**
   * ArticleVersion create
   */
  export type ArticleVersionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * The data needed to create a ArticleVersion.
     */
    data: XOR<ArticleVersionCreateInput, ArticleVersionUncheckedCreateInput>
  }

  /**
   * ArticleVersion createMany
   */
  export type ArticleVersionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArticleVersions.
     */
    data: ArticleVersionCreateManyInput | ArticleVersionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArticleVersion createManyAndReturn
   */
  export type ArticleVersionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * The data used to create many ArticleVersions.
     */
    data: ArticleVersionCreateManyInput | ArticleVersionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArticleVersion update
   */
  export type ArticleVersionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * The data needed to update a ArticleVersion.
     */
    data: XOR<ArticleVersionUpdateInput, ArticleVersionUncheckedUpdateInput>
    /**
     * Choose, which ArticleVersion to update.
     */
    where: ArticleVersionWhereUniqueInput
  }

  /**
   * ArticleVersion updateMany
   */
  export type ArticleVersionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArticleVersions.
     */
    data: XOR<ArticleVersionUpdateManyMutationInput, ArticleVersionUncheckedUpdateManyInput>
    /**
     * Filter which ArticleVersions to update
     */
    where?: ArticleVersionWhereInput
    /**
     * Limit how many ArticleVersions to update.
     */
    limit?: number
  }

  /**
   * ArticleVersion updateManyAndReturn
   */
  export type ArticleVersionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * The data used to update ArticleVersions.
     */
    data: XOR<ArticleVersionUpdateManyMutationInput, ArticleVersionUncheckedUpdateManyInput>
    /**
     * Filter which ArticleVersions to update
     */
    where?: ArticleVersionWhereInput
    /**
     * Limit how many ArticleVersions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArticleVersion upsert
   */
  export type ArticleVersionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * The filter to search for the ArticleVersion to update in case it exists.
     */
    where: ArticleVersionWhereUniqueInput
    /**
     * In case the ArticleVersion found by the `where` argument doesn't exist, create a new ArticleVersion with this data.
     */
    create: XOR<ArticleVersionCreateInput, ArticleVersionUncheckedCreateInput>
    /**
     * In case the ArticleVersion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArticleVersionUpdateInput, ArticleVersionUncheckedUpdateInput>
  }

  /**
   * ArticleVersion delete
   */
  export type ArticleVersionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
    /**
     * Filter which ArticleVersion to delete.
     */
    where: ArticleVersionWhereUniqueInput
  }

  /**
   * ArticleVersion deleteMany
   */
  export type ArticleVersionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArticleVersions to delete
     */
    where?: ArticleVersionWhereInput
    /**
     * Limit how many ArticleVersions to delete.
     */
    limit?: number
  }

  /**
   * ArticleVersion.author
   */
  export type ArticleVersion$authorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ArticleVersion without action
   */
  export type ArticleVersionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleVersion
     */
    select?: ArticleVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleVersion
     */
    omit?: ArticleVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleVersionInclude<ExtArgs> | null
  }


  /**
   * Model ArticleAnalytics
   */

  export type AggregateArticleAnalytics = {
    _count: ArticleAnalyticsCountAggregateOutputType | null
    _avg: ArticleAnalyticsAvgAggregateOutputType | null
    _sum: ArticleAnalyticsSumAggregateOutputType | null
    _min: ArticleAnalyticsMinAggregateOutputType | null
    _max: ArticleAnalyticsMaxAggregateOutputType | null
  }

  export type ArticleAnalyticsAvgAggregateOutputType = {
    views: number | null
    uniqueViews: number | null
    shares: number | null
    comments: number | null
    avgReadTime: number | null
    bounceRate: number | null
    engagementRate: number | null
  }

  export type ArticleAnalyticsSumAggregateOutputType = {
    views: number | null
    uniqueViews: number | null
    shares: number | null
    comments: number | null
    avgReadTime: number | null
    bounceRate: number | null
    engagementRate: number | null
  }

  export type ArticleAnalyticsMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    articleId: string | null
    date: Date | null
    views: number | null
    uniqueViews: number | null
    shares: number | null
    comments: number | null
    avgReadTime: number | null
    bounceRate: number | null
    engagementRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ArticleAnalyticsMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    articleId: string | null
    date: Date | null
    views: number | null
    uniqueViews: number | null
    shares: number | null
    comments: number | null
    avgReadTime: number | null
    bounceRate: number | null
    engagementRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ArticleAnalyticsCountAggregateOutputType = {
    id: number
    organizationId: number
    articleId: number
    date: number
    views: number
    uniqueViews: number
    shares: number
    comments: number
    avgReadTime: number
    bounceRate: number
    engagementRate: number
    trafficSources: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ArticleAnalyticsAvgAggregateInputType = {
    views?: true
    uniqueViews?: true
    shares?: true
    comments?: true
    avgReadTime?: true
    bounceRate?: true
    engagementRate?: true
  }

  export type ArticleAnalyticsSumAggregateInputType = {
    views?: true
    uniqueViews?: true
    shares?: true
    comments?: true
    avgReadTime?: true
    bounceRate?: true
    engagementRate?: true
  }

  export type ArticleAnalyticsMinAggregateInputType = {
    id?: true
    organizationId?: true
    articleId?: true
    date?: true
    views?: true
    uniqueViews?: true
    shares?: true
    comments?: true
    avgReadTime?: true
    bounceRate?: true
    engagementRate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ArticleAnalyticsMaxAggregateInputType = {
    id?: true
    organizationId?: true
    articleId?: true
    date?: true
    views?: true
    uniqueViews?: true
    shares?: true
    comments?: true
    avgReadTime?: true
    bounceRate?: true
    engagementRate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ArticleAnalyticsCountAggregateInputType = {
    id?: true
    organizationId?: true
    articleId?: true
    date?: true
    views?: true
    uniqueViews?: true
    shares?: true
    comments?: true
    avgReadTime?: true
    bounceRate?: true
    engagementRate?: true
    trafficSources?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ArticleAnalyticsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArticleAnalytics to aggregate.
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleAnalytics to fetch.
     */
    orderBy?: ArticleAnalyticsOrderByWithRelationInput | ArticleAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArticleAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArticleAnalytics
    **/
    _count?: true | ArticleAnalyticsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArticleAnalyticsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArticleAnalyticsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArticleAnalyticsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArticleAnalyticsMaxAggregateInputType
  }

  export type GetArticleAnalyticsAggregateType<T extends ArticleAnalyticsAggregateArgs> = {
        [P in keyof T & keyof AggregateArticleAnalytics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticleAnalytics[P]>
      : GetScalarType<T[P], AggregateArticleAnalytics[P]>
  }




  export type ArticleAnalyticsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArticleAnalyticsWhereInput
    orderBy?: ArticleAnalyticsOrderByWithAggregationInput | ArticleAnalyticsOrderByWithAggregationInput[]
    by: ArticleAnalyticsScalarFieldEnum[] | ArticleAnalyticsScalarFieldEnum
    having?: ArticleAnalyticsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArticleAnalyticsCountAggregateInputType | true
    _avg?: ArticleAnalyticsAvgAggregateInputType
    _sum?: ArticleAnalyticsSumAggregateInputType
    _min?: ArticleAnalyticsMinAggregateInputType
    _max?: ArticleAnalyticsMaxAggregateInputType
  }

  export type ArticleAnalyticsGroupByOutputType = {
    id: string
    organizationId: string
    articleId: string
    date: Date
    views: number
    uniqueViews: number
    shares: number
    comments: number
    avgReadTime: number
    bounceRate: number
    engagementRate: number
    trafficSources: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: ArticleAnalyticsCountAggregateOutputType | null
    _avg: ArticleAnalyticsAvgAggregateOutputType | null
    _sum: ArticleAnalyticsSumAggregateOutputType | null
    _min: ArticleAnalyticsMinAggregateOutputType | null
    _max: ArticleAnalyticsMaxAggregateOutputType | null
  }

  type GetArticleAnalyticsGroupByPayload<T extends ArticleAnalyticsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArticleAnalyticsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArticleAnalyticsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArticleAnalyticsGroupByOutputType[P]>
            : GetScalarType<T[P], ArticleAnalyticsGroupByOutputType[P]>
        }
      >
    >


  export type ArticleAnalyticsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    articleId?: boolean
    date?: boolean
    views?: boolean
    uniqueViews?: boolean
    shares?: boolean
    comments?: boolean
    avgReadTime?: boolean
    bounceRate?: boolean
    engagementRate?: boolean
    trafficSources?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    article?: boolean | ArticleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articleAnalytics"]>

  export type ArticleAnalyticsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    articleId?: boolean
    date?: boolean
    views?: boolean
    uniqueViews?: boolean
    shares?: boolean
    comments?: boolean
    avgReadTime?: boolean
    bounceRate?: boolean
    engagementRate?: boolean
    trafficSources?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    article?: boolean | ArticleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articleAnalytics"]>

  export type ArticleAnalyticsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    articleId?: boolean
    date?: boolean
    views?: boolean
    uniqueViews?: boolean
    shares?: boolean
    comments?: boolean
    avgReadTime?: boolean
    bounceRate?: boolean
    engagementRate?: boolean
    trafficSources?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    article?: boolean | ArticleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articleAnalytics"]>

  export type ArticleAnalyticsSelectScalar = {
    id?: boolean
    organizationId?: boolean
    articleId?: boolean
    date?: boolean
    views?: boolean
    uniqueViews?: boolean
    shares?: boolean
    comments?: boolean
    avgReadTime?: boolean
    bounceRate?: boolean
    engagementRate?: boolean
    trafficSources?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ArticleAnalyticsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "articleId" | "date" | "views" | "uniqueViews" | "shares" | "comments" | "avgReadTime" | "bounceRate" | "engagementRate" | "trafficSources" | "createdAt" | "updatedAt", ExtArgs["result"]["articleAnalytics"]>
  export type ArticleAnalyticsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    article?: boolean | ArticleDefaultArgs<ExtArgs>
  }
  export type ArticleAnalyticsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    article?: boolean | ArticleDefaultArgs<ExtArgs>
  }
  export type ArticleAnalyticsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    article?: boolean | ArticleDefaultArgs<ExtArgs>
  }

  export type $ArticleAnalyticsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArticleAnalytics"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      article: Prisma.$ArticlePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      articleId: string
      date: Date
      views: number
      uniqueViews: number
      shares: number
      comments: number
      avgReadTime: number
      bounceRate: number
      engagementRate: number
      trafficSources: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["articleAnalytics"]>
    composites: {}
  }

  type ArticleAnalyticsGetPayload<S extends boolean | null | undefined | ArticleAnalyticsDefaultArgs> = $Result.GetResult<Prisma.$ArticleAnalyticsPayload, S>

  type ArticleAnalyticsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ArticleAnalyticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArticleAnalyticsCountAggregateInputType | true
    }

  export interface ArticleAnalyticsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArticleAnalytics'], meta: { name: 'ArticleAnalytics' } }
    /**
     * Find zero or one ArticleAnalytics that matches the filter.
     * @param {ArticleAnalyticsFindUniqueArgs} args - Arguments to find a ArticleAnalytics
     * @example
     * // Get one ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArticleAnalyticsFindUniqueArgs>(args: SelectSubset<T, ArticleAnalyticsFindUniqueArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ArticleAnalytics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ArticleAnalyticsFindUniqueOrThrowArgs} args - Arguments to find a ArticleAnalytics
     * @example
     * // Get one ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArticleAnalyticsFindUniqueOrThrowArgs>(args: SelectSubset<T, ArticleAnalyticsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArticleAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsFindFirstArgs} args - Arguments to find a ArticleAnalytics
     * @example
     * // Get one ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArticleAnalyticsFindFirstArgs>(args?: SelectSubset<T, ArticleAnalyticsFindFirstArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ArticleAnalytics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsFindFirstOrThrowArgs} args - Arguments to find a ArticleAnalytics
     * @example
     * // Get one ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArticleAnalyticsFindFirstOrThrowArgs>(args?: SelectSubset<T, ArticleAnalyticsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ArticleAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.findMany()
     * 
     * // Get first 10 ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const articleAnalyticsWithIdOnly = await prisma.articleAnalytics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArticleAnalyticsFindManyArgs>(args?: SelectSubset<T, ArticleAnalyticsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ArticleAnalytics.
     * @param {ArticleAnalyticsCreateArgs} args - Arguments to create a ArticleAnalytics.
     * @example
     * // Create one ArticleAnalytics
     * const ArticleAnalytics = await prisma.articleAnalytics.create({
     *   data: {
     *     // ... data to create a ArticleAnalytics
     *   }
     * })
     * 
     */
    create<T extends ArticleAnalyticsCreateArgs>(args: SelectSubset<T, ArticleAnalyticsCreateArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ArticleAnalytics.
     * @param {ArticleAnalyticsCreateManyArgs} args - Arguments to create many ArticleAnalytics.
     * @example
     * // Create many ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArticleAnalyticsCreateManyArgs>(args?: SelectSubset<T, ArticleAnalyticsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArticleAnalytics and returns the data saved in the database.
     * @param {ArticleAnalyticsCreateManyAndReturnArgs} args - Arguments to create many ArticleAnalytics.
     * @example
     * // Create many ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArticleAnalytics and only return the `id`
     * const articleAnalyticsWithIdOnly = await prisma.articleAnalytics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArticleAnalyticsCreateManyAndReturnArgs>(args?: SelectSubset<T, ArticleAnalyticsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ArticleAnalytics.
     * @param {ArticleAnalyticsDeleteArgs} args - Arguments to delete one ArticleAnalytics.
     * @example
     * // Delete one ArticleAnalytics
     * const ArticleAnalytics = await prisma.articleAnalytics.delete({
     *   where: {
     *     // ... filter to delete one ArticleAnalytics
     *   }
     * })
     * 
     */
    delete<T extends ArticleAnalyticsDeleteArgs>(args: SelectSubset<T, ArticleAnalyticsDeleteArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ArticleAnalytics.
     * @param {ArticleAnalyticsUpdateArgs} args - Arguments to update one ArticleAnalytics.
     * @example
     * // Update one ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArticleAnalyticsUpdateArgs>(args: SelectSubset<T, ArticleAnalyticsUpdateArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ArticleAnalytics.
     * @param {ArticleAnalyticsDeleteManyArgs} args - Arguments to filter ArticleAnalytics to delete.
     * @example
     * // Delete a few ArticleAnalytics
     * const { count } = await prisma.articleAnalytics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArticleAnalyticsDeleteManyArgs>(args?: SelectSubset<T, ArticleAnalyticsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArticleAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArticleAnalyticsUpdateManyArgs>(args: SelectSubset<T, ArticleAnalyticsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArticleAnalytics and returns the data updated in the database.
     * @param {ArticleAnalyticsUpdateManyAndReturnArgs} args - Arguments to update many ArticleAnalytics.
     * @example
     * // Update many ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ArticleAnalytics and only return the `id`
     * const articleAnalyticsWithIdOnly = await prisma.articleAnalytics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ArticleAnalyticsUpdateManyAndReturnArgs>(args: SelectSubset<T, ArticleAnalyticsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ArticleAnalytics.
     * @param {ArticleAnalyticsUpsertArgs} args - Arguments to update or create a ArticleAnalytics.
     * @example
     * // Update or create a ArticleAnalytics
     * const articleAnalytics = await prisma.articleAnalytics.upsert({
     *   create: {
     *     // ... data to create a ArticleAnalytics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArticleAnalytics we want to update
     *   }
     * })
     */
    upsert<T extends ArticleAnalyticsUpsertArgs>(args: SelectSubset<T, ArticleAnalyticsUpsertArgs<ExtArgs>>): Prisma__ArticleAnalyticsClient<$Result.GetResult<Prisma.$ArticleAnalyticsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ArticleAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsCountArgs} args - Arguments to filter ArticleAnalytics to count.
     * @example
     * // Count the number of ArticleAnalytics
     * const count = await prisma.articleAnalytics.count({
     *   where: {
     *     // ... the filter for the ArticleAnalytics we want to count
     *   }
     * })
    **/
    count<T extends ArticleAnalyticsCountArgs>(
      args?: Subset<T, ArticleAnalyticsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArticleAnalyticsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArticleAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArticleAnalyticsAggregateArgs>(args: Subset<T, ArticleAnalyticsAggregateArgs>): Prisma.PrismaPromise<GetArticleAnalyticsAggregateType<T>>

    /**
     * Group by ArticleAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticleAnalyticsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArticleAnalyticsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArticleAnalyticsGroupByArgs['orderBy'] }
        : { orderBy?: ArticleAnalyticsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArticleAnalyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticleAnalyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArticleAnalytics model
   */
  readonly fields: ArticleAnalyticsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArticleAnalytics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArticleAnalyticsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    article<T extends ArticleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ArticleDefaultArgs<ExtArgs>>): Prisma__ArticleClient<$Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArticleAnalytics model
   */
  interface ArticleAnalyticsFieldRefs {
    readonly id: FieldRef<"ArticleAnalytics", 'String'>
    readonly organizationId: FieldRef<"ArticleAnalytics", 'String'>
    readonly articleId: FieldRef<"ArticleAnalytics", 'String'>
    readonly date: FieldRef<"ArticleAnalytics", 'DateTime'>
    readonly views: FieldRef<"ArticleAnalytics", 'Int'>
    readonly uniqueViews: FieldRef<"ArticleAnalytics", 'Int'>
    readonly shares: FieldRef<"ArticleAnalytics", 'Int'>
    readonly comments: FieldRef<"ArticleAnalytics", 'Int'>
    readonly avgReadTime: FieldRef<"ArticleAnalytics", 'Float'>
    readonly bounceRate: FieldRef<"ArticleAnalytics", 'Float'>
    readonly engagementRate: FieldRef<"ArticleAnalytics", 'Float'>
    readonly trafficSources: FieldRef<"ArticleAnalytics", 'Json'>
    readonly createdAt: FieldRef<"ArticleAnalytics", 'DateTime'>
    readonly updatedAt: FieldRef<"ArticleAnalytics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ArticleAnalytics findUnique
   */
  export type ArticleAnalyticsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ArticleAnalytics to fetch.
     */
    where: ArticleAnalyticsWhereUniqueInput
  }

  /**
   * ArticleAnalytics findUniqueOrThrow
   */
  export type ArticleAnalyticsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ArticleAnalytics to fetch.
     */
    where: ArticleAnalyticsWhereUniqueInput
  }

  /**
   * ArticleAnalytics findFirst
   */
  export type ArticleAnalyticsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ArticleAnalytics to fetch.
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleAnalytics to fetch.
     */
    orderBy?: ArticleAnalyticsOrderByWithRelationInput | ArticleAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArticleAnalytics.
     */
    cursor?: ArticleAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArticleAnalytics.
     */
    distinct?: ArticleAnalyticsScalarFieldEnum | ArticleAnalyticsScalarFieldEnum[]
  }

  /**
   * ArticleAnalytics findFirstOrThrow
   */
  export type ArticleAnalyticsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ArticleAnalytics to fetch.
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleAnalytics to fetch.
     */
    orderBy?: ArticleAnalyticsOrderByWithRelationInput | ArticleAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArticleAnalytics.
     */
    cursor?: ArticleAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArticleAnalytics.
     */
    distinct?: ArticleAnalyticsScalarFieldEnum | ArticleAnalyticsScalarFieldEnum[]
  }

  /**
   * ArticleAnalytics findMany
   */
  export type ArticleAnalyticsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ArticleAnalytics to fetch.
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArticleAnalytics to fetch.
     */
    orderBy?: ArticleAnalyticsOrderByWithRelationInput | ArticleAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArticleAnalytics.
     */
    cursor?: ArticleAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArticleAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArticleAnalytics.
     */
    skip?: number
    distinct?: ArticleAnalyticsScalarFieldEnum | ArticleAnalyticsScalarFieldEnum[]
  }

  /**
   * ArticleAnalytics create
   */
  export type ArticleAnalyticsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * The data needed to create a ArticleAnalytics.
     */
    data: XOR<ArticleAnalyticsCreateInput, ArticleAnalyticsUncheckedCreateInput>
  }

  /**
   * ArticleAnalytics createMany
   */
  export type ArticleAnalyticsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArticleAnalytics.
     */
    data: ArticleAnalyticsCreateManyInput | ArticleAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArticleAnalytics createManyAndReturn
   */
  export type ArticleAnalyticsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * The data used to create many ArticleAnalytics.
     */
    data: ArticleAnalyticsCreateManyInput | ArticleAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArticleAnalytics update
   */
  export type ArticleAnalyticsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * The data needed to update a ArticleAnalytics.
     */
    data: XOR<ArticleAnalyticsUpdateInput, ArticleAnalyticsUncheckedUpdateInput>
    /**
     * Choose, which ArticleAnalytics to update.
     */
    where: ArticleAnalyticsWhereUniqueInput
  }

  /**
   * ArticleAnalytics updateMany
   */
  export type ArticleAnalyticsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArticleAnalytics.
     */
    data: XOR<ArticleAnalyticsUpdateManyMutationInput, ArticleAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which ArticleAnalytics to update
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * Limit how many ArticleAnalytics to update.
     */
    limit?: number
  }

  /**
   * ArticleAnalytics updateManyAndReturn
   */
  export type ArticleAnalyticsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * The data used to update ArticleAnalytics.
     */
    data: XOR<ArticleAnalyticsUpdateManyMutationInput, ArticleAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which ArticleAnalytics to update
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * Limit how many ArticleAnalytics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ArticleAnalytics upsert
   */
  export type ArticleAnalyticsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * The filter to search for the ArticleAnalytics to update in case it exists.
     */
    where: ArticleAnalyticsWhereUniqueInput
    /**
     * In case the ArticleAnalytics found by the `where` argument doesn't exist, create a new ArticleAnalytics with this data.
     */
    create: XOR<ArticleAnalyticsCreateInput, ArticleAnalyticsUncheckedCreateInput>
    /**
     * In case the ArticleAnalytics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArticleAnalyticsUpdateInput, ArticleAnalyticsUncheckedUpdateInput>
  }

  /**
   * ArticleAnalytics delete
   */
  export type ArticleAnalyticsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
    /**
     * Filter which ArticleAnalytics to delete.
     */
    where: ArticleAnalyticsWhereUniqueInput
  }

  /**
   * ArticleAnalytics deleteMany
   */
  export type ArticleAnalyticsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArticleAnalytics to delete
     */
    where?: ArticleAnalyticsWhereInput
    /**
     * Limit how many ArticleAnalytics to delete.
     */
    limit?: number
  }

  /**
   * ArticleAnalytics without action
   */
  export type ArticleAnalyticsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticleAnalytics
     */
    select?: ArticleAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ArticleAnalytics
     */
    omit?: ArticleAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ArticleAnalyticsInclude<ExtArgs> | null
  }


  /**
   * Model NewsItem
   */

  export type AggregateNewsItem = {
    _count: NewsItemCountAggregateOutputType | null
    _avg: NewsItemAvgAggregateOutputType | null
    _sum: NewsItemSumAggregateOutputType | null
    _min: NewsItemMinAggregateOutputType | null
    _max: NewsItemMaxAggregateOutputType | null
  }

  export type NewsItemAvgAggregateOutputType = {
    sentiment: number | null
    importance: number | null
  }

  export type NewsItemSumAggregateOutputType = {
    sentiment: number | null
    importance: number | null
  }

  export type NewsItemMinAggregateOutputType = {
    id: string | null
    title: string | null
    summary: string | null
    content: string | null
    url: string | null
    imageUrl: string | null
    guid: string | null
    source: string | null
    author: string | null
    sentiment: number | null
    importance: number | null
    aiSummary: string | null
    hasGeneratedArticle: boolean | null
    generatedArticleId: string | null
    publishedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NewsItemMaxAggregateOutputType = {
    id: string | null
    title: string | null
    summary: string | null
    content: string | null
    url: string | null
    imageUrl: string | null
    guid: string | null
    source: string | null
    author: string | null
    sentiment: number | null
    importance: number | null
    aiSummary: string | null
    hasGeneratedArticle: boolean | null
    generatedArticleId: string | null
    publishedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NewsItemCountAggregateOutputType = {
    id: number
    title: number
    summary: number
    content: number
    url: number
    imageUrl: number
    guid: number
    source: number
    author: number
    sentiment: number
    importance: number
    aiSummary: number
    topics: number
    coins: number
    companies: number
    products: number
    technology: number
    market: number
    regulatory: number
    regions: number
    hasGeneratedArticle: number
    generatedArticleId: number
    publishedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NewsItemAvgAggregateInputType = {
    sentiment?: true
    importance?: true
  }

  export type NewsItemSumAggregateInputType = {
    sentiment?: true
    importance?: true
  }

  export type NewsItemMinAggregateInputType = {
    id?: true
    title?: true
    summary?: true
    content?: true
    url?: true
    imageUrl?: true
    guid?: true
    source?: true
    author?: true
    sentiment?: true
    importance?: true
    aiSummary?: true
    hasGeneratedArticle?: true
    generatedArticleId?: true
    publishedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NewsItemMaxAggregateInputType = {
    id?: true
    title?: true
    summary?: true
    content?: true
    url?: true
    imageUrl?: true
    guid?: true
    source?: true
    author?: true
    sentiment?: true
    importance?: true
    aiSummary?: true
    hasGeneratedArticle?: true
    generatedArticleId?: true
    publishedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NewsItemCountAggregateInputType = {
    id?: true
    title?: true
    summary?: true
    content?: true
    url?: true
    imageUrl?: true
    guid?: true
    source?: true
    author?: true
    sentiment?: true
    importance?: true
    aiSummary?: true
    topics?: true
    coins?: true
    companies?: true
    products?: true
    technology?: true
    market?: true
    regulatory?: true
    regions?: true
    hasGeneratedArticle?: true
    generatedArticleId?: true
    publishedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NewsItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsItem to aggregate.
     */
    where?: NewsItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsItems to fetch.
     */
    orderBy?: NewsItemOrderByWithRelationInput | NewsItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NewsItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NewsItems
    **/
    _count?: true | NewsItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NewsItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NewsItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NewsItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NewsItemMaxAggregateInputType
  }

  export type GetNewsItemAggregateType<T extends NewsItemAggregateArgs> = {
        [P in keyof T & keyof AggregateNewsItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNewsItem[P]>
      : GetScalarType<T[P], AggregateNewsItem[P]>
  }




  export type NewsItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NewsItemWhereInput
    orderBy?: NewsItemOrderByWithAggregationInput | NewsItemOrderByWithAggregationInput[]
    by: NewsItemScalarFieldEnum[] | NewsItemScalarFieldEnum
    having?: NewsItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NewsItemCountAggregateInputType | true
    _avg?: NewsItemAvgAggregateInputType
    _sum?: NewsItemSumAggregateInputType
    _min?: NewsItemMinAggregateInputType
    _max?: NewsItemMaxAggregateInputType
  }

  export type NewsItemGroupByOutputType = {
    id: string
    title: string
    summary: string | null
    content: string | null
    url: string
    imageUrl: string | null
    guid: string
    source: string
    author: string | null
    sentiment: number | null
    importance: number
    aiSummary: string | null
    topics: JsonValue | null
    coins: JsonValue | null
    companies: JsonValue | null
    products: JsonValue | null
    technology: JsonValue | null
    market: JsonValue | null
    regulatory: JsonValue | null
    regions: JsonValue | null
    hasGeneratedArticle: boolean
    generatedArticleId: string | null
    publishedAt: Date
    createdAt: Date
    updatedAt: Date
    _count: NewsItemCountAggregateOutputType | null
    _avg: NewsItemAvgAggregateOutputType | null
    _sum: NewsItemSumAggregateOutputType | null
    _min: NewsItemMinAggregateOutputType | null
    _max: NewsItemMaxAggregateOutputType | null
  }

  type GetNewsItemGroupByPayload<T extends NewsItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NewsItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NewsItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NewsItemGroupByOutputType[P]>
            : GetScalarType<T[P], NewsItemGroupByOutputType[P]>
        }
      >
    >


  export type NewsItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    summary?: boolean
    content?: boolean
    url?: boolean
    imageUrl?: boolean
    guid?: boolean
    source?: boolean
    author?: boolean
    sentiment?: boolean
    importance?: boolean
    aiSummary?: boolean
    topics?: boolean
    coins?: boolean
    companies?: boolean
    products?: boolean
    technology?: boolean
    market?: boolean
    regulatory?: boolean
    regions?: boolean
    hasGeneratedArticle?: boolean
    generatedArticleId?: boolean
    publishedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["newsItem"]>

  export type NewsItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    summary?: boolean
    content?: boolean
    url?: boolean
    imageUrl?: boolean
    guid?: boolean
    source?: boolean
    author?: boolean
    sentiment?: boolean
    importance?: boolean
    aiSummary?: boolean
    topics?: boolean
    coins?: boolean
    companies?: boolean
    products?: boolean
    technology?: boolean
    market?: boolean
    regulatory?: boolean
    regions?: boolean
    hasGeneratedArticle?: boolean
    generatedArticleId?: boolean
    publishedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["newsItem"]>

  export type NewsItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    summary?: boolean
    content?: boolean
    url?: boolean
    imageUrl?: boolean
    guid?: boolean
    source?: boolean
    author?: boolean
    sentiment?: boolean
    importance?: boolean
    aiSummary?: boolean
    topics?: boolean
    coins?: boolean
    companies?: boolean
    products?: boolean
    technology?: boolean
    market?: boolean
    regulatory?: boolean
    regions?: boolean
    hasGeneratedArticle?: boolean
    generatedArticleId?: boolean
    publishedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["newsItem"]>

  export type NewsItemSelectScalar = {
    id?: boolean
    title?: boolean
    summary?: boolean
    content?: boolean
    url?: boolean
    imageUrl?: boolean
    guid?: boolean
    source?: boolean
    author?: boolean
    sentiment?: boolean
    importance?: boolean
    aiSummary?: boolean
    topics?: boolean
    coins?: boolean
    companies?: boolean
    products?: boolean
    technology?: boolean
    market?: boolean
    regulatory?: boolean
    regions?: boolean
    hasGeneratedArticle?: boolean
    generatedArticleId?: boolean
    publishedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NewsItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "summary" | "content" | "url" | "imageUrl" | "guid" | "source" | "author" | "sentiment" | "importance" | "aiSummary" | "topics" | "coins" | "companies" | "products" | "technology" | "market" | "regulatory" | "regions" | "hasGeneratedArticle" | "generatedArticleId" | "publishedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["newsItem"]>

  export type $NewsItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NewsItem"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      summary: string | null
      content: string | null
      url: string
      imageUrl: string | null
      guid: string
      source: string
      author: string | null
      sentiment: number | null
      importance: number
      aiSummary: string | null
      topics: Prisma.JsonValue | null
      coins: Prisma.JsonValue | null
      companies: Prisma.JsonValue | null
      products: Prisma.JsonValue | null
      technology: Prisma.JsonValue | null
      market: Prisma.JsonValue | null
      regulatory: Prisma.JsonValue | null
      regions: Prisma.JsonValue | null
      hasGeneratedArticle: boolean
      generatedArticleId: string | null
      publishedAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["newsItem"]>
    composites: {}
  }

  type NewsItemGetPayload<S extends boolean | null | undefined | NewsItemDefaultArgs> = $Result.GetResult<Prisma.$NewsItemPayload, S>

  type NewsItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NewsItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NewsItemCountAggregateInputType | true
    }

  export interface NewsItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NewsItem'], meta: { name: 'NewsItem' } }
    /**
     * Find zero or one NewsItem that matches the filter.
     * @param {NewsItemFindUniqueArgs} args - Arguments to find a NewsItem
     * @example
     * // Get one NewsItem
     * const newsItem = await prisma.newsItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NewsItemFindUniqueArgs>(args: SelectSubset<T, NewsItemFindUniqueArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one NewsItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NewsItemFindUniqueOrThrowArgs} args - Arguments to find a NewsItem
     * @example
     * // Get one NewsItem
     * const newsItem = await prisma.newsItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NewsItemFindUniqueOrThrowArgs>(args: SelectSubset<T, NewsItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NewsItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemFindFirstArgs} args - Arguments to find a NewsItem
     * @example
     * // Get one NewsItem
     * const newsItem = await prisma.newsItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NewsItemFindFirstArgs>(args?: SelectSubset<T, NewsItemFindFirstArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NewsItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemFindFirstOrThrowArgs} args - Arguments to find a NewsItem
     * @example
     * // Get one NewsItem
     * const newsItem = await prisma.newsItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NewsItemFindFirstOrThrowArgs>(args?: SelectSubset<T, NewsItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more NewsItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NewsItems
     * const newsItems = await prisma.newsItem.findMany()
     * 
     * // Get first 10 NewsItems
     * const newsItems = await prisma.newsItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const newsItemWithIdOnly = await prisma.newsItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NewsItemFindManyArgs>(args?: SelectSubset<T, NewsItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a NewsItem.
     * @param {NewsItemCreateArgs} args - Arguments to create a NewsItem.
     * @example
     * // Create one NewsItem
     * const NewsItem = await prisma.newsItem.create({
     *   data: {
     *     // ... data to create a NewsItem
     *   }
     * })
     * 
     */
    create<T extends NewsItemCreateArgs>(args: SelectSubset<T, NewsItemCreateArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many NewsItems.
     * @param {NewsItemCreateManyArgs} args - Arguments to create many NewsItems.
     * @example
     * // Create many NewsItems
     * const newsItem = await prisma.newsItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NewsItemCreateManyArgs>(args?: SelectSubset<T, NewsItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many NewsItems and returns the data saved in the database.
     * @param {NewsItemCreateManyAndReturnArgs} args - Arguments to create many NewsItems.
     * @example
     * // Create many NewsItems
     * const newsItem = await prisma.newsItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many NewsItems and only return the `id`
     * const newsItemWithIdOnly = await prisma.newsItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NewsItemCreateManyAndReturnArgs>(args?: SelectSubset<T, NewsItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a NewsItem.
     * @param {NewsItemDeleteArgs} args - Arguments to delete one NewsItem.
     * @example
     * // Delete one NewsItem
     * const NewsItem = await prisma.newsItem.delete({
     *   where: {
     *     // ... filter to delete one NewsItem
     *   }
     * })
     * 
     */
    delete<T extends NewsItemDeleteArgs>(args: SelectSubset<T, NewsItemDeleteArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one NewsItem.
     * @param {NewsItemUpdateArgs} args - Arguments to update one NewsItem.
     * @example
     * // Update one NewsItem
     * const newsItem = await prisma.newsItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NewsItemUpdateArgs>(args: SelectSubset<T, NewsItemUpdateArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more NewsItems.
     * @param {NewsItemDeleteManyArgs} args - Arguments to filter NewsItems to delete.
     * @example
     * // Delete a few NewsItems
     * const { count } = await prisma.newsItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NewsItemDeleteManyArgs>(args?: SelectSubset<T, NewsItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NewsItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NewsItems
     * const newsItem = await prisma.newsItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NewsItemUpdateManyArgs>(args: SelectSubset<T, NewsItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NewsItems and returns the data updated in the database.
     * @param {NewsItemUpdateManyAndReturnArgs} args - Arguments to update many NewsItems.
     * @example
     * // Update many NewsItems
     * const newsItem = await prisma.newsItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more NewsItems and only return the `id`
     * const newsItemWithIdOnly = await prisma.newsItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NewsItemUpdateManyAndReturnArgs>(args: SelectSubset<T, NewsItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one NewsItem.
     * @param {NewsItemUpsertArgs} args - Arguments to update or create a NewsItem.
     * @example
     * // Update or create a NewsItem
     * const newsItem = await prisma.newsItem.upsert({
     *   create: {
     *     // ... data to create a NewsItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NewsItem we want to update
     *   }
     * })
     */
    upsert<T extends NewsItemUpsertArgs>(args: SelectSubset<T, NewsItemUpsertArgs<ExtArgs>>): Prisma__NewsItemClient<$Result.GetResult<Prisma.$NewsItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of NewsItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemCountArgs} args - Arguments to filter NewsItems to count.
     * @example
     * // Count the number of NewsItems
     * const count = await prisma.newsItem.count({
     *   where: {
     *     // ... the filter for the NewsItems we want to count
     *   }
     * })
    **/
    count<T extends NewsItemCountArgs>(
      args?: Subset<T, NewsItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NewsItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NewsItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NewsItemAggregateArgs>(args: Subset<T, NewsItemAggregateArgs>): Prisma.PrismaPromise<GetNewsItemAggregateType<T>>

    /**
     * Group by NewsItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NewsItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NewsItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NewsItemGroupByArgs['orderBy'] }
        : { orderBy?: NewsItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NewsItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNewsItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NewsItem model
   */
  readonly fields: NewsItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NewsItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NewsItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NewsItem model
   */
  interface NewsItemFieldRefs {
    readonly id: FieldRef<"NewsItem", 'String'>
    readonly title: FieldRef<"NewsItem", 'String'>
    readonly summary: FieldRef<"NewsItem", 'String'>
    readonly content: FieldRef<"NewsItem", 'String'>
    readonly url: FieldRef<"NewsItem", 'String'>
    readonly imageUrl: FieldRef<"NewsItem", 'String'>
    readonly guid: FieldRef<"NewsItem", 'String'>
    readonly source: FieldRef<"NewsItem", 'String'>
    readonly author: FieldRef<"NewsItem", 'String'>
    readonly sentiment: FieldRef<"NewsItem", 'Float'>
    readonly importance: FieldRef<"NewsItem", 'Int'>
    readonly aiSummary: FieldRef<"NewsItem", 'String'>
    readonly topics: FieldRef<"NewsItem", 'Json'>
    readonly coins: FieldRef<"NewsItem", 'Json'>
    readonly companies: FieldRef<"NewsItem", 'Json'>
    readonly products: FieldRef<"NewsItem", 'Json'>
    readonly technology: FieldRef<"NewsItem", 'Json'>
    readonly market: FieldRef<"NewsItem", 'Json'>
    readonly regulatory: FieldRef<"NewsItem", 'Json'>
    readonly regions: FieldRef<"NewsItem", 'Json'>
    readonly hasGeneratedArticle: FieldRef<"NewsItem", 'Boolean'>
    readonly generatedArticleId: FieldRef<"NewsItem", 'String'>
    readonly publishedAt: FieldRef<"NewsItem", 'DateTime'>
    readonly createdAt: FieldRef<"NewsItem", 'DateTime'>
    readonly updatedAt: FieldRef<"NewsItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * NewsItem findUnique
   */
  export type NewsItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * Filter, which NewsItem to fetch.
     */
    where: NewsItemWhereUniqueInput
  }

  /**
   * NewsItem findUniqueOrThrow
   */
  export type NewsItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * Filter, which NewsItem to fetch.
     */
    where: NewsItemWhereUniqueInput
  }

  /**
   * NewsItem findFirst
   */
  export type NewsItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * Filter, which NewsItem to fetch.
     */
    where?: NewsItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsItems to fetch.
     */
    orderBy?: NewsItemOrderByWithRelationInput | NewsItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsItems.
     */
    cursor?: NewsItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsItems.
     */
    distinct?: NewsItemScalarFieldEnum | NewsItemScalarFieldEnum[]
  }

  /**
   * NewsItem findFirstOrThrow
   */
  export type NewsItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * Filter, which NewsItem to fetch.
     */
    where?: NewsItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsItems to fetch.
     */
    orderBy?: NewsItemOrderByWithRelationInput | NewsItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NewsItems.
     */
    cursor?: NewsItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NewsItems.
     */
    distinct?: NewsItemScalarFieldEnum | NewsItemScalarFieldEnum[]
  }

  /**
   * NewsItem findMany
   */
  export type NewsItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * Filter, which NewsItems to fetch.
     */
    where?: NewsItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NewsItems to fetch.
     */
    orderBy?: NewsItemOrderByWithRelationInput | NewsItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NewsItems.
     */
    cursor?: NewsItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NewsItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NewsItems.
     */
    skip?: number
    distinct?: NewsItemScalarFieldEnum | NewsItemScalarFieldEnum[]
  }

  /**
   * NewsItem create
   */
  export type NewsItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * The data needed to create a NewsItem.
     */
    data: XOR<NewsItemCreateInput, NewsItemUncheckedCreateInput>
  }

  /**
   * NewsItem createMany
   */
  export type NewsItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NewsItems.
     */
    data: NewsItemCreateManyInput | NewsItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NewsItem createManyAndReturn
   */
  export type NewsItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * The data used to create many NewsItems.
     */
    data: NewsItemCreateManyInput | NewsItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NewsItem update
   */
  export type NewsItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * The data needed to update a NewsItem.
     */
    data: XOR<NewsItemUpdateInput, NewsItemUncheckedUpdateInput>
    /**
     * Choose, which NewsItem to update.
     */
    where: NewsItemWhereUniqueInput
  }

  /**
   * NewsItem updateMany
   */
  export type NewsItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NewsItems.
     */
    data: XOR<NewsItemUpdateManyMutationInput, NewsItemUncheckedUpdateManyInput>
    /**
     * Filter which NewsItems to update
     */
    where?: NewsItemWhereInput
    /**
     * Limit how many NewsItems to update.
     */
    limit?: number
  }

  /**
   * NewsItem updateManyAndReturn
   */
  export type NewsItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * The data used to update NewsItems.
     */
    data: XOR<NewsItemUpdateManyMutationInput, NewsItemUncheckedUpdateManyInput>
    /**
     * Filter which NewsItems to update
     */
    where?: NewsItemWhereInput
    /**
     * Limit how many NewsItems to update.
     */
    limit?: number
  }

  /**
   * NewsItem upsert
   */
  export type NewsItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * The filter to search for the NewsItem to update in case it exists.
     */
    where: NewsItemWhereUniqueInput
    /**
     * In case the NewsItem found by the `where` argument doesn't exist, create a new NewsItem with this data.
     */
    create: XOR<NewsItemCreateInput, NewsItemUncheckedCreateInput>
    /**
     * In case the NewsItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NewsItemUpdateInput, NewsItemUncheckedUpdateInput>
  }

  /**
   * NewsItem delete
   */
  export type NewsItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
    /**
     * Filter which NewsItem to delete.
     */
    where: NewsItemWhereUniqueInput
  }

  /**
   * NewsItem deleteMany
   */
  export type NewsItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NewsItems to delete
     */
    where?: NewsItemWhereInput
    /**
     * Limit how many NewsItems to delete.
     */
    limit?: number
  }

  /**
   * NewsItem without action
   */
  export type NewsItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NewsItem
     */
    select?: NewsItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NewsItem
     */
    omit?: NewsItemOmit<ExtArgs> | null
  }


  /**
   * Model RSSSource
   */

  export type AggregateRSSSource = {
    _count: RSSSourceCountAggregateOutputType | null
    _avg: RSSSourceAvgAggregateOutputType | null
    _sum: RSSSourceSumAggregateOutputType | null
    _min: RSSSourceMinAggregateOutputType | null
    _max: RSSSourceMaxAggregateOutputType | null
  }

  export type RSSSourceAvgAggregateOutputType = {
    totalCollected: number | null
  }

  export type RSSSourceSumAggregateOutputType = {
    totalCollected: number | null
  }

  export type RSSSourceMinAggregateOutputType = {
    id: string | null
    name: string | null
    url: string | null
    category: string | null
    description: string | null
    enabled: boolean | null
    lastCollected: Date | null
    totalCollected: number | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RSSSourceMaxAggregateOutputType = {
    id: string | null
    name: string | null
    url: string | null
    category: string | null
    description: string | null
    enabled: boolean | null
    lastCollected: Date | null
    totalCollected: number | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RSSSourceCountAggregateOutputType = {
    id: number
    name: number
    url: number
    category: number
    description: number
    enabled: number
    lastCollected: number
    totalCollected: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RSSSourceAvgAggregateInputType = {
    totalCollected?: true
  }

  export type RSSSourceSumAggregateInputType = {
    totalCollected?: true
  }

  export type RSSSourceMinAggregateInputType = {
    id?: true
    name?: true
    url?: true
    category?: true
    description?: true
    enabled?: true
    lastCollected?: true
    totalCollected?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RSSSourceMaxAggregateInputType = {
    id?: true
    name?: true
    url?: true
    category?: true
    description?: true
    enabled?: true
    lastCollected?: true
    totalCollected?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RSSSourceCountAggregateInputType = {
    id?: true
    name?: true
    url?: true
    category?: true
    description?: true
    enabled?: true
    lastCollected?: true
    totalCollected?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RSSSourceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RSSSource to aggregate.
     */
    where?: RSSSourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RSSSources to fetch.
     */
    orderBy?: RSSSourceOrderByWithRelationInput | RSSSourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RSSSourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RSSSources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RSSSources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RSSSources
    **/
    _count?: true | RSSSourceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RSSSourceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RSSSourceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RSSSourceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RSSSourceMaxAggregateInputType
  }

  export type GetRSSSourceAggregateType<T extends RSSSourceAggregateArgs> = {
        [P in keyof T & keyof AggregateRSSSource]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRSSSource[P]>
      : GetScalarType<T[P], AggregateRSSSource[P]>
  }




  export type RSSSourceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RSSSourceWhereInput
    orderBy?: RSSSourceOrderByWithAggregationInput | RSSSourceOrderByWithAggregationInput[]
    by: RSSSourceScalarFieldEnum[] | RSSSourceScalarFieldEnum
    having?: RSSSourceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RSSSourceCountAggregateInputType | true
    _avg?: RSSSourceAvgAggregateInputType
    _sum?: RSSSourceSumAggregateInputType
    _min?: RSSSourceMinAggregateInputType
    _max?: RSSSourceMaxAggregateInputType
  }

  export type RSSSourceGroupByOutputType = {
    id: string
    name: string
    url: string
    category: string
    description: string | null
    enabled: boolean
    lastCollected: Date | null
    totalCollected: number
    status: string
    createdAt: Date
    updatedAt: Date
    _count: RSSSourceCountAggregateOutputType | null
    _avg: RSSSourceAvgAggregateOutputType | null
    _sum: RSSSourceSumAggregateOutputType | null
    _min: RSSSourceMinAggregateOutputType | null
    _max: RSSSourceMaxAggregateOutputType | null
  }

  type GetRSSSourceGroupByPayload<T extends RSSSourceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RSSSourceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RSSSourceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RSSSourceGroupByOutputType[P]>
            : GetScalarType<T[P], RSSSourceGroupByOutputType[P]>
        }
      >
    >


  export type RSSSourceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    category?: boolean
    description?: boolean
    enabled?: boolean
    lastCollected?: boolean
    totalCollected?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["rSSSource"]>

  export type RSSSourceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    category?: boolean
    description?: boolean
    enabled?: boolean
    lastCollected?: boolean
    totalCollected?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["rSSSource"]>

  export type RSSSourceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    category?: boolean
    description?: boolean
    enabled?: boolean
    lastCollected?: boolean
    totalCollected?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["rSSSource"]>

  export type RSSSourceSelectScalar = {
    id?: boolean
    name?: boolean
    url?: boolean
    category?: boolean
    description?: boolean
    enabled?: boolean
    lastCollected?: boolean
    totalCollected?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RSSSourceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "url" | "category" | "description" | "enabled" | "lastCollected" | "totalCollected" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["rSSSource"]>

  export type $RSSSourcePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RSSSource"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      url: string
      category: string
      description: string | null
      enabled: boolean
      lastCollected: Date | null
      totalCollected: number
      status: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rSSSource"]>
    composites: {}
  }

  type RSSSourceGetPayload<S extends boolean | null | undefined | RSSSourceDefaultArgs> = $Result.GetResult<Prisma.$RSSSourcePayload, S>

  type RSSSourceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RSSSourceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RSSSourceCountAggregateInputType | true
    }

  export interface RSSSourceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RSSSource'], meta: { name: 'RSSSource' } }
    /**
     * Find zero or one RSSSource that matches the filter.
     * @param {RSSSourceFindUniqueArgs} args - Arguments to find a RSSSource
     * @example
     * // Get one RSSSource
     * const rSSSource = await prisma.rSSSource.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RSSSourceFindUniqueArgs>(args: SelectSubset<T, RSSSourceFindUniqueArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RSSSource that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RSSSourceFindUniqueOrThrowArgs} args - Arguments to find a RSSSource
     * @example
     * // Get one RSSSource
     * const rSSSource = await prisma.rSSSource.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RSSSourceFindUniqueOrThrowArgs>(args: SelectSubset<T, RSSSourceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RSSSource that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceFindFirstArgs} args - Arguments to find a RSSSource
     * @example
     * // Get one RSSSource
     * const rSSSource = await prisma.rSSSource.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RSSSourceFindFirstArgs>(args?: SelectSubset<T, RSSSourceFindFirstArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RSSSource that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceFindFirstOrThrowArgs} args - Arguments to find a RSSSource
     * @example
     * // Get one RSSSource
     * const rSSSource = await prisma.rSSSource.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RSSSourceFindFirstOrThrowArgs>(args?: SelectSubset<T, RSSSourceFindFirstOrThrowArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RSSSources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RSSSources
     * const rSSSources = await prisma.rSSSource.findMany()
     * 
     * // Get first 10 RSSSources
     * const rSSSources = await prisma.rSSSource.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rSSSourceWithIdOnly = await prisma.rSSSource.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RSSSourceFindManyArgs>(args?: SelectSubset<T, RSSSourceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RSSSource.
     * @param {RSSSourceCreateArgs} args - Arguments to create a RSSSource.
     * @example
     * // Create one RSSSource
     * const RSSSource = await prisma.rSSSource.create({
     *   data: {
     *     // ... data to create a RSSSource
     *   }
     * })
     * 
     */
    create<T extends RSSSourceCreateArgs>(args: SelectSubset<T, RSSSourceCreateArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RSSSources.
     * @param {RSSSourceCreateManyArgs} args - Arguments to create many RSSSources.
     * @example
     * // Create many RSSSources
     * const rSSSource = await prisma.rSSSource.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RSSSourceCreateManyArgs>(args?: SelectSubset<T, RSSSourceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RSSSources and returns the data saved in the database.
     * @param {RSSSourceCreateManyAndReturnArgs} args - Arguments to create many RSSSources.
     * @example
     * // Create many RSSSources
     * const rSSSource = await prisma.rSSSource.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RSSSources and only return the `id`
     * const rSSSourceWithIdOnly = await prisma.rSSSource.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RSSSourceCreateManyAndReturnArgs>(args?: SelectSubset<T, RSSSourceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RSSSource.
     * @param {RSSSourceDeleteArgs} args - Arguments to delete one RSSSource.
     * @example
     * // Delete one RSSSource
     * const RSSSource = await prisma.rSSSource.delete({
     *   where: {
     *     // ... filter to delete one RSSSource
     *   }
     * })
     * 
     */
    delete<T extends RSSSourceDeleteArgs>(args: SelectSubset<T, RSSSourceDeleteArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RSSSource.
     * @param {RSSSourceUpdateArgs} args - Arguments to update one RSSSource.
     * @example
     * // Update one RSSSource
     * const rSSSource = await prisma.rSSSource.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RSSSourceUpdateArgs>(args: SelectSubset<T, RSSSourceUpdateArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RSSSources.
     * @param {RSSSourceDeleteManyArgs} args - Arguments to filter RSSSources to delete.
     * @example
     * // Delete a few RSSSources
     * const { count } = await prisma.rSSSource.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RSSSourceDeleteManyArgs>(args?: SelectSubset<T, RSSSourceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RSSSources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RSSSources
     * const rSSSource = await prisma.rSSSource.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RSSSourceUpdateManyArgs>(args: SelectSubset<T, RSSSourceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RSSSources and returns the data updated in the database.
     * @param {RSSSourceUpdateManyAndReturnArgs} args - Arguments to update many RSSSources.
     * @example
     * // Update many RSSSources
     * const rSSSource = await prisma.rSSSource.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RSSSources and only return the `id`
     * const rSSSourceWithIdOnly = await prisma.rSSSource.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RSSSourceUpdateManyAndReturnArgs>(args: SelectSubset<T, RSSSourceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RSSSource.
     * @param {RSSSourceUpsertArgs} args - Arguments to update or create a RSSSource.
     * @example
     * // Update or create a RSSSource
     * const rSSSource = await prisma.rSSSource.upsert({
     *   create: {
     *     // ... data to create a RSSSource
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RSSSource we want to update
     *   }
     * })
     */
    upsert<T extends RSSSourceUpsertArgs>(args: SelectSubset<T, RSSSourceUpsertArgs<ExtArgs>>): Prisma__RSSSourceClient<$Result.GetResult<Prisma.$RSSSourcePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RSSSources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceCountArgs} args - Arguments to filter RSSSources to count.
     * @example
     * // Count the number of RSSSources
     * const count = await prisma.rSSSource.count({
     *   where: {
     *     // ... the filter for the RSSSources we want to count
     *   }
     * })
    **/
    count<T extends RSSSourceCountArgs>(
      args?: Subset<T, RSSSourceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RSSSourceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RSSSource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RSSSourceAggregateArgs>(args: Subset<T, RSSSourceAggregateArgs>): Prisma.PrismaPromise<GetRSSSourceAggregateType<T>>

    /**
     * Group by RSSSource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RSSSourceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RSSSourceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RSSSourceGroupByArgs['orderBy'] }
        : { orderBy?: RSSSourceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RSSSourceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRSSSourceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RSSSource model
   */
  readonly fields: RSSSourceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RSSSource.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RSSSourceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RSSSource model
   */
  interface RSSSourceFieldRefs {
    readonly id: FieldRef<"RSSSource", 'String'>
    readonly name: FieldRef<"RSSSource", 'String'>
    readonly url: FieldRef<"RSSSource", 'String'>
    readonly category: FieldRef<"RSSSource", 'String'>
    readonly description: FieldRef<"RSSSource", 'String'>
    readonly enabled: FieldRef<"RSSSource", 'Boolean'>
    readonly lastCollected: FieldRef<"RSSSource", 'DateTime'>
    readonly totalCollected: FieldRef<"RSSSource", 'Int'>
    readonly status: FieldRef<"RSSSource", 'String'>
    readonly createdAt: FieldRef<"RSSSource", 'DateTime'>
    readonly updatedAt: FieldRef<"RSSSource", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RSSSource findUnique
   */
  export type RSSSourceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * Filter, which RSSSource to fetch.
     */
    where: RSSSourceWhereUniqueInput
  }

  /**
   * RSSSource findUniqueOrThrow
   */
  export type RSSSourceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * Filter, which RSSSource to fetch.
     */
    where: RSSSourceWhereUniqueInput
  }

  /**
   * RSSSource findFirst
   */
  export type RSSSourceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * Filter, which RSSSource to fetch.
     */
    where?: RSSSourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RSSSources to fetch.
     */
    orderBy?: RSSSourceOrderByWithRelationInput | RSSSourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RSSSources.
     */
    cursor?: RSSSourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RSSSources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RSSSources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RSSSources.
     */
    distinct?: RSSSourceScalarFieldEnum | RSSSourceScalarFieldEnum[]
  }

  /**
   * RSSSource findFirstOrThrow
   */
  export type RSSSourceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * Filter, which RSSSource to fetch.
     */
    where?: RSSSourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RSSSources to fetch.
     */
    orderBy?: RSSSourceOrderByWithRelationInput | RSSSourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RSSSources.
     */
    cursor?: RSSSourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RSSSources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RSSSources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RSSSources.
     */
    distinct?: RSSSourceScalarFieldEnum | RSSSourceScalarFieldEnum[]
  }

  /**
   * RSSSource findMany
   */
  export type RSSSourceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * Filter, which RSSSources to fetch.
     */
    where?: RSSSourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RSSSources to fetch.
     */
    orderBy?: RSSSourceOrderByWithRelationInput | RSSSourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RSSSources.
     */
    cursor?: RSSSourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RSSSources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RSSSources.
     */
    skip?: number
    distinct?: RSSSourceScalarFieldEnum | RSSSourceScalarFieldEnum[]
  }

  /**
   * RSSSource create
   */
  export type RSSSourceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * The data needed to create a RSSSource.
     */
    data: XOR<RSSSourceCreateInput, RSSSourceUncheckedCreateInput>
  }

  /**
   * RSSSource createMany
   */
  export type RSSSourceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RSSSources.
     */
    data: RSSSourceCreateManyInput | RSSSourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RSSSource createManyAndReturn
   */
  export type RSSSourceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * The data used to create many RSSSources.
     */
    data: RSSSourceCreateManyInput | RSSSourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RSSSource update
   */
  export type RSSSourceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * The data needed to update a RSSSource.
     */
    data: XOR<RSSSourceUpdateInput, RSSSourceUncheckedUpdateInput>
    /**
     * Choose, which RSSSource to update.
     */
    where: RSSSourceWhereUniqueInput
  }

  /**
   * RSSSource updateMany
   */
  export type RSSSourceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RSSSources.
     */
    data: XOR<RSSSourceUpdateManyMutationInput, RSSSourceUncheckedUpdateManyInput>
    /**
     * Filter which RSSSources to update
     */
    where?: RSSSourceWhereInput
    /**
     * Limit how many RSSSources to update.
     */
    limit?: number
  }

  /**
   * RSSSource updateManyAndReturn
   */
  export type RSSSourceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * The data used to update RSSSources.
     */
    data: XOR<RSSSourceUpdateManyMutationInput, RSSSourceUncheckedUpdateManyInput>
    /**
     * Filter which RSSSources to update
     */
    where?: RSSSourceWhereInput
    /**
     * Limit how many RSSSources to update.
     */
    limit?: number
  }

  /**
   * RSSSource upsert
   */
  export type RSSSourceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * The filter to search for the RSSSource to update in case it exists.
     */
    where: RSSSourceWhereUniqueInput
    /**
     * In case the RSSSource found by the `where` argument doesn't exist, create a new RSSSource with this data.
     */
    create: XOR<RSSSourceCreateInput, RSSSourceUncheckedCreateInput>
    /**
     * In case the RSSSource was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RSSSourceUpdateInput, RSSSourceUncheckedUpdateInput>
  }

  /**
   * RSSSource delete
   */
  export type RSSSourceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
    /**
     * Filter which RSSSource to delete.
     */
    where: RSSSourceWhereUniqueInput
  }

  /**
   * RSSSource deleteMany
   */
  export type RSSSourceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RSSSources to delete
     */
    where?: RSSSourceWhereInput
    /**
     * Limit how many RSSSources to delete.
     */
    limit?: number
  }

  /**
   * RSSSource without action
   */
  export type RSSSourceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RSSSource
     */
    select?: RSSSourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RSSSource
     */
    omit?: RSSSourceOmit<ExtArgs> | null
  }


  /**
   * Model PriceAlert
   */

  export type AggregatePriceAlert = {
    _count: PriceAlertCountAggregateOutputType | null
    _avg: PriceAlertAvgAggregateOutputType | null
    _sum: PriceAlertSumAggregateOutputType | null
    _min: PriceAlertMinAggregateOutputType | null
    _max: PriceAlertMaxAggregateOutputType | null
  }

  export type PriceAlertAvgAggregateOutputType = {
    triggerCount: number | null
  }

  export type PriceAlertSumAggregateOutputType = {
    triggerCount: number | null
  }

  export type PriceAlertMinAggregateOutputType = {
    id: string | null
    coin: string | null
    alertType: $Enums.AlertType | null
    isActive: boolean | null
    message: string | null
    autoGenerate: boolean | null
    templateId: string | null
    lastTriggered: Date | null
    triggerCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceAlertMaxAggregateOutputType = {
    id: string | null
    coin: string | null
    alertType: $Enums.AlertType | null
    isActive: boolean | null
    message: string | null
    autoGenerate: boolean | null
    templateId: string | null
    lastTriggered: Date | null
    triggerCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceAlertCountAggregateOutputType = {
    id: number
    coin: number
    alertType: number
    condition: number
    isActive: number
    message: number
    autoGenerate: number
    templateId: number
    lastTriggered: number
    triggerCount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PriceAlertAvgAggregateInputType = {
    triggerCount?: true
  }

  export type PriceAlertSumAggregateInputType = {
    triggerCount?: true
  }

  export type PriceAlertMinAggregateInputType = {
    id?: true
    coin?: true
    alertType?: true
    isActive?: true
    message?: true
    autoGenerate?: true
    templateId?: true
    lastTriggered?: true
    triggerCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceAlertMaxAggregateInputType = {
    id?: true
    coin?: true
    alertType?: true
    isActive?: true
    message?: true
    autoGenerate?: true
    templateId?: true
    lastTriggered?: true
    triggerCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceAlertCountAggregateInputType = {
    id?: true
    coin?: true
    alertType?: true
    condition?: true
    isActive?: true
    message?: true
    autoGenerate?: true
    templateId?: true
    lastTriggered?: true
    triggerCount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PriceAlertAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PriceAlert to aggregate.
     */
    where?: PriceAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceAlerts to fetch.
     */
    orderBy?: PriceAlertOrderByWithRelationInput | PriceAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PriceAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceAlerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PriceAlerts
    **/
    _count?: true | PriceAlertCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceAlertAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceAlertSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceAlertMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceAlertMaxAggregateInputType
  }

  export type GetPriceAlertAggregateType<T extends PriceAlertAggregateArgs> = {
        [P in keyof T & keyof AggregatePriceAlert]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePriceAlert[P]>
      : GetScalarType<T[P], AggregatePriceAlert[P]>
  }




  export type PriceAlertGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceAlertWhereInput
    orderBy?: PriceAlertOrderByWithAggregationInput | PriceAlertOrderByWithAggregationInput[]
    by: PriceAlertScalarFieldEnum[] | PriceAlertScalarFieldEnum
    having?: PriceAlertScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceAlertCountAggregateInputType | true
    _avg?: PriceAlertAvgAggregateInputType
    _sum?: PriceAlertSumAggregateInputType
    _min?: PriceAlertMinAggregateInputType
    _max?: PriceAlertMaxAggregateInputType
  }

  export type PriceAlertGroupByOutputType = {
    id: string
    coin: string
    alertType: $Enums.AlertType
    condition: JsonValue
    isActive: boolean
    message: string | null
    autoGenerate: boolean
    templateId: string | null
    lastTriggered: Date | null
    triggerCount: number
    createdAt: Date
    updatedAt: Date
    _count: PriceAlertCountAggregateOutputType | null
    _avg: PriceAlertAvgAggregateOutputType | null
    _sum: PriceAlertSumAggregateOutputType | null
    _min: PriceAlertMinAggregateOutputType | null
    _max: PriceAlertMaxAggregateOutputType | null
  }

  type GetPriceAlertGroupByPayload<T extends PriceAlertGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceAlertGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceAlertGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceAlertGroupByOutputType[P]>
            : GetScalarType<T[P], PriceAlertGroupByOutputType[P]>
        }
      >
    >


  export type PriceAlertSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    coin?: boolean
    alertType?: boolean
    condition?: boolean
    isActive?: boolean
    message?: boolean
    autoGenerate?: boolean
    templateId?: boolean
    lastTriggered?: boolean
    triggerCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["priceAlert"]>

  export type PriceAlertSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    coin?: boolean
    alertType?: boolean
    condition?: boolean
    isActive?: boolean
    message?: boolean
    autoGenerate?: boolean
    templateId?: boolean
    lastTriggered?: boolean
    triggerCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["priceAlert"]>

  export type PriceAlertSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    coin?: boolean
    alertType?: boolean
    condition?: boolean
    isActive?: boolean
    message?: boolean
    autoGenerate?: boolean
    templateId?: boolean
    lastTriggered?: boolean
    triggerCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["priceAlert"]>

  export type PriceAlertSelectScalar = {
    id?: boolean
    coin?: boolean
    alertType?: boolean
    condition?: boolean
    isActive?: boolean
    message?: boolean
    autoGenerate?: boolean
    templateId?: boolean
    lastTriggered?: boolean
    triggerCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PriceAlertOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "coin" | "alertType" | "condition" | "isActive" | "message" | "autoGenerate" | "templateId" | "lastTriggered" | "triggerCount" | "createdAt" | "updatedAt", ExtArgs["result"]["priceAlert"]>

  export type $PriceAlertPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PriceAlert"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      coin: string
      alertType: $Enums.AlertType
      condition: Prisma.JsonValue
      isActive: boolean
      message: string | null
      autoGenerate: boolean
      templateId: string | null
      lastTriggered: Date | null
      triggerCount: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["priceAlert"]>
    composites: {}
  }

  type PriceAlertGetPayload<S extends boolean | null | undefined | PriceAlertDefaultArgs> = $Result.GetResult<Prisma.$PriceAlertPayload, S>

  type PriceAlertCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PriceAlertFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PriceAlertCountAggregateInputType | true
    }

  export interface PriceAlertDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PriceAlert'], meta: { name: 'PriceAlert' } }
    /**
     * Find zero or one PriceAlert that matches the filter.
     * @param {PriceAlertFindUniqueArgs} args - Arguments to find a PriceAlert
     * @example
     * // Get one PriceAlert
     * const priceAlert = await prisma.priceAlert.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PriceAlertFindUniqueArgs>(args: SelectSubset<T, PriceAlertFindUniqueArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PriceAlert that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PriceAlertFindUniqueOrThrowArgs} args - Arguments to find a PriceAlert
     * @example
     * // Get one PriceAlert
     * const priceAlert = await prisma.priceAlert.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PriceAlertFindUniqueOrThrowArgs>(args: SelectSubset<T, PriceAlertFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PriceAlert that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertFindFirstArgs} args - Arguments to find a PriceAlert
     * @example
     * // Get one PriceAlert
     * const priceAlert = await prisma.priceAlert.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PriceAlertFindFirstArgs>(args?: SelectSubset<T, PriceAlertFindFirstArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PriceAlert that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertFindFirstOrThrowArgs} args - Arguments to find a PriceAlert
     * @example
     * // Get one PriceAlert
     * const priceAlert = await prisma.priceAlert.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PriceAlertFindFirstOrThrowArgs>(args?: SelectSubset<T, PriceAlertFindFirstOrThrowArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PriceAlerts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PriceAlerts
     * const priceAlerts = await prisma.priceAlert.findMany()
     * 
     * // Get first 10 PriceAlerts
     * const priceAlerts = await prisma.priceAlert.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceAlertWithIdOnly = await prisma.priceAlert.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PriceAlertFindManyArgs>(args?: SelectSubset<T, PriceAlertFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PriceAlert.
     * @param {PriceAlertCreateArgs} args - Arguments to create a PriceAlert.
     * @example
     * // Create one PriceAlert
     * const PriceAlert = await prisma.priceAlert.create({
     *   data: {
     *     // ... data to create a PriceAlert
     *   }
     * })
     * 
     */
    create<T extends PriceAlertCreateArgs>(args: SelectSubset<T, PriceAlertCreateArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PriceAlerts.
     * @param {PriceAlertCreateManyArgs} args - Arguments to create many PriceAlerts.
     * @example
     * // Create many PriceAlerts
     * const priceAlert = await prisma.priceAlert.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PriceAlertCreateManyArgs>(args?: SelectSubset<T, PriceAlertCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PriceAlerts and returns the data saved in the database.
     * @param {PriceAlertCreateManyAndReturnArgs} args - Arguments to create many PriceAlerts.
     * @example
     * // Create many PriceAlerts
     * const priceAlert = await prisma.priceAlert.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PriceAlerts and only return the `id`
     * const priceAlertWithIdOnly = await prisma.priceAlert.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PriceAlertCreateManyAndReturnArgs>(args?: SelectSubset<T, PriceAlertCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PriceAlert.
     * @param {PriceAlertDeleteArgs} args - Arguments to delete one PriceAlert.
     * @example
     * // Delete one PriceAlert
     * const PriceAlert = await prisma.priceAlert.delete({
     *   where: {
     *     // ... filter to delete one PriceAlert
     *   }
     * })
     * 
     */
    delete<T extends PriceAlertDeleteArgs>(args: SelectSubset<T, PriceAlertDeleteArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PriceAlert.
     * @param {PriceAlertUpdateArgs} args - Arguments to update one PriceAlert.
     * @example
     * // Update one PriceAlert
     * const priceAlert = await prisma.priceAlert.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PriceAlertUpdateArgs>(args: SelectSubset<T, PriceAlertUpdateArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PriceAlerts.
     * @param {PriceAlertDeleteManyArgs} args - Arguments to filter PriceAlerts to delete.
     * @example
     * // Delete a few PriceAlerts
     * const { count } = await prisma.priceAlert.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PriceAlertDeleteManyArgs>(args?: SelectSubset<T, PriceAlertDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PriceAlerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PriceAlerts
     * const priceAlert = await prisma.priceAlert.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PriceAlertUpdateManyArgs>(args: SelectSubset<T, PriceAlertUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PriceAlerts and returns the data updated in the database.
     * @param {PriceAlertUpdateManyAndReturnArgs} args - Arguments to update many PriceAlerts.
     * @example
     * // Update many PriceAlerts
     * const priceAlert = await prisma.priceAlert.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PriceAlerts and only return the `id`
     * const priceAlertWithIdOnly = await prisma.priceAlert.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PriceAlertUpdateManyAndReturnArgs>(args: SelectSubset<T, PriceAlertUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PriceAlert.
     * @param {PriceAlertUpsertArgs} args - Arguments to update or create a PriceAlert.
     * @example
     * // Update or create a PriceAlert
     * const priceAlert = await prisma.priceAlert.upsert({
     *   create: {
     *     // ... data to create a PriceAlert
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PriceAlert we want to update
     *   }
     * })
     */
    upsert<T extends PriceAlertUpsertArgs>(args: SelectSubset<T, PriceAlertUpsertArgs<ExtArgs>>): Prisma__PriceAlertClient<$Result.GetResult<Prisma.$PriceAlertPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PriceAlerts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertCountArgs} args - Arguments to filter PriceAlerts to count.
     * @example
     * // Count the number of PriceAlerts
     * const count = await prisma.priceAlert.count({
     *   where: {
     *     // ... the filter for the PriceAlerts we want to count
     *   }
     * })
    **/
    count<T extends PriceAlertCountArgs>(
      args?: Subset<T, PriceAlertCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceAlertCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PriceAlert.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceAlertAggregateArgs>(args: Subset<T, PriceAlertAggregateArgs>): Prisma.PrismaPromise<GetPriceAlertAggregateType<T>>

    /**
     * Group by PriceAlert.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAlertGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PriceAlertGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PriceAlertGroupByArgs['orderBy'] }
        : { orderBy?: PriceAlertGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PriceAlertGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceAlertGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PriceAlert model
   */
  readonly fields: PriceAlertFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PriceAlert.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PriceAlertClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PriceAlert model
   */
  interface PriceAlertFieldRefs {
    readonly id: FieldRef<"PriceAlert", 'String'>
    readonly coin: FieldRef<"PriceAlert", 'String'>
    readonly alertType: FieldRef<"PriceAlert", 'AlertType'>
    readonly condition: FieldRef<"PriceAlert", 'Json'>
    readonly isActive: FieldRef<"PriceAlert", 'Boolean'>
    readonly message: FieldRef<"PriceAlert", 'String'>
    readonly autoGenerate: FieldRef<"PriceAlert", 'Boolean'>
    readonly templateId: FieldRef<"PriceAlert", 'String'>
    readonly lastTriggered: FieldRef<"PriceAlert", 'DateTime'>
    readonly triggerCount: FieldRef<"PriceAlert", 'Int'>
    readonly createdAt: FieldRef<"PriceAlert", 'DateTime'>
    readonly updatedAt: FieldRef<"PriceAlert", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PriceAlert findUnique
   */
  export type PriceAlertFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * Filter, which PriceAlert to fetch.
     */
    where: PriceAlertWhereUniqueInput
  }

  /**
   * PriceAlert findUniqueOrThrow
   */
  export type PriceAlertFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * Filter, which PriceAlert to fetch.
     */
    where: PriceAlertWhereUniqueInput
  }

  /**
   * PriceAlert findFirst
   */
  export type PriceAlertFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * Filter, which PriceAlert to fetch.
     */
    where?: PriceAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceAlerts to fetch.
     */
    orderBy?: PriceAlertOrderByWithRelationInput | PriceAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PriceAlerts.
     */
    cursor?: PriceAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceAlerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PriceAlerts.
     */
    distinct?: PriceAlertScalarFieldEnum | PriceAlertScalarFieldEnum[]
  }

  /**
   * PriceAlert findFirstOrThrow
   */
  export type PriceAlertFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * Filter, which PriceAlert to fetch.
     */
    where?: PriceAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceAlerts to fetch.
     */
    orderBy?: PriceAlertOrderByWithRelationInput | PriceAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PriceAlerts.
     */
    cursor?: PriceAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceAlerts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PriceAlerts.
     */
    distinct?: PriceAlertScalarFieldEnum | PriceAlertScalarFieldEnum[]
  }

  /**
   * PriceAlert findMany
   */
  export type PriceAlertFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * Filter, which PriceAlerts to fetch.
     */
    where?: PriceAlertWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceAlerts to fetch.
     */
    orderBy?: PriceAlertOrderByWithRelationInput | PriceAlertOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PriceAlerts.
     */
    cursor?: PriceAlertWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceAlerts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceAlerts.
     */
    skip?: number
    distinct?: PriceAlertScalarFieldEnum | PriceAlertScalarFieldEnum[]
  }

  /**
   * PriceAlert create
   */
  export type PriceAlertCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * The data needed to create a PriceAlert.
     */
    data: XOR<PriceAlertCreateInput, PriceAlertUncheckedCreateInput>
  }

  /**
   * PriceAlert createMany
   */
  export type PriceAlertCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PriceAlerts.
     */
    data: PriceAlertCreateManyInput | PriceAlertCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PriceAlert createManyAndReturn
   */
  export type PriceAlertCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * The data used to create many PriceAlerts.
     */
    data: PriceAlertCreateManyInput | PriceAlertCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PriceAlert update
   */
  export type PriceAlertUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * The data needed to update a PriceAlert.
     */
    data: XOR<PriceAlertUpdateInput, PriceAlertUncheckedUpdateInput>
    /**
     * Choose, which PriceAlert to update.
     */
    where: PriceAlertWhereUniqueInput
  }

  /**
   * PriceAlert updateMany
   */
  export type PriceAlertUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PriceAlerts.
     */
    data: XOR<PriceAlertUpdateManyMutationInput, PriceAlertUncheckedUpdateManyInput>
    /**
     * Filter which PriceAlerts to update
     */
    where?: PriceAlertWhereInput
    /**
     * Limit how many PriceAlerts to update.
     */
    limit?: number
  }

  /**
   * PriceAlert updateManyAndReturn
   */
  export type PriceAlertUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * The data used to update PriceAlerts.
     */
    data: XOR<PriceAlertUpdateManyMutationInput, PriceAlertUncheckedUpdateManyInput>
    /**
     * Filter which PriceAlerts to update
     */
    where?: PriceAlertWhereInput
    /**
     * Limit how many PriceAlerts to update.
     */
    limit?: number
  }

  /**
   * PriceAlert upsert
   */
  export type PriceAlertUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * The filter to search for the PriceAlert to update in case it exists.
     */
    where: PriceAlertWhereUniqueInput
    /**
     * In case the PriceAlert found by the `where` argument doesn't exist, create a new PriceAlert with this data.
     */
    create: XOR<PriceAlertCreateInput, PriceAlertUncheckedCreateInput>
    /**
     * In case the PriceAlert was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PriceAlertUpdateInput, PriceAlertUncheckedUpdateInput>
  }

  /**
   * PriceAlert delete
   */
  export type PriceAlertDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
    /**
     * Filter which PriceAlert to delete.
     */
    where: PriceAlertWhereUniqueInput
  }

  /**
   * PriceAlert deleteMany
   */
  export type PriceAlertDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PriceAlerts to delete
     */
    where?: PriceAlertWhereInput
    /**
     * Limit how many PriceAlerts to delete.
     */
    limit?: number
  }

  /**
   * PriceAlert without action
   */
  export type PriceAlertDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceAlert
     */
    select?: PriceAlertSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceAlert
     */
    omit?: PriceAlertOmit<ExtArgs> | null
  }


  /**
   * Model AlertTrigger
   */

  export type AggregateAlertTrigger = {
    _count: AlertTriggerCountAggregateOutputType | null
    _min: AlertTriggerMinAggregateOutputType | null
    _max: AlertTriggerMaxAggregateOutputType | null
  }

  export type AlertTriggerMinAggregateOutputType = {
    id: string | null
    alertId: string | null
    articleGenerated: boolean | null
    articleId: string | null
    triggeredAt: Date | null
  }

  export type AlertTriggerMaxAggregateOutputType = {
    id: string | null
    alertId: string | null
    articleGenerated: boolean | null
    articleId: string | null
    triggeredAt: Date | null
  }

  export type AlertTriggerCountAggregateOutputType = {
    id: number
    alertId: number
    triggerData: number
    articleGenerated: number
    articleId: number
    triggeredAt: number
    _all: number
  }


  export type AlertTriggerMinAggregateInputType = {
    id?: true
    alertId?: true
    articleGenerated?: true
    articleId?: true
    triggeredAt?: true
  }

  export type AlertTriggerMaxAggregateInputType = {
    id?: true
    alertId?: true
    articleGenerated?: true
    articleId?: true
    triggeredAt?: true
  }

  export type AlertTriggerCountAggregateInputType = {
    id?: true
    alertId?: true
    triggerData?: true
    articleGenerated?: true
    articleId?: true
    triggeredAt?: true
    _all?: true
  }

  export type AlertTriggerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlertTrigger to aggregate.
     */
    where?: AlertTriggerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertTriggers to fetch.
     */
    orderBy?: AlertTriggerOrderByWithRelationInput | AlertTriggerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlertTriggerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertTriggers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertTriggers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlertTriggers
    **/
    _count?: true | AlertTriggerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlertTriggerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlertTriggerMaxAggregateInputType
  }

  export type GetAlertTriggerAggregateType<T extends AlertTriggerAggregateArgs> = {
        [P in keyof T & keyof AggregateAlertTrigger]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlertTrigger[P]>
      : GetScalarType<T[P], AggregateAlertTrigger[P]>
  }




  export type AlertTriggerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlertTriggerWhereInput
    orderBy?: AlertTriggerOrderByWithAggregationInput | AlertTriggerOrderByWithAggregationInput[]
    by: AlertTriggerScalarFieldEnum[] | AlertTriggerScalarFieldEnum
    having?: AlertTriggerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlertTriggerCountAggregateInputType | true
    _min?: AlertTriggerMinAggregateInputType
    _max?: AlertTriggerMaxAggregateInputType
  }

  export type AlertTriggerGroupByOutputType = {
    id: string
    alertId: string
    triggerData: JsonValue
    articleGenerated: boolean
    articleId: string | null
    triggeredAt: Date
    _count: AlertTriggerCountAggregateOutputType | null
    _min: AlertTriggerMinAggregateOutputType | null
    _max: AlertTriggerMaxAggregateOutputType | null
  }

  type GetAlertTriggerGroupByPayload<T extends AlertTriggerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlertTriggerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlertTriggerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlertTriggerGroupByOutputType[P]>
            : GetScalarType<T[P], AlertTriggerGroupByOutputType[P]>
        }
      >
    >


  export type AlertTriggerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alertId?: boolean
    triggerData?: boolean
    articleGenerated?: boolean
    articleId?: boolean
    triggeredAt?: boolean
  }, ExtArgs["result"]["alertTrigger"]>

  export type AlertTriggerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alertId?: boolean
    triggerData?: boolean
    articleGenerated?: boolean
    articleId?: boolean
    triggeredAt?: boolean
  }, ExtArgs["result"]["alertTrigger"]>

  export type AlertTriggerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alertId?: boolean
    triggerData?: boolean
    articleGenerated?: boolean
    articleId?: boolean
    triggeredAt?: boolean
  }, ExtArgs["result"]["alertTrigger"]>

  export type AlertTriggerSelectScalar = {
    id?: boolean
    alertId?: boolean
    triggerData?: boolean
    articleGenerated?: boolean
    articleId?: boolean
    triggeredAt?: boolean
  }

  export type AlertTriggerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "alertId" | "triggerData" | "articleGenerated" | "articleId" | "triggeredAt", ExtArgs["result"]["alertTrigger"]>

  export type $AlertTriggerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlertTrigger"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      alertId: string
      triggerData: Prisma.JsonValue
      articleGenerated: boolean
      articleId: string | null
      triggeredAt: Date
    }, ExtArgs["result"]["alertTrigger"]>
    composites: {}
  }

  type AlertTriggerGetPayload<S extends boolean | null | undefined | AlertTriggerDefaultArgs> = $Result.GetResult<Prisma.$AlertTriggerPayload, S>

  type AlertTriggerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlertTriggerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlertTriggerCountAggregateInputType | true
    }

  export interface AlertTriggerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlertTrigger'], meta: { name: 'AlertTrigger' } }
    /**
     * Find zero or one AlertTrigger that matches the filter.
     * @param {AlertTriggerFindUniqueArgs} args - Arguments to find a AlertTrigger
     * @example
     * // Get one AlertTrigger
     * const alertTrigger = await prisma.alertTrigger.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlertTriggerFindUniqueArgs>(args: SelectSubset<T, AlertTriggerFindUniqueArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AlertTrigger that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlertTriggerFindUniqueOrThrowArgs} args - Arguments to find a AlertTrigger
     * @example
     * // Get one AlertTrigger
     * const alertTrigger = await prisma.alertTrigger.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlertTriggerFindUniqueOrThrowArgs>(args: SelectSubset<T, AlertTriggerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AlertTrigger that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerFindFirstArgs} args - Arguments to find a AlertTrigger
     * @example
     * // Get one AlertTrigger
     * const alertTrigger = await prisma.alertTrigger.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlertTriggerFindFirstArgs>(args?: SelectSubset<T, AlertTriggerFindFirstArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AlertTrigger that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerFindFirstOrThrowArgs} args - Arguments to find a AlertTrigger
     * @example
     * // Get one AlertTrigger
     * const alertTrigger = await prisma.alertTrigger.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlertTriggerFindFirstOrThrowArgs>(args?: SelectSubset<T, AlertTriggerFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AlertTriggers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlertTriggers
     * const alertTriggers = await prisma.alertTrigger.findMany()
     * 
     * // Get first 10 AlertTriggers
     * const alertTriggers = await prisma.alertTrigger.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alertTriggerWithIdOnly = await prisma.alertTrigger.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlertTriggerFindManyArgs>(args?: SelectSubset<T, AlertTriggerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AlertTrigger.
     * @param {AlertTriggerCreateArgs} args - Arguments to create a AlertTrigger.
     * @example
     * // Create one AlertTrigger
     * const AlertTrigger = await prisma.alertTrigger.create({
     *   data: {
     *     // ... data to create a AlertTrigger
     *   }
     * })
     * 
     */
    create<T extends AlertTriggerCreateArgs>(args: SelectSubset<T, AlertTriggerCreateArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AlertTriggers.
     * @param {AlertTriggerCreateManyArgs} args - Arguments to create many AlertTriggers.
     * @example
     * // Create many AlertTriggers
     * const alertTrigger = await prisma.alertTrigger.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlertTriggerCreateManyArgs>(args?: SelectSubset<T, AlertTriggerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AlertTriggers and returns the data saved in the database.
     * @param {AlertTriggerCreateManyAndReturnArgs} args - Arguments to create many AlertTriggers.
     * @example
     * // Create many AlertTriggers
     * const alertTrigger = await prisma.alertTrigger.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AlertTriggers and only return the `id`
     * const alertTriggerWithIdOnly = await prisma.alertTrigger.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AlertTriggerCreateManyAndReturnArgs>(args?: SelectSubset<T, AlertTriggerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AlertTrigger.
     * @param {AlertTriggerDeleteArgs} args - Arguments to delete one AlertTrigger.
     * @example
     * // Delete one AlertTrigger
     * const AlertTrigger = await prisma.alertTrigger.delete({
     *   where: {
     *     // ... filter to delete one AlertTrigger
     *   }
     * })
     * 
     */
    delete<T extends AlertTriggerDeleteArgs>(args: SelectSubset<T, AlertTriggerDeleteArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AlertTrigger.
     * @param {AlertTriggerUpdateArgs} args - Arguments to update one AlertTrigger.
     * @example
     * // Update one AlertTrigger
     * const alertTrigger = await prisma.alertTrigger.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlertTriggerUpdateArgs>(args: SelectSubset<T, AlertTriggerUpdateArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AlertTriggers.
     * @param {AlertTriggerDeleteManyArgs} args - Arguments to filter AlertTriggers to delete.
     * @example
     * // Delete a few AlertTriggers
     * const { count } = await prisma.alertTrigger.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlertTriggerDeleteManyArgs>(args?: SelectSubset<T, AlertTriggerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlertTriggers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlertTriggers
     * const alertTrigger = await prisma.alertTrigger.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlertTriggerUpdateManyArgs>(args: SelectSubset<T, AlertTriggerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlertTriggers and returns the data updated in the database.
     * @param {AlertTriggerUpdateManyAndReturnArgs} args - Arguments to update many AlertTriggers.
     * @example
     * // Update many AlertTriggers
     * const alertTrigger = await prisma.alertTrigger.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AlertTriggers and only return the `id`
     * const alertTriggerWithIdOnly = await prisma.alertTrigger.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AlertTriggerUpdateManyAndReturnArgs>(args: SelectSubset<T, AlertTriggerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AlertTrigger.
     * @param {AlertTriggerUpsertArgs} args - Arguments to update or create a AlertTrigger.
     * @example
     * // Update or create a AlertTrigger
     * const alertTrigger = await prisma.alertTrigger.upsert({
     *   create: {
     *     // ... data to create a AlertTrigger
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlertTrigger we want to update
     *   }
     * })
     */
    upsert<T extends AlertTriggerUpsertArgs>(args: SelectSubset<T, AlertTriggerUpsertArgs<ExtArgs>>): Prisma__AlertTriggerClient<$Result.GetResult<Prisma.$AlertTriggerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AlertTriggers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerCountArgs} args - Arguments to filter AlertTriggers to count.
     * @example
     * // Count the number of AlertTriggers
     * const count = await prisma.alertTrigger.count({
     *   where: {
     *     // ... the filter for the AlertTriggers we want to count
     *   }
     * })
    **/
    count<T extends AlertTriggerCountArgs>(
      args?: Subset<T, AlertTriggerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlertTriggerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlertTrigger.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlertTriggerAggregateArgs>(args: Subset<T, AlertTriggerAggregateArgs>): Prisma.PrismaPromise<GetAlertTriggerAggregateType<T>>

    /**
     * Group by AlertTrigger.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertTriggerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlertTriggerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlertTriggerGroupByArgs['orderBy'] }
        : { orderBy?: AlertTriggerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlertTriggerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlertTriggerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlertTrigger model
   */
  readonly fields: AlertTriggerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlertTrigger.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlertTriggerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AlertTrigger model
   */
  interface AlertTriggerFieldRefs {
    readonly id: FieldRef<"AlertTrigger", 'String'>
    readonly alertId: FieldRef<"AlertTrigger", 'String'>
    readonly triggerData: FieldRef<"AlertTrigger", 'Json'>
    readonly articleGenerated: FieldRef<"AlertTrigger", 'Boolean'>
    readonly articleId: FieldRef<"AlertTrigger", 'String'>
    readonly triggeredAt: FieldRef<"AlertTrigger", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AlertTrigger findUnique
   */
  export type AlertTriggerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * Filter, which AlertTrigger to fetch.
     */
    where: AlertTriggerWhereUniqueInput
  }

  /**
   * AlertTrigger findUniqueOrThrow
   */
  export type AlertTriggerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * Filter, which AlertTrigger to fetch.
     */
    where: AlertTriggerWhereUniqueInput
  }

  /**
   * AlertTrigger findFirst
   */
  export type AlertTriggerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * Filter, which AlertTrigger to fetch.
     */
    where?: AlertTriggerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertTriggers to fetch.
     */
    orderBy?: AlertTriggerOrderByWithRelationInput | AlertTriggerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlertTriggers.
     */
    cursor?: AlertTriggerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertTriggers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertTriggers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlertTriggers.
     */
    distinct?: AlertTriggerScalarFieldEnum | AlertTriggerScalarFieldEnum[]
  }

  /**
   * AlertTrigger findFirstOrThrow
   */
  export type AlertTriggerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * Filter, which AlertTrigger to fetch.
     */
    where?: AlertTriggerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertTriggers to fetch.
     */
    orderBy?: AlertTriggerOrderByWithRelationInput | AlertTriggerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlertTriggers.
     */
    cursor?: AlertTriggerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertTriggers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertTriggers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlertTriggers.
     */
    distinct?: AlertTriggerScalarFieldEnum | AlertTriggerScalarFieldEnum[]
  }

  /**
   * AlertTrigger findMany
   */
  export type AlertTriggerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * Filter, which AlertTriggers to fetch.
     */
    where?: AlertTriggerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertTriggers to fetch.
     */
    orderBy?: AlertTriggerOrderByWithRelationInput | AlertTriggerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlertTriggers.
     */
    cursor?: AlertTriggerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertTriggers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertTriggers.
     */
    skip?: number
    distinct?: AlertTriggerScalarFieldEnum | AlertTriggerScalarFieldEnum[]
  }

  /**
   * AlertTrigger create
   */
  export type AlertTriggerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * The data needed to create a AlertTrigger.
     */
    data: XOR<AlertTriggerCreateInput, AlertTriggerUncheckedCreateInput>
  }

  /**
   * AlertTrigger createMany
   */
  export type AlertTriggerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlertTriggers.
     */
    data: AlertTriggerCreateManyInput | AlertTriggerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlertTrigger createManyAndReturn
   */
  export type AlertTriggerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * The data used to create many AlertTriggers.
     */
    data: AlertTriggerCreateManyInput | AlertTriggerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlertTrigger update
   */
  export type AlertTriggerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * The data needed to update a AlertTrigger.
     */
    data: XOR<AlertTriggerUpdateInput, AlertTriggerUncheckedUpdateInput>
    /**
     * Choose, which AlertTrigger to update.
     */
    where: AlertTriggerWhereUniqueInput
  }

  /**
   * AlertTrigger updateMany
   */
  export type AlertTriggerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlertTriggers.
     */
    data: XOR<AlertTriggerUpdateManyMutationInput, AlertTriggerUncheckedUpdateManyInput>
    /**
     * Filter which AlertTriggers to update
     */
    where?: AlertTriggerWhereInput
    /**
     * Limit how many AlertTriggers to update.
     */
    limit?: number
  }

  /**
   * AlertTrigger updateManyAndReturn
   */
  export type AlertTriggerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * The data used to update AlertTriggers.
     */
    data: XOR<AlertTriggerUpdateManyMutationInput, AlertTriggerUncheckedUpdateManyInput>
    /**
     * Filter which AlertTriggers to update
     */
    where?: AlertTriggerWhereInput
    /**
     * Limit how many AlertTriggers to update.
     */
    limit?: number
  }

  /**
   * AlertTrigger upsert
   */
  export type AlertTriggerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * The filter to search for the AlertTrigger to update in case it exists.
     */
    where: AlertTriggerWhereUniqueInput
    /**
     * In case the AlertTrigger found by the `where` argument doesn't exist, create a new AlertTrigger with this data.
     */
    create: XOR<AlertTriggerCreateInput, AlertTriggerUncheckedCreateInput>
    /**
     * In case the AlertTrigger was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlertTriggerUpdateInput, AlertTriggerUncheckedUpdateInput>
  }

  /**
   * AlertTrigger delete
   */
  export type AlertTriggerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
    /**
     * Filter which AlertTrigger to delete.
     */
    where: AlertTriggerWhereUniqueInput
  }

  /**
   * AlertTrigger deleteMany
   */
  export type AlertTriggerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlertTriggers to delete
     */
    where?: AlertTriggerWhereInput
    /**
     * Limit how many AlertTriggers to delete.
     */
    limit?: number
  }

  /**
   * AlertTrigger without action
   */
  export type AlertTriggerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertTrigger
     */
    select?: AlertTriggerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertTrigger
     */
    omit?: AlertTriggerOmit<ExtArgs> | null
  }


  /**
   * Model PriceHistory
   */

  export type AggregatePriceHistory = {
    _count: PriceHistoryCountAggregateOutputType | null
    _avg: PriceHistoryAvgAggregateOutputType | null
    _sum: PriceHistorySumAggregateOutputType | null
    _min: PriceHistoryMinAggregateOutputType | null
    _max: PriceHistoryMaxAggregateOutputType | null
  }

  export type PriceHistoryAvgAggregateOutputType = {
    id: number | null
    price: number | null
    volume: number | null
    marketCap: number | null
    rank: number | null
    change1h: number | null
    change24h: number | null
    change7d: number | null
  }

  export type PriceHistorySumAggregateOutputType = {
    id: number | null
    price: number | null
    volume: number | null
    marketCap: number | null
    rank: number | null
    change1h: number | null
    change24h: number | null
    change7d: number | null
  }

  export type PriceHistoryMinAggregateOutputType = {
    id: number | null
    symbol: string | null
    name: string | null
    price: number | null
    volume: number | null
    marketCap: number | null
    rank: number | null
    change1h: number | null
    change24h: number | null
    change7d: number | null
    timestamp: Date | null
  }

  export type PriceHistoryMaxAggregateOutputType = {
    id: number | null
    symbol: string | null
    name: string | null
    price: number | null
    volume: number | null
    marketCap: number | null
    rank: number | null
    change1h: number | null
    change24h: number | null
    change7d: number | null
    timestamp: Date | null
  }

  export type PriceHistoryCountAggregateOutputType = {
    id: number
    symbol: number
    name: number
    price: number
    volume: number
    marketCap: number
    rank: number
    change1h: number
    change24h: number
    change7d: number
    timestamp: number
    _all: number
  }


  export type PriceHistoryAvgAggregateInputType = {
    id?: true
    price?: true
    volume?: true
    marketCap?: true
    rank?: true
    change1h?: true
    change24h?: true
    change7d?: true
  }

  export type PriceHistorySumAggregateInputType = {
    id?: true
    price?: true
    volume?: true
    marketCap?: true
    rank?: true
    change1h?: true
    change24h?: true
    change7d?: true
  }

  export type PriceHistoryMinAggregateInputType = {
    id?: true
    symbol?: true
    name?: true
    price?: true
    volume?: true
    marketCap?: true
    rank?: true
    change1h?: true
    change24h?: true
    change7d?: true
    timestamp?: true
  }

  export type PriceHistoryMaxAggregateInputType = {
    id?: true
    symbol?: true
    name?: true
    price?: true
    volume?: true
    marketCap?: true
    rank?: true
    change1h?: true
    change24h?: true
    change7d?: true
    timestamp?: true
  }

  export type PriceHistoryCountAggregateInputType = {
    id?: true
    symbol?: true
    name?: true
    price?: true
    volume?: true
    marketCap?: true
    rank?: true
    change1h?: true
    change24h?: true
    change7d?: true
    timestamp?: true
    _all?: true
  }

  export type PriceHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PriceHistory to aggregate.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PriceHistories
    **/
    _count?: true | PriceHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceHistoryMaxAggregateInputType
  }

  export type GetPriceHistoryAggregateType<T extends PriceHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregatePriceHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePriceHistory[P]>
      : GetScalarType<T[P], AggregatePriceHistory[P]>
  }




  export type PriceHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceHistoryWhereInput
    orderBy?: PriceHistoryOrderByWithAggregationInput | PriceHistoryOrderByWithAggregationInput[]
    by: PriceHistoryScalarFieldEnum[] | PriceHistoryScalarFieldEnum
    having?: PriceHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceHistoryCountAggregateInputType | true
    _avg?: PriceHistoryAvgAggregateInputType
    _sum?: PriceHistorySumAggregateInputType
    _min?: PriceHistoryMinAggregateInputType
    _max?: PriceHistoryMaxAggregateInputType
  }

  export type PriceHistoryGroupByOutputType = {
    id: number
    symbol: string
    name: string
    price: number
    volume: number
    marketCap: number | null
    rank: number | null
    change1h: number | null
    change24h: number | null
    change7d: number | null
    timestamp: Date
    _count: PriceHistoryCountAggregateOutputType | null
    _avg: PriceHistoryAvgAggregateOutputType | null
    _sum: PriceHistorySumAggregateOutputType | null
    _min: PriceHistoryMinAggregateOutputType | null
    _max: PriceHistoryMaxAggregateOutputType | null
  }

  type GetPriceHistoryGroupByPayload<T extends PriceHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], PriceHistoryGroupByOutputType[P]>
        }
      >
    >


  export type PriceHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    symbol?: boolean
    name?: boolean
    price?: boolean
    volume?: boolean
    marketCap?: boolean
    rank?: boolean
    change1h?: boolean
    change24h?: boolean
    change7d?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["priceHistory"]>

  export type PriceHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    symbol?: boolean
    name?: boolean
    price?: boolean
    volume?: boolean
    marketCap?: boolean
    rank?: boolean
    change1h?: boolean
    change24h?: boolean
    change7d?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["priceHistory"]>

  export type PriceHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    symbol?: boolean
    name?: boolean
    price?: boolean
    volume?: boolean
    marketCap?: boolean
    rank?: boolean
    change1h?: boolean
    change24h?: boolean
    change7d?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["priceHistory"]>

  export type PriceHistorySelectScalar = {
    id?: boolean
    symbol?: boolean
    name?: boolean
    price?: boolean
    volume?: boolean
    marketCap?: boolean
    rank?: boolean
    change1h?: boolean
    change24h?: boolean
    change7d?: boolean
    timestamp?: boolean
  }

  export type PriceHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "symbol" | "name" | "price" | "volume" | "marketCap" | "rank" | "change1h" | "change24h" | "change7d" | "timestamp", ExtArgs["result"]["priceHistory"]>

  export type $PriceHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PriceHistory"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      symbol: string
      name: string
      price: number
      volume: number
      marketCap: number | null
      rank: number | null
      change1h: number | null
      change24h: number | null
      change7d: number | null
      timestamp: Date
    }, ExtArgs["result"]["priceHistory"]>
    composites: {}
  }

  type PriceHistoryGetPayload<S extends boolean | null | undefined | PriceHistoryDefaultArgs> = $Result.GetResult<Prisma.$PriceHistoryPayload, S>

  type PriceHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PriceHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PriceHistoryCountAggregateInputType | true
    }

  export interface PriceHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PriceHistory'], meta: { name: 'PriceHistory' } }
    /**
     * Find zero or one PriceHistory that matches the filter.
     * @param {PriceHistoryFindUniqueArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PriceHistoryFindUniqueArgs>(args: SelectSubset<T, PriceHistoryFindUniqueArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PriceHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PriceHistoryFindUniqueOrThrowArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PriceHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, PriceHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PriceHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryFindFirstArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PriceHistoryFindFirstArgs>(args?: SelectSubset<T, PriceHistoryFindFirstArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PriceHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryFindFirstOrThrowArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PriceHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, PriceHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PriceHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PriceHistories
     * const priceHistories = await prisma.priceHistory.findMany()
     * 
     * // Get first 10 PriceHistories
     * const priceHistories = await prisma.priceHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceHistoryWithIdOnly = await prisma.priceHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PriceHistoryFindManyArgs>(args?: SelectSubset<T, PriceHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PriceHistory.
     * @param {PriceHistoryCreateArgs} args - Arguments to create a PriceHistory.
     * @example
     * // Create one PriceHistory
     * const PriceHistory = await prisma.priceHistory.create({
     *   data: {
     *     // ... data to create a PriceHistory
     *   }
     * })
     * 
     */
    create<T extends PriceHistoryCreateArgs>(args: SelectSubset<T, PriceHistoryCreateArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PriceHistories.
     * @param {PriceHistoryCreateManyArgs} args - Arguments to create many PriceHistories.
     * @example
     * // Create many PriceHistories
     * const priceHistory = await prisma.priceHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PriceHistoryCreateManyArgs>(args?: SelectSubset<T, PriceHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PriceHistories and returns the data saved in the database.
     * @param {PriceHistoryCreateManyAndReturnArgs} args - Arguments to create many PriceHistories.
     * @example
     * // Create many PriceHistories
     * const priceHistory = await prisma.priceHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PriceHistories and only return the `id`
     * const priceHistoryWithIdOnly = await prisma.priceHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PriceHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, PriceHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PriceHistory.
     * @param {PriceHistoryDeleteArgs} args - Arguments to delete one PriceHistory.
     * @example
     * // Delete one PriceHistory
     * const PriceHistory = await prisma.priceHistory.delete({
     *   where: {
     *     // ... filter to delete one PriceHistory
     *   }
     * })
     * 
     */
    delete<T extends PriceHistoryDeleteArgs>(args: SelectSubset<T, PriceHistoryDeleteArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PriceHistory.
     * @param {PriceHistoryUpdateArgs} args - Arguments to update one PriceHistory.
     * @example
     * // Update one PriceHistory
     * const priceHistory = await prisma.priceHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PriceHistoryUpdateArgs>(args: SelectSubset<T, PriceHistoryUpdateArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PriceHistories.
     * @param {PriceHistoryDeleteManyArgs} args - Arguments to filter PriceHistories to delete.
     * @example
     * // Delete a few PriceHistories
     * const { count } = await prisma.priceHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PriceHistoryDeleteManyArgs>(args?: SelectSubset<T, PriceHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PriceHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PriceHistories
     * const priceHistory = await prisma.priceHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PriceHistoryUpdateManyArgs>(args: SelectSubset<T, PriceHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PriceHistories and returns the data updated in the database.
     * @param {PriceHistoryUpdateManyAndReturnArgs} args - Arguments to update many PriceHistories.
     * @example
     * // Update many PriceHistories
     * const priceHistory = await prisma.priceHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PriceHistories and only return the `id`
     * const priceHistoryWithIdOnly = await prisma.priceHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PriceHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, PriceHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PriceHistory.
     * @param {PriceHistoryUpsertArgs} args - Arguments to update or create a PriceHistory.
     * @example
     * // Update or create a PriceHistory
     * const priceHistory = await prisma.priceHistory.upsert({
     *   create: {
     *     // ... data to create a PriceHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PriceHistory we want to update
     *   }
     * })
     */
    upsert<T extends PriceHistoryUpsertArgs>(args: SelectSubset<T, PriceHistoryUpsertArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PriceHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryCountArgs} args - Arguments to filter PriceHistories to count.
     * @example
     * // Count the number of PriceHistories
     * const count = await prisma.priceHistory.count({
     *   where: {
     *     // ... the filter for the PriceHistories we want to count
     *   }
     * })
    **/
    count<T extends PriceHistoryCountArgs>(
      args?: Subset<T, PriceHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PriceHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceHistoryAggregateArgs>(args: Subset<T, PriceHistoryAggregateArgs>): Prisma.PrismaPromise<GetPriceHistoryAggregateType<T>>

    /**
     * Group by PriceHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PriceHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PriceHistoryGroupByArgs['orderBy'] }
        : { orderBy?: PriceHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PriceHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PriceHistory model
   */
  readonly fields: PriceHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PriceHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PriceHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PriceHistory model
   */
  interface PriceHistoryFieldRefs {
    readonly id: FieldRef<"PriceHistory", 'Int'>
    readonly symbol: FieldRef<"PriceHistory", 'String'>
    readonly name: FieldRef<"PriceHistory", 'String'>
    readonly price: FieldRef<"PriceHistory", 'Float'>
    readonly volume: FieldRef<"PriceHistory", 'Float'>
    readonly marketCap: FieldRef<"PriceHistory", 'Float'>
    readonly rank: FieldRef<"PriceHistory", 'Int'>
    readonly change1h: FieldRef<"PriceHistory", 'Float'>
    readonly change24h: FieldRef<"PriceHistory", 'Float'>
    readonly change7d: FieldRef<"PriceHistory", 'Float'>
    readonly timestamp: FieldRef<"PriceHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PriceHistory findUnique
   */
  export type PriceHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory findUniqueOrThrow
   */
  export type PriceHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory findFirst
   */
  export type PriceHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PriceHistories.
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PriceHistories.
     */
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * PriceHistory findFirstOrThrow
   */
  export type PriceHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PriceHistories.
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PriceHistories.
     */
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * PriceHistory findMany
   */
  export type PriceHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * Filter, which PriceHistories to fetch.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PriceHistories.
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * PriceHistory create
   */
  export type PriceHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * The data needed to create a PriceHistory.
     */
    data: XOR<PriceHistoryCreateInput, PriceHistoryUncheckedCreateInput>
  }

  /**
   * PriceHistory createMany
   */
  export type PriceHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PriceHistories.
     */
    data: PriceHistoryCreateManyInput | PriceHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PriceHistory createManyAndReturn
   */
  export type PriceHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many PriceHistories.
     */
    data: PriceHistoryCreateManyInput | PriceHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PriceHistory update
   */
  export type PriceHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * The data needed to update a PriceHistory.
     */
    data: XOR<PriceHistoryUpdateInput, PriceHistoryUncheckedUpdateInput>
    /**
     * Choose, which PriceHistory to update.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory updateMany
   */
  export type PriceHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PriceHistories.
     */
    data: XOR<PriceHistoryUpdateManyMutationInput, PriceHistoryUncheckedUpdateManyInput>
    /**
     * Filter which PriceHistories to update
     */
    where?: PriceHistoryWhereInput
    /**
     * Limit how many PriceHistories to update.
     */
    limit?: number
  }

  /**
   * PriceHistory updateManyAndReturn
   */
  export type PriceHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * The data used to update PriceHistories.
     */
    data: XOR<PriceHistoryUpdateManyMutationInput, PriceHistoryUncheckedUpdateManyInput>
    /**
     * Filter which PriceHistories to update
     */
    where?: PriceHistoryWhereInput
    /**
     * Limit how many PriceHistories to update.
     */
    limit?: number
  }

  /**
   * PriceHistory upsert
   */
  export type PriceHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * The filter to search for the PriceHistory to update in case it exists.
     */
    where: PriceHistoryWhereUniqueInput
    /**
     * In case the PriceHistory found by the `where` argument doesn't exist, create a new PriceHistory with this data.
     */
    create: XOR<PriceHistoryCreateInput, PriceHistoryUncheckedCreateInput>
    /**
     * In case the PriceHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PriceHistoryUpdateInput, PriceHistoryUncheckedUpdateInput>
  }

  /**
   * PriceHistory delete
   */
  export type PriceHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
    /**
     * Filter which PriceHistory to delete.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory deleteMany
   */
  export type PriceHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PriceHistories to delete
     */
    where?: PriceHistoryWhereInput
    /**
     * Limit how many PriceHistories to delete.
     */
    limit?: number
  }

  /**
   * PriceHistory without action
   */
  export type PriceHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PriceHistory
     */
    omit?: PriceHistoryOmit<ExtArgs> | null
  }


  /**
   * Model AlertHistory
   */

  export type AggregateAlertHistory = {
    _count: AlertHistoryCountAggregateOutputType | null
    _avg: AlertHistoryAvgAggregateOutputType | null
    _sum: AlertHistorySumAggregateOutputType | null
    _min: AlertHistoryMinAggregateOutputType | null
    _max: AlertHistoryMaxAggregateOutputType | null
  }

  export type AlertHistoryAvgAggregateOutputType = {
    id: number | null
    changePercent: number | null
    volume: number | null
  }

  export type AlertHistorySumAggregateOutputType = {
    id: number | null
    changePercent: number | null
    volume: number | null
  }

  export type AlertHistoryMinAggregateOutputType = {
    id: number | null
    symbol: string | null
    alertType: string | null
    level: string | null
    title: string | null
    description: string | null
    changePercent: number | null
    timeframe: string | null
    volume: number | null
    isActive: boolean | null
    dismissed: boolean | null
    timestamp: Date | null
  }

  export type AlertHistoryMaxAggregateOutputType = {
    id: number | null
    symbol: string | null
    alertType: string | null
    level: string | null
    title: string | null
    description: string | null
    changePercent: number | null
    timeframe: string | null
    volume: number | null
    isActive: boolean | null
    dismissed: boolean | null
    timestamp: Date | null
  }

  export type AlertHistoryCountAggregateOutputType = {
    id: number
    symbol: number
    alertType: number
    level: number
    title: number
    description: number
    changePercent: number
    timeframe: number
    volume: number
    details: number
    isActive: number
    dismissed: number
    timestamp: number
    _all: number
  }


  export type AlertHistoryAvgAggregateInputType = {
    id?: true
    changePercent?: true
    volume?: true
  }

  export type AlertHistorySumAggregateInputType = {
    id?: true
    changePercent?: true
    volume?: true
  }

  export type AlertHistoryMinAggregateInputType = {
    id?: true
    symbol?: true
    alertType?: true
    level?: true
    title?: true
    description?: true
    changePercent?: true
    timeframe?: true
    volume?: true
    isActive?: true
    dismissed?: true
    timestamp?: true
  }

  export type AlertHistoryMaxAggregateInputType = {
    id?: true
    symbol?: true
    alertType?: true
    level?: true
    title?: true
    description?: true
    changePercent?: true
    timeframe?: true
    volume?: true
    isActive?: true
    dismissed?: true
    timestamp?: true
  }

  export type AlertHistoryCountAggregateInputType = {
    id?: true
    symbol?: true
    alertType?: true
    level?: true
    title?: true
    description?: true
    changePercent?: true
    timeframe?: true
    volume?: true
    details?: true
    isActive?: true
    dismissed?: true
    timestamp?: true
    _all?: true
  }

  export type AlertHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlertHistory to aggregate.
     */
    where?: AlertHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertHistories to fetch.
     */
    orderBy?: AlertHistoryOrderByWithRelationInput | AlertHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlertHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlertHistories
    **/
    _count?: true | AlertHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlertHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlertHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlertHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlertHistoryMaxAggregateInputType
  }

  export type GetAlertHistoryAggregateType<T extends AlertHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateAlertHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlertHistory[P]>
      : GetScalarType<T[P], AggregateAlertHistory[P]>
  }




  export type AlertHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlertHistoryWhereInput
    orderBy?: AlertHistoryOrderByWithAggregationInput | AlertHistoryOrderByWithAggregationInput[]
    by: AlertHistoryScalarFieldEnum[] | AlertHistoryScalarFieldEnum
    having?: AlertHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlertHistoryCountAggregateInputType | true
    _avg?: AlertHistoryAvgAggregateInputType
    _sum?: AlertHistorySumAggregateInputType
    _min?: AlertHistoryMinAggregateInputType
    _max?: AlertHistoryMaxAggregateInputType
  }

  export type AlertHistoryGroupByOutputType = {
    id: number
    symbol: string
    alertType: string
    level: string
    title: string
    description: string
    changePercent: number | null
    timeframe: string | null
    volume: number | null
    details: JsonValue | null
    isActive: boolean
    dismissed: boolean
    timestamp: Date
    _count: AlertHistoryCountAggregateOutputType | null
    _avg: AlertHistoryAvgAggregateOutputType | null
    _sum: AlertHistorySumAggregateOutputType | null
    _min: AlertHistoryMinAggregateOutputType | null
    _max: AlertHistoryMaxAggregateOutputType | null
  }

  type GetAlertHistoryGroupByPayload<T extends AlertHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlertHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlertHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlertHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], AlertHistoryGroupByOutputType[P]>
        }
      >
    >


  export type AlertHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    symbol?: boolean
    alertType?: boolean
    level?: boolean
    title?: boolean
    description?: boolean
    changePercent?: boolean
    timeframe?: boolean
    volume?: boolean
    details?: boolean
    isActive?: boolean
    dismissed?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["alertHistory"]>

  export type AlertHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    symbol?: boolean
    alertType?: boolean
    level?: boolean
    title?: boolean
    description?: boolean
    changePercent?: boolean
    timeframe?: boolean
    volume?: boolean
    details?: boolean
    isActive?: boolean
    dismissed?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["alertHistory"]>

  export type AlertHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    symbol?: boolean
    alertType?: boolean
    level?: boolean
    title?: boolean
    description?: boolean
    changePercent?: boolean
    timeframe?: boolean
    volume?: boolean
    details?: boolean
    isActive?: boolean
    dismissed?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["alertHistory"]>

  export type AlertHistorySelectScalar = {
    id?: boolean
    symbol?: boolean
    alertType?: boolean
    level?: boolean
    title?: boolean
    description?: boolean
    changePercent?: boolean
    timeframe?: boolean
    volume?: boolean
    details?: boolean
    isActive?: boolean
    dismissed?: boolean
    timestamp?: boolean
  }

  export type AlertHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "symbol" | "alertType" | "level" | "title" | "description" | "changePercent" | "timeframe" | "volume" | "details" | "isActive" | "dismissed" | "timestamp", ExtArgs["result"]["alertHistory"]>

  export type $AlertHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlertHistory"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      symbol: string
      alertType: string
      level: string
      title: string
      description: string
      changePercent: number | null
      timeframe: string | null
      volume: number | null
      details: Prisma.JsonValue | null
      isActive: boolean
      dismissed: boolean
      timestamp: Date
    }, ExtArgs["result"]["alertHistory"]>
    composites: {}
  }

  type AlertHistoryGetPayload<S extends boolean | null | undefined | AlertHistoryDefaultArgs> = $Result.GetResult<Prisma.$AlertHistoryPayload, S>

  type AlertHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlertHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlertHistoryCountAggregateInputType | true
    }

  export interface AlertHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlertHistory'], meta: { name: 'AlertHistory' } }
    /**
     * Find zero or one AlertHistory that matches the filter.
     * @param {AlertHistoryFindUniqueArgs} args - Arguments to find a AlertHistory
     * @example
     * // Get one AlertHistory
     * const alertHistory = await prisma.alertHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlertHistoryFindUniqueArgs>(args: SelectSubset<T, AlertHistoryFindUniqueArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AlertHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlertHistoryFindUniqueOrThrowArgs} args - Arguments to find a AlertHistory
     * @example
     * // Get one AlertHistory
     * const alertHistory = await prisma.alertHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlertHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, AlertHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AlertHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryFindFirstArgs} args - Arguments to find a AlertHistory
     * @example
     * // Get one AlertHistory
     * const alertHistory = await prisma.alertHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlertHistoryFindFirstArgs>(args?: SelectSubset<T, AlertHistoryFindFirstArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AlertHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryFindFirstOrThrowArgs} args - Arguments to find a AlertHistory
     * @example
     * // Get one AlertHistory
     * const alertHistory = await prisma.alertHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlertHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, AlertHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AlertHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlertHistories
     * const alertHistories = await prisma.alertHistory.findMany()
     * 
     * // Get first 10 AlertHistories
     * const alertHistories = await prisma.alertHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alertHistoryWithIdOnly = await prisma.alertHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlertHistoryFindManyArgs>(args?: SelectSubset<T, AlertHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AlertHistory.
     * @param {AlertHistoryCreateArgs} args - Arguments to create a AlertHistory.
     * @example
     * // Create one AlertHistory
     * const AlertHistory = await prisma.alertHistory.create({
     *   data: {
     *     // ... data to create a AlertHistory
     *   }
     * })
     * 
     */
    create<T extends AlertHistoryCreateArgs>(args: SelectSubset<T, AlertHistoryCreateArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AlertHistories.
     * @param {AlertHistoryCreateManyArgs} args - Arguments to create many AlertHistories.
     * @example
     * // Create many AlertHistories
     * const alertHistory = await prisma.alertHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlertHistoryCreateManyArgs>(args?: SelectSubset<T, AlertHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AlertHistories and returns the data saved in the database.
     * @param {AlertHistoryCreateManyAndReturnArgs} args - Arguments to create many AlertHistories.
     * @example
     * // Create many AlertHistories
     * const alertHistory = await prisma.alertHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AlertHistories and only return the `id`
     * const alertHistoryWithIdOnly = await prisma.alertHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AlertHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, AlertHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AlertHistory.
     * @param {AlertHistoryDeleteArgs} args - Arguments to delete one AlertHistory.
     * @example
     * // Delete one AlertHistory
     * const AlertHistory = await prisma.alertHistory.delete({
     *   where: {
     *     // ... filter to delete one AlertHistory
     *   }
     * })
     * 
     */
    delete<T extends AlertHistoryDeleteArgs>(args: SelectSubset<T, AlertHistoryDeleteArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AlertHistory.
     * @param {AlertHistoryUpdateArgs} args - Arguments to update one AlertHistory.
     * @example
     * // Update one AlertHistory
     * const alertHistory = await prisma.alertHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlertHistoryUpdateArgs>(args: SelectSubset<T, AlertHistoryUpdateArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AlertHistories.
     * @param {AlertHistoryDeleteManyArgs} args - Arguments to filter AlertHistories to delete.
     * @example
     * // Delete a few AlertHistories
     * const { count } = await prisma.alertHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlertHistoryDeleteManyArgs>(args?: SelectSubset<T, AlertHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlertHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlertHistories
     * const alertHistory = await prisma.alertHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlertHistoryUpdateManyArgs>(args: SelectSubset<T, AlertHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlertHistories and returns the data updated in the database.
     * @param {AlertHistoryUpdateManyAndReturnArgs} args - Arguments to update many AlertHistories.
     * @example
     * // Update many AlertHistories
     * const alertHistory = await prisma.alertHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AlertHistories and only return the `id`
     * const alertHistoryWithIdOnly = await prisma.alertHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AlertHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, AlertHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AlertHistory.
     * @param {AlertHistoryUpsertArgs} args - Arguments to update or create a AlertHistory.
     * @example
     * // Update or create a AlertHistory
     * const alertHistory = await prisma.alertHistory.upsert({
     *   create: {
     *     // ... data to create a AlertHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlertHistory we want to update
     *   }
     * })
     */
    upsert<T extends AlertHistoryUpsertArgs>(args: SelectSubset<T, AlertHistoryUpsertArgs<ExtArgs>>): Prisma__AlertHistoryClient<$Result.GetResult<Prisma.$AlertHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AlertHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryCountArgs} args - Arguments to filter AlertHistories to count.
     * @example
     * // Count the number of AlertHistories
     * const count = await prisma.alertHistory.count({
     *   where: {
     *     // ... the filter for the AlertHistories we want to count
     *   }
     * })
    **/
    count<T extends AlertHistoryCountArgs>(
      args?: Subset<T, AlertHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlertHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlertHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlertHistoryAggregateArgs>(args: Subset<T, AlertHistoryAggregateArgs>): Prisma.PrismaPromise<GetAlertHistoryAggregateType<T>>

    /**
     * Group by AlertHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlertHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlertHistoryGroupByArgs['orderBy'] }
        : { orderBy?: AlertHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlertHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlertHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlertHistory model
   */
  readonly fields: AlertHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlertHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlertHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AlertHistory model
   */
  interface AlertHistoryFieldRefs {
    readonly id: FieldRef<"AlertHistory", 'Int'>
    readonly symbol: FieldRef<"AlertHistory", 'String'>
    readonly alertType: FieldRef<"AlertHistory", 'String'>
    readonly level: FieldRef<"AlertHistory", 'String'>
    readonly title: FieldRef<"AlertHistory", 'String'>
    readonly description: FieldRef<"AlertHistory", 'String'>
    readonly changePercent: FieldRef<"AlertHistory", 'Float'>
    readonly timeframe: FieldRef<"AlertHistory", 'String'>
    readonly volume: FieldRef<"AlertHistory", 'Float'>
    readonly details: FieldRef<"AlertHistory", 'Json'>
    readonly isActive: FieldRef<"AlertHistory", 'Boolean'>
    readonly dismissed: FieldRef<"AlertHistory", 'Boolean'>
    readonly timestamp: FieldRef<"AlertHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AlertHistory findUnique
   */
  export type AlertHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * Filter, which AlertHistory to fetch.
     */
    where: AlertHistoryWhereUniqueInput
  }

  /**
   * AlertHistory findUniqueOrThrow
   */
  export type AlertHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * Filter, which AlertHistory to fetch.
     */
    where: AlertHistoryWhereUniqueInput
  }

  /**
   * AlertHistory findFirst
   */
  export type AlertHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * Filter, which AlertHistory to fetch.
     */
    where?: AlertHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertHistories to fetch.
     */
    orderBy?: AlertHistoryOrderByWithRelationInput | AlertHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlertHistories.
     */
    cursor?: AlertHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlertHistories.
     */
    distinct?: AlertHistoryScalarFieldEnum | AlertHistoryScalarFieldEnum[]
  }

  /**
   * AlertHistory findFirstOrThrow
   */
  export type AlertHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * Filter, which AlertHistory to fetch.
     */
    where?: AlertHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertHistories to fetch.
     */
    orderBy?: AlertHistoryOrderByWithRelationInput | AlertHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlertHistories.
     */
    cursor?: AlertHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlertHistories.
     */
    distinct?: AlertHistoryScalarFieldEnum | AlertHistoryScalarFieldEnum[]
  }

  /**
   * AlertHistory findMany
   */
  export type AlertHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * Filter, which AlertHistories to fetch.
     */
    where?: AlertHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertHistories to fetch.
     */
    orderBy?: AlertHistoryOrderByWithRelationInput | AlertHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlertHistories.
     */
    cursor?: AlertHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertHistories.
     */
    skip?: number
    distinct?: AlertHistoryScalarFieldEnum | AlertHistoryScalarFieldEnum[]
  }

  /**
   * AlertHistory create
   */
  export type AlertHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * The data needed to create a AlertHistory.
     */
    data: XOR<AlertHistoryCreateInput, AlertHistoryUncheckedCreateInput>
  }

  /**
   * AlertHistory createMany
   */
  export type AlertHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlertHistories.
     */
    data: AlertHistoryCreateManyInput | AlertHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlertHistory createManyAndReturn
   */
  export type AlertHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many AlertHistories.
     */
    data: AlertHistoryCreateManyInput | AlertHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlertHistory update
   */
  export type AlertHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * The data needed to update a AlertHistory.
     */
    data: XOR<AlertHistoryUpdateInput, AlertHistoryUncheckedUpdateInput>
    /**
     * Choose, which AlertHistory to update.
     */
    where: AlertHistoryWhereUniqueInput
  }

  /**
   * AlertHistory updateMany
   */
  export type AlertHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlertHistories.
     */
    data: XOR<AlertHistoryUpdateManyMutationInput, AlertHistoryUncheckedUpdateManyInput>
    /**
     * Filter which AlertHistories to update
     */
    where?: AlertHistoryWhereInput
    /**
     * Limit how many AlertHistories to update.
     */
    limit?: number
  }

  /**
   * AlertHistory updateManyAndReturn
   */
  export type AlertHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * The data used to update AlertHistories.
     */
    data: XOR<AlertHistoryUpdateManyMutationInput, AlertHistoryUncheckedUpdateManyInput>
    /**
     * Filter which AlertHistories to update
     */
    where?: AlertHistoryWhereInput
    /**
     * Limit how many AlertHistories to update.
     */
    limit?: number
  }

  /**
   * AlertHistory upsert
   */
  export type AlertHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * The filter to search for the AlertHistory to update in case it exists.
     */
    where: AlertHistoryWhereUniqueInput
    /**
     * In case the AlertHistory found by the `where` argument doesn't exist, create a new AlertHistory with this data.
     */
    create: XOR<AlertHistoryCreateInput, AlertHistoryUncheckedCreateInput>
    /**
     * In case the AlertHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlertHistoryUpdateInput, AlertHistoryUncheckedUpdateInput>
  }

  /**
   * AlertHistory delete
   */
  export type AlertHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
    /**
     * Filter which AlertHistory to delete.
     */
    where: AlertHistoryWhereUniqueInput
  }

  /**
   * AlertHistory deleteMany
   */
  export type AlertHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlertHistories to delete
     */
    where?: AlertHistoryWhereInput
    /**
     * Limit how many AlertHistories to delete.
     */
    limit?: number
  }

  /**
   * AlertHistory without action
   */
  export type AlertHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertHistory
     */
    select?: AlertHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertHistory
     */
    omit?: AlertHistoryOmit<ExtArgs> | null
  }


  /**
   * Model MarketIndicators
   */

  export type AggregateMarketIndicators = {
    _count: MarketIndicatorsCountAggregateOutputType | null
    _avg: MarketIndicatorsAvgAggregateOutputType | null
    _sum: MarketIndicatorsSumAggregateOutputType | null
    _min: MarketIndicatorsMinAggregateOutputType | null
    _max: MarketIndicatorsMaxAggregateOutputType | null
  }

  export type MarketIndicatorsAvgAggregateOutputType = {
    id: number | null
    totalMarketCap: number | null
    btcDominance: number | null
    fearGreedIndex: number | null
    totalVolume24h: number | null
  }

  export type MarketIndicatorsSumAggregateOutputType = {
    id: number | null
    totalMarketCap: number | null
    btcDominance: number | null
    fearGreedIndex: number | null
    totalVolume24h: number | null
  }

  export type MarketIndicatorsMinAggregateOutputType = {
    id: number | null
    totalMarketCap: number | null
    btcDominance: number | null
    fearGreedIndex: number | null
    totalVolume24h: number | null
    timestamp: Date | null
  }

  export type MarketIndicatorsMaxAggregateOutputType = {
    id: number | null
    totalMarketCap: number | null
    btcDominance: number | null
    fearGreedIndex: number | null
    totalVolume24h: number | null
    timestamp: Date | null
  }

  export type MarketIndicatorsCountAggregateOutputType = {
    id: number
    totalMarketCap: number
    btcDominance: number
    fearGreedIndex: number
    totalVolume24h: number
    timestamp: number
    _all: number
  }


  export type MarketIndicatorsAvgAggregateInputType = {
    id?: true
    totalMarketCap?: true
    btcDominance?: true
    fearGreedIndex?: true
    totalVolume24h?: true
  }

  export type MarketIndicatorsSumAggregateInputType = {
    id?: true
    totalMarketCap?: true
    btcDominance?: true
    fearGreedIndex?: true
    totalVolume24h?: true
  }

  export type MarketIndicatorsMinAggregateInputType = {
    id?: true
    totalMarketCap?: true
    btcDominance?: true
    fearGreedIndex?: true
    totalVolume24h?: true
    timestamp?: true
  }

  export type MarketIndicatorsMaxAggregateInputType = {
    id?: true
    totalMarketCap?: true
    btcDominance?: true
    fearGreedIndex?: true
    totalVolume24h?: true
    timestamp?: true
  }

  export type MarketIndicatorsCountAggregateInputType = {
    id?: true
    totalMarketCap?: true
    btcDominance?: true
    fearGreedIndex?: true
    totalVolume24h?: true
    timestamp?: true
    _all?: true
  }

  export type MarketIndicatorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarketIndicators to aggregate.
     */
    where?: MarketIndicatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketIndicators to fetch.
     */
    orderBy?: MarketIndicatorsOrderByWithRelationInput | MarketIndicatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarketIndicatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketIndicators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketIndicators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MarketIndicators
    **/
    _count?: true | MarketIndicatorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarketIndicatorsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarketIndicatorsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarketIndicatorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarketIndicatorsMaxAggregateInputType
  }

  export type GetMarketIndicatorsAggregateType<T extends MarketIndicatorsAggregateArgs> = {
        [P in keyof T & keyof AggregateMarketIndicators]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarketIndicators[P]>
      : GetScalarType<T[P], AggregateMarketIndicators[P]>
  }




  export type MarketIndicatorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketIndicatorsWhereInput
    orderBy?: MarketIndicatorsOrderByWithAggregationInput | MarketIndicatorsOrderByWithAggregationInput[]
    by: MarketIndicatorsScalarFieldEnum[] | MarketIndicatorsScalarFieldEnum
    having?: MarketIndicatorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarketIndicatorsCountAggregateInputType | true
    _avg?: MarketIndicatorsAvgAggregateInputType
    _sum?: MarketIndicatorsSumAggregateInputType
    _min?: MarketIndicatorsMinAggregateInputType
    _max?: MarketIndicatorsMaxAggregateInputType
  }

  export type MarketIndicatorsGroupByOutputType = {
    id: number
    totalMarketCap: number
    btcDominance: number
    fearGreedIndex: number | null
    totalVolume24h: number | null
    timestamp: Date
    _count: MarketIndicatorsCountAggregateOutputType | null
    _avg: MarketIndicatorsAvgAggregateOutputType | null
    _sum: MarketIndicatorsSumAggregateOutputType | null
    _min: MarketIndicatorsMinAggregateOutputType | null
    _max: MarketIndicatorsMaxAggregateOutputType | null
  }

  type GetMarketIndicatorsGroupByPayload<T extends MarketIndicatorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarketIndicatorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarketIndicatorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarketIndicatorsGroupByOutputType[P]>
            : GetScalarType<T[P], MarketIndicatorsGroupByOutputType[P]>
        }
      >
    >


  export type MarketIndicatorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalMarketCap?: boolean
    btcDominance?: boolean
    fearGreedIndex?: boolean
    totalVolume24h?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["marketIndicators"]>

  export type MarketIndicatorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalMarketCap?: boolean
    btcDominance?: boolean
    fearGreedIndex?: boolean
    totalVolume24h?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["marketIndicators"]>

  export type MarketIndicatorsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalMarketCap?: boolean
    btcDominance?: boolean
    fearGreedIndex?: boolean
    totalVolume24h?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["marketIndicators"]>

  export type MarketIndicatorsSelectScalar = {
    id?: boolean
    totalMarketCap?: boolean
    btcDominance?: boolean
    fearGreedIndex?: boolean
    totalVolume24h?: boolean
    timestamp?: boolean
  }

  export type MarketIndicatorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "totalMarketCap" | "btcDominance" | "fearGreedIndex" | "totalVolume24h" | "timestamp", ExtArgs["result"]["marketIndicators"]>

  export type $MarketIndicatorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MarketIndicators"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      totalMarketCap: number
      btcDominance: number
      fearGreedIndex: number | null
      totalVolume24h: number | null
      timestamp: Date
    }, ExtArgs["result"]["marketIndicators"]>
    composites: {}
  }

  type MarketIndicatorsGetPayload<S extends boolean | null | undefined | MarketIndicatorsDefaultArgs> = $Result.GetResult<Prisma.$MarketIndicatorsPayload, S>

  type MarketIndicatorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MarketIndicatorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MarketIndicatorsCountAggregateInputType | true
    }

  export interface MarketIndicatorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MarketIndicators'], meta: { name: 'MarketIndicators' } }
    /**
     * Find zero or one MarketIndicators that matches the filter.
     * @param {MarketIndicatorsFindUniqueArgs} args - Arguments to find a MarketIndicators
     * @example
     * // Get one MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarketIndicatorsFindUniqueArgs>(args: SelectSubset<T, MarketIndicatorsFindUniqueArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MarketIndicators that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MarketIndicatorsFindUniqueOrThrowArgs} args - Arguments to find a MarketIndicators
     * @example
     * // Get one MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarketIndicatorsFindUniqueOrThrowArgs>(args: SelectSubset<T, MarketIndicatorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MarketIndicators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsFindFirstArgs} args - Arguments to find a MarketIndicators
     * @example
     * // Get one MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarketIndicatorsFindFirstArgs>(args?: SelectSubset<T, MarketIndicatorsFindFirstArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MarketIndicators that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsFindFirstOrThrowArgs} args - Arguments to find a MarketIndicators
     * @example
     * // Get one MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarketIndicatorsFindFirstOrThrowArgs>(args?: SelectSubset<T, MarketIndicatorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MarketIndicators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.findMany()
     * 
     * // Get first 10 MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const marketIndicatorsWithIdOnly = await prisma.marketIndicators.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MarketIndicatorsFindManyArgs>(args?: SelectSubset<T, MarketIndicatorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MarketIndicators.
     * @param {MarketIndicatorsCreateArgs} args - Arguments to create a MarketIndicators.
     * @example
     * // Create one MarketIndicators
     * const MarketIndicators = await prisma.marketIndicators.create({
     *   data: {
     *     // ... data to create a MarketIndicators
     *   }
     * })
     * 
     */
    create<T extends MarketIndicatorsCreateArgs>(args: SelectSubset<T, MarketIndicatorsCreateArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MarketIndicators.
     * @param {MarketIndicatorsCreateManyArgs} args - Arguments to create many MarketIndicators.
     * @example
     * // Create many MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarketIndicatorsCreateManyArgs>(args?: SelectSubset<T, MarketIndicatorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MarketIndicators and returns the data saved in the database.
     * @param {MarketIndicatorsCreateManyAndReturnArgs} args - Arguments to create many MarketIndicators.
     * @example
     * // Create many MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MarketIndicators and only return the `id`
     * const marketIndicatorsWithIdOnly = await prisma.marketIndicators.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarketIndicatorsCreateManyAndReturnArgs>(args?: SelectSubset<T, MarketIndicatorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MarketIndicators.
     * @param {MarketIndicatorsDeleteArgs} args - Arguments to delete one MarketIndicators.
     * @example
     * // Delete one MarketIndicators
     * const MarketIndicators = await prisma.marketIndicators.delete({
     *   where: {
     *     // ... filter to delete one MarketIndicators
     *   }
     * })
     * 
     */
    delete<T extends MarketIndicatorsDeleteArgs>(args: SelectSubset<T, MarketIndicatorsDeleteArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MarketIndicators.
     * @param {MarketIndicatorsUpdateArgs} args - Arguments to update one MarketIndicators.
     * @example
     * // Update one MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarketIndicatorsUpdateArgs>(args: SelectSubset<T, MarketIndicatorsUpdateArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MarketIndicators.
     * @param {MarketIndicatorsDeleteManyArgs} args - Arguments to filter MarketIndicators to delete.
     * @example
     * // Delete a few MarketIndicators
     * const { count } = await prisma.marketIndicators.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarketIndicatorsDeleteManyArgs>(args?: SelectSubset<T, MarketIndicatorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MarketIndicators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarketIndicatorsUpdateManyArgs>(args: SelectSubset<T, MarketIndicatorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MarketIndicators and returns the data updated in the database.
     * @param {MarketIndicatorsUpdateManyAndReturnArgs} args - Arguments to update many MarketIndicators.
     * @example
     * // Update many MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MarketIndicators and only return the `id`
     * const marketIndicatorsWithIdOnly = await prisma.marketIndicators.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MarketIndicatorsUpdateManyAndReturnArgs>(args: SelectSubset<T, MarketIndicatorsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MarketIndicators.
     * @param {MarketIndicatorsUpsertArgs} args - Arguments to update or create a MarketIndicators.
     * @example
     * // Update or create a MarketIndicators
     * const marketIndicators = await prisma.marketIndicators.upsert({
     *   create: {
     *     // ... data to create a MarketIndicators
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MarketIndicators we want to update
     *   }
     * })
     */
    upsert<T extends MarketIndicatorsUpsertArgs>(args: SelectSubset<T, MarketIndicatorsUpsertArgs<ExtArgs>>): Prisma__MarketIndicatorsClient<$Result.GetResult<Prisma.$MarketIndicatorsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MarketIndicators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsCountArgs} args - Arguments to filter MarketIndicators to count.
     * @example
     * // Count the number of MarketIndicators
     * const count = await prisma.marketIndicators.count({
     *   where: {
     *     // ... the filter for the MarketIndicators we want to count
     *   }
     * })
    **/
    count<T extends MarketIndicatorsCountArgs>(
      args?: Subset<T, MarketIndicatorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarketIndicatorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MarketIndicators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarketIndicatorsAggregateArgs>(args: Subset<T, MarketIndicatorsAggregateArgs>): Prisma.PrismaPromise<GetMarketIndicatorsAggregateType<T>>

    /**
     * Group by MarketIndicators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketIndicatorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarketIndicatorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarketIndicatorsGroupByArgs['orderBy'] }
        : { orderBy?: MarketIndicatorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarketIndicatorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarketIndicatorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MarketIndicators model
   */
  readonly fields: MarketIndicatorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MarketIndicators.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarketIndicatorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MarketIndicators model
   */
  interface MarketIndicatorsFieldRefs {
    readonly id: FieldRef<"MarketIndicators", 'Int'>
    readonly totalMarketCap: FieldRef<"MarketIndicators", 'Float'>
    readonly btcDominance: FieldRef<"MarketIndicators", 'Float'>
    readonly fearGreedIndex: FieldRef<"MarketIndicators", 'Int'>
    readonly totalVolume24h: FieldRef<"MarketIndicators", 'Float'>
    readonly timestamp: FieldRef<"MarketIndicators", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MarketIndicators findUnique
   */
  export type MarketIndicatorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * Filter, which MarketIndicators to fetch.
     */
    where: MarketIndicatorsWhereUniqueInput
  }

  /**
   * MarketIndicators findUniqueOrThrow
   */
  export type MarketIndicatorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * Filter, which MarketIndicators to fetch.
     */
    where: MarketIndicatorsWhereUniqueInput
  }

  /**
   * MarketIndicators findFirst
   */
  export type MarketIndicatorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * Filter, which MarketIndicators to fetch.
     */
    where?: MarketIndicatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketIndicators to fetch.
     */
    orderBy?: MarketIndicatorsOrderByWithRelationInput | MarketIndicatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarketIndicators.
     */
    cursor?: MarketIndicatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketIndicators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketIndicators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarketIndicators.
     */
    distinct?: MarketIndicatorsScalarFieldEnum | MarketIndicatorsScalarFieldEnum[]
  }

  /**
   * MarketIndicators findFirstOrThrow
   */
  export type MarketIndicatorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * Filter, which MarketIndicators to fetch.
     */
    where?: MarketIndicatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketIndicators to fetch.
     */
    orderBy?: MarketIndicatorsOrderByWithRelationInput | MarketIndicatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarketIndicators.
     */
    cursor?: MarketIndicatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketIndicators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketIndicators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarketIndicators.
     */
    distinct?: MarketIndicatorsScalarFieldEnum | MarketIndicatorsScalarFieldEnum[]
  }

  /**
   * MarketIndicators findMany
   */
  export type MarketIndicatorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * Filter, which MarketIndicators to fetch.
     */
    where?: MarketIndicatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketIndicators to fetch.
     */
    orderBy?: MarketIndicatorsOrderByWithRelationInput | MarketIndicatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MarketIndicators.
     */
    cursor?: MarketIndicatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketIndicators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketIndicators.
     */
    skip?: number
    distinct?: MarketIndicatorsScalarFieldEnum | MarketIndicatorsScalarFieldEnum[]
  }

  /**
   * MarketIndicators create
   */
  export type MarketIndicatorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * The data needed to create a MarketIndicators.
     */
    data: XOR<MarketIndicatorsCreateInput, MarketIndicatorsUncheckedCreateInput>
  }

  /**
   * MarketIndicators createMany
   */
  export type MarketIndicatorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MarketIndicators.
     */
    data: MarketIndicatorsCreateManyInput | MarketIndicatorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MarketIndicators createManyAndReturn
   */
  export type MarketIndicatorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * The data used to create many MarketIndicators.
     */
    data: MarketIndicatorsCreateManyInput | MarketIndicatorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MarketIndicators update
   */
  export type MarketIndicatorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * The data needed to update a MarketIndicators.
     */
    data: XOR<MarketIndicatorsUpdateInput, MarketIndicatorsUncheckedUpdateInput>
    /**
     * Choose, which MarketIndicators to update.
     */
    where: MarketIndicatorsWhereUniqueInput
  }

  /**
   * MarketIndicators updateMany
   */
  export type MarketIndicatorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MarketIndicators.
     */
    data: XOR<MarketIndicatorsUpdateManyMutationInput, MarketIndicatorsUncheckedUpdateManyInput>
    /**
     * Filter which MarketIndicators to update
     */
    where?: MarketIndicatorsWhereInput
    /**
     * Limit how many MarketIndicators to update.
     */
    limit?: number
  }

  /**
   * MarketIndicators updateManyAndReturn
   */
  export type MarketIndicatorsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * The data used to update MarketIndicators.
     */
    data: XOR<MarketIndicatorsUpdateManyMutationInput, MarketIndicatorsUncheckedUpdateManyInput>
    /**
     * Filter which MarketIndicators to update
     */
    where?: MarketIndicatorsWhereInput
    /**
     * Limit how many MarketIndicators to update.
     */
    limit?: number
  }

  /**
   * MarketIndicators upsert
   */
  export type MarketIndicatorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * The filter to search for the MarketIndicators to update in case it exists.
     */
    where: MarketIndicatorsWhereUniqueInput
    /**
     * In case the MarketIndicators found by the `where` argument doesn't exist, create a new MarketIndicators with this data.
     */
    create: XOR<MarketIndicatorsCreateInput, MarketIndicatorsUncheckedCreateInput>
    /**
     * In case the MarketIndicators was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarketIndicatorsUpdateInput, MarketIndicatorsUncheckedUpdateInput>
  }

  /**
   * MarketIndicators delete
   */
  export type MarketIndicatorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
    /**
     * Filter which MarketIndicators to delete.
     */
    where: MarketIndicatorsWhereUniqueInput
  }

  /**
   * MarketIndicators deleteMany
   */
  export type MarketIndicatorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarketIndicators to delete
     */
    where?: MarketIndicatorsWhereInput
    /**
     * Limit how many MarketIndicators to delete.
     */
    limit?: number
  }

  /**
   * MarketIndicators without action
   */
  export type MarketIndicatorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketIndicators
     */
    select?: MarketIndicatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MarketIndicators
     */
    omit?: MarketIndicatorsOmit<ExtArgs> | null
  }


  /**
   * Model AlertSettings
   */

  export type AggregateAlertSettings = {
    _count: AlertSettingsCountAggregateOutputType | null
    _avg: AlertSettingsAvgAggregateOutputType | null
    _sum: AlertSettingsSumAggregateOutputType | null
    _min: AlertSettingsMinAggregateOutputType | null
    _max: AlertSettingsMaxAggregateOutputType | null
  }

  export type AlertSettingsAvgAggregateOutputType = {
    id: number | null
    threshold: number | null
    cooldownHours: number | null
    maxAlertsPerDay: number | null
    maxGlobalAlertsPerDay: number | null
  }

  export type AlertSettingsSumAggregateOutputType = {
    id: number | null
    threshold: number | null
    cooldownHours: number | null
    maxAlertsPerDay: number | null
    maxGlobalAlertsPerDay: number | null
  }

  export type AlertSettingsMinAggregateOutputType = {
    id: number | null
    organizationId: string | null
    userId: string | null
    symbol: string | null
    alertType: string | null
    isEnabled: boolean | null
    threshold: number | null
    cooldownHours: number | null
    maxAlertsPerDay: number | null
    maxGlobalAlertsPerDay: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AlertSettingsMaxAggregateOutputType = {
    id: number | null
    organizationId: string | null
    userId: string | null
    symbol: string | null
    alertType: string | null
    isEnabled: boolean | null
    threshold: number | null
    cooldownHours: number | null
    maxAlertsPerDay: number | null
    maxGlobalAlertsPerDay: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AlertSettingsCountAggregateOutputType = {
    id: number
    organizationId: number
    userId: number
    symbol: number
    alertType: number
    isEnabled: number
    threshold: number
    cooldownHours: number
    maxAlertsPerDay: number
    maxGlobalAlertsPerDay: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AlertSettingsAvgAggregateInputType = {
    id?: true
    threshold?: true
    cooldownHours?: true
    maxAlertsPerDay?: true
    maxGlobalAlertsPerDay?: true
  }

  export type AlertSettingsSumAggregateInputType = {
    id?: true
    threshold?: true
    cooldownHours?: true
    maxAlertsPerDay?: true
    maxGlobalAlertsPerDay?: true
  }

  export type AlertSettingsMinAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    symbol?: true
    alertType?: true
    isEnabled?: true
    threshold?: true
    cooldownHours?: true
    maxAlertsPerDay?: true
    maxGlobalAlertsPerDay?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AlertSettingsMaxAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    symbol?: true
    alertType?: true
    isEnabled?: true
    threshold?: true
    cooldownHours?: true
    maxAlertsPerDay?: true
    maxGlobalAlertsPerDay?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AlertSettingsCountAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    symbol?: true
    alertType?: true
    isEnabled?: true
    threshold?: true
    cooldownHours?: true
    maxAlertsPerDay?: true
    maxGlobalAlertsPerDay?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AlertSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlertSettings to aggregate.
     */
    where?: AlertSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertSettings to fetch.
     */
    orderBy?: AlertSettingsOrderByWithRelationInput | AlertSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlertSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AlertSettings
    **/
    _count?: true | AlertSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlertSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlertSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlertSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlertSettingsMaxAggregateInputType
  }

  export type GetAlertSettingsAggregateType<T extends AlertSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateAlertSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlertSettings[P]>
      : GetScalarType<T[P], AggregateAlertSettings[P]>
  }




  export type AlertSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlertSettingsWhereInput
    orderBy?: AlertSettingsOrderByWithAggregationInput | AlertSettingsOrderByWithAggregationInput[]
    by: AlertSettingsScalarFieldEnum[] | AlertSettingsScalarFieldEnum
    having?: AlertSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlertSettingsCountAggregateInputType | true
    _avg?: AlertSettingsAvgAggregateInputType
    _sum?: AlertSettingsSumAggregateInputType
    _min?: AlertSettingsMinAggregateInputType
    _max?: AlertSettingsMaxAggregateInputType
  }

  export type AlertSettingsGroupByOutputType = {
    id: number
    organizationId: string
    userId: string | null
    symbol: string | null
    alertType: string
    isEnabled: boolean
    threshold: number | null
    cooldownHours: number
    maxAlertsPerDay: number
    maxGlobalAlertsPerDay: number
    createdAt: Date
    updatedAt: Date
    _count: AlertSettingsCountAggregateOutputType | null
    _avg: AlertSettingsAvgAggregateOutputType | null
    _sum: AlertSettingsSumAggregateOutputType | null
    _min: AlertSettingsMinAggregateOutputType | null
    _max: AlertSettingsMaxAggregateOutputType | null
  }

  type GetAlertSettingsGroupByPayload<T extends AlertSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlertSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlertSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlertSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], AlertSettingsGroupByOutputType[P]>
        }
      >
    >


  export type AlertSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    symbol?: boolean
    alertType?: boolean
    isEnabled?: boolean
    threshold?: boolean
    cooldownHours?: boolean
    maxAlertsPerDay?: boolean
    maxGlobalAlertsPerDay?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AlertSettings$userArgs<ExtArgs>
  }, ExtArgs["result"]["alertSettings"]>

  export type AlertSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    symbol?: boolean
    alertType?: boolean
    isEnabled?: boolean
    threshold?: boolean
    cooldownHours?: boolean
    maxAlertsPerDay?: boolean
    maxGlobalAlertsPerDay?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AlertSettings$userArgs<ExtArgs>
  }, ExtArgs["result"]["alertSettings"]>

  export type AlertSettingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    symbol?: boolean
    alertType?: boolean
    isEnabled?: boolean
    threshold?: boolean
    cooldownHours?: boolean
    maxAlertsPerDay?: boolean
    maxGlobalAlertsPerDay?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AlertSettings$userArgs<ExtArgs>
  }, ExtArgs["result"]["alertSettings"]>

  export type AlertSettingsSelectScalar = {
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    symbol?: boolean
    alertType?: boolean
    isEnabled?: boolean
    threshold?: boolean
    cooldownHours?: boolean
    maxAlertsPerDay?: boolean
    maxGlobalAlertsPerDay?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AlertSettingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "userId" | "symbol" | "alertType" | "isEnabled" | "threshold" | "cooldownHours" | "maxAlertsPerDay" | "maxGlobalAlertsPerDay" | "createdAt" | "updatedAt", ExtArgs["result"]["alertSettings"]>
  export type AlertSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AlertSettings$userArgs<ExtArgs>
  }
  export type AlertSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AlertSettings$userArgs<ExtArgs>
  }
  export type AlertSettingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | AlertSettings$userArgs<ExtArgs>
  }

  export type $AlertSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AlertSettings"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      organizationId: string
      userId: string | null
      symbol: string | null
      alertType: string
      isEnabled: boolean
      threshold: number | null
      cooldownHours: number
      maxAlertsPerDay: number
      maxGlobalAlertsPerDay: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["alertSettings"]>
    composites: {}
  }

  type AlertSettingsGetPayload<S extends boolean | null | undefined | AlertSettingsDefaultArgs> = $Result.GetResult<Prisma.$AlertSettingsPayload, S>

  type AlertSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlertSettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlertSettingsCountAggregateInputType | true
    }

  export interface AlertSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AlertSettings'], meta: { name: 'AlertSettings' } }
    /**
     * Find zero or one AlertSettings that matches the filter.
     * @param {AlertSettingsFindUniqueArgs} args - Arguments to find a AlertSettings
     * @example
     * // Get one AlertSettings
     * const alertSettings = await prisma.alertSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlertSettingsFindUniqueArgs>(args: SelectSubset<T, AlertSettingsFindUniqueArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AlertSettings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlertSettingsFindUniqueOrThrowArgs} args - Arguments to find a AlertSettings
     * @example
     * // Get one AlertSettings
     * const alertSettings = await prisma.alertSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlertSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, AlertSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AlertSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsFindFirstArgs} args - Arguments to find a AlertSettings
     * @example
     * // Get one AlertSettings
     * const alertSettings = await prisma.alertSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlertSettingsFindFirstArgs>(args?: SelectSubset<T, AlertSettingsFindFirstArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AlertSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsFindFirstOrThrowArgs} args - Arguments to find a AlertSettings
     * @example
     * // Get one AlertSettings
     * const alertSettings = await prisma.alertSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlertSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, AlertSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AlertSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AlertSettings
     * const alertSettings = await prisma.alertSettings.findMany()
     * 
     * // Get first 10 AlertSettings
     * const alertSettings = await prisma.alertSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alertSettingsWithIdOnly = await prisma.alertSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlertSettingsFindManyArgs>(args?: SelectSubset<T, AlertSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AlertSettings.
     * @param {AlertSettingsCreateArgs} args - Arguments to create a AlertSettings.
     * @example
     * // Create one AlertSettings
     * const AlertSettings = await prisma.alertSettings.create({
     *   data: {
     *     // ... data to create a AlertSettings
     *   }
     * })
     * 
     */
    create<T extends AlertSettingsCreateArgs>(args: SelectSubset<T, AlertSettingsCreateArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AlertSettings.
     * @param {AlertSettingsCreateManyArgs} args - Arguments to create many AlertSettings.
     * @example
     * // Create many AlertSettings
     * const alertSettings = await prisma.alertSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlertSettingsCreateManyArgs>(args?: SelectSubset<T, AlertSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AlertSettings and returns the data saved in the database.
     * @param {AlertSettingsCreateManyAndReturnArgs} args - Arguments to create many AlertSettings.
     * @example
     * // Create many AlertSettings
     * const alertSettings = await prisma.alertSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AlertSettings and only return the `id`
     * const alertSettingsWithIdOnly = await prisma.alertSettings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AlertSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, AlertSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AlertSettings.
     * @param {AlertSettingsDeleteArgs} args - Arguments to delete one AlertSettings.
     * @example
     * // Delete one AlertSettings
     * const AlertSettings = await prisma.alertSettings.delete({
     *   where: {
     *     // ... filter to delete one AlertSettings
     *   }
     * })
     * 
     */
    delete<T extends AlertSettingsDeleteArgs>(args: SelectSubset<T, AlertSettingsDeleteArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AlertSettings.
     * @param {AlertSettingsUpdateArgs} args - Arguments to update one AlertSettings.
     * @example
     * // Update one AlertSettings
     * const alertSettings = await prisma.alertSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlertSettingsUpdateArgs>(args: SelectSubset<T, AlertSettingsUpdateArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AlertSettings.
     * @param {AlertSettingsDeleteManyArgs} args - Arguments to filter AlertSettings to delete.
     * @example
     * // Delete a few AlertSettings
     * const { count } = await prisma.alertSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlertSettingsDeleteManyArgs>(args?: SelectSubset<T, AlertSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlertSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AlertSettings
     * const alertSettings = await prisma.alertSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlertSettingsUpdateManyArgs>(args: SelectSubset<T, AlertSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AlertSettings and returns the data updated in the database.
     * @param {AlertSettingsUpdateManyAndReturnArgs} args - Arguments to update many AlertSettings.
     * @example
     * // Update many AlertSettings
     * const alertSettings = await prisma.alertSettings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AlertSettings and only return the `id`
     * const alertSettingsWithIdOnly = await prisma.alertSettings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AlertSettingsUpdateManyAndReturnArgs>(args: SelectSubset<T, AlertSettingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AlertSettings.
     * @param {AlertSettingsUpsertArgs} args - Arguments to update or create a AlertSettings.
     * @example
     * // Update or create a AlertSettings
     * const alertSettings = await prisma.alertSettings.upsert({
     *   create: {
     *     // ... data to create a AlertSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AlertSettings we want to update
     *   }
     * })
     */
    upsert<T extends AlertSettingsUpsertArgs>(args: SelectSubset<T, AlertSettingsUpsertArgs<ExtArgs>>): Prisma__AlertSettingsClient<$Result.GetResult<Prisma.$AlertSettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AlertSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsCountArgs} args - Arguments to filter AlertSettings to count.
     * @example
     * // Count the number of AlertSettings
     * const count = await prisma.alertSettings.count({
     *   where: {
     *     // ... the filter for the AlertSettings we want to count
     *   }
     * })
    **/
    count<T extends AlertSettingsCountArgs>(
      args?: Subset<T, AlertSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlertSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AlertSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlertSettingsAggregateArgs>(args: Subset<T, AlertSettingsAggregateArgs>): Prisma.PrismaPromise<GetAlertSettingsAggregateType<T>>

    /**
     * Group by AlertSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlertSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlertSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlertSettingsGroupByArgs['orderBy'] }
        : { orderBy?: AlertSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlertSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlertSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AlertSettings model
   */
  readonly fields: AlertSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AlertSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlertSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends AlertSettings$userArgs<ExtArgs> = {}>(args?: Subset<T, AlertSettings$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AlertSettings model
   */
  interface AlertSettingsFieldRefs {
    readonly id: FieldRef<"AlertSettings", 'Int'>
    readonly organizationId: FieldRef<"AlertSettings", 'String'>
    readonly userId: FieldRef<"AlertSettings", 'String'>
    readonly symbol: FieldRef<"AlertSettings", 'String'>
    readonly alertType: FieldRef<"AlertSettings", 'String'>
    readonly isEnabled: FieldRef<"AlertSettings", 'Boolean'>
    readonly threshold: FieldRef<"AlertSettings", 'Float'>
    readonly cooldownHours: FieldRef<"AlertSettings", 'Int'>
    readonly maxAlertsPerDay: FieldRef<"AlertSettings", 'Int'>
    readonly maxGlobalAlertsPerDay: FieldRef<"AlertSettings", 'Int'>
    readonly createdAt: FieldRef<"AlertSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"AlertSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AlertSettings findUnique
   */
  export type AlertSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AlertSettings to fetch.
     */
    where: AlertSettingsWhereUniqueInput
  }

  /**
   * AlertSettings findUniqueOrThrow
   */
  export type AlertSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AlertSettings to fetch.
     */
    where: AlertSettingsWhereUniqueInput
  }

  /**
   * AlertSettings findFirst
   */
  export type AlertSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AlertSettings to fetch.
     */
    where?: AlertSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertSettings to fetch.
     */
    orderBy?: AlertSettingsOrderByWithRelationInput | AlertSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlertSettings.
     */
    cursor?: AlertSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlertSettings.
     */
    distinct?: AlertSettingsScalarFieldEnum | AlertSettingsScalarFieldEnum[]
  }

  /**
   * AlertSettings findFirstOrThrow
   */
  export type AlertSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AlertSettings to fetch.
     */
    where?: AlertSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertSettings to fetch.
     */
    orderBy?: AlertSettingsOrderByWithRelationInput | AlertSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AlertSettings.
     */
    cursor?: AlertSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AlertSettings.
     */
    distinct?: AlertSettingsScalarFieldEnum | AlertSettingsScalarFieldEnum[]
  }

  /**
   * AlertSettings findMany
   */
  export type AlertSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AlertSettings to fetch.
     */
    where?: AlertSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AlertSettings to fetch.
     */
    orderBy?: AlertSettingsOrderByWithRelationInput | AlertSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AlertSettings.
     */
    cursor?: AlertSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AlertSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AlertSettings.
     */
    skip?: number
    distinct?: AlertSettingsScalarFieldEnum | AlertSettingsScalarFieldEnum[]
  }

  /**
   * AlertSettings create
   */
  export type AlertSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a AlertSettings.
     */
    data: XOR<AlertSettingsCreateInput, AlertSettingsUncheckedCreateInput>
  }

  /**
   * AlertSettings createMany
   */
  export type AlertSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AlertSettings.
     */
    data: AlertSettingsCreateManyInput | AlertSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AlertSettings createManyAndReturn
   */
  export type AlertSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * The data used to create many AlertSettings.
     */
    data: AlertSettingsCreateManyInput | AlertSettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AlertSettings update
   */
  export type AlertSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a AlertSettings.
     */
    data: XOR<AlertSettingsUpdateInput, AlertSettingsUncheckedUpdateInput>
    /**
     * Choose, which AlertSettings to update.
     */
    where: AlertSettingsWhereUniqueInput
  }

  /**
   * AlertSettings updateMany
   */
  export type AlertSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AlertSettings.
     */
    data: XOR<AlertSettingsUpdateManyMutationInput, AlertSettingsUncheckedUpdateManyInput>
    /**
     * Filter which AlertSettings to update
     */
    where?: AlertSettingsWhereInput
    /**
     * Limit how many AlertSettings to update.
     */
    limit?: number
  }

  /**
   * AlertSettings updateManyAndReturn
   */
  export type AlertSettingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * The data used to update AlertSettings.
     */
    data: XOR<AlertSettingsUpdateManyMutationInput, AlertSettingsUncheckedUpdateManyInput>
    /**
     * Filter which AlertSettings to update
     */
    where?: AlertSettingsWhereInput
    /**
     * Limit how many AlertSettings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AlertSettings upsert
   */
  export type AlertSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the AlertSettings to update in case it exists.
     */
    where: AlertSettingsWhereUniqueInput
    /**
     * In case the AlertSettings found by the `where` argument doesn't exist, create a new AlertSettings with this data.
     */
    create: XOR<AlertSettingsCreateInput, AlertSettingsUncheckedCreateInput>
    /**
     * In case the AlertSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlertSettingsUpdateInput, AlertSettingsUncheckedUpdateInput>
  }

  /**
   * AlertSettings delete
   */
  export type AlertSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
    /**
     * Filter which AlertSettings to delete.
     */
    where: AlertSettingsWhereUniqueInput
  }

  /**
   * AlertSettings deleteMany
   */
  export type AlertSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AlertSettings to delete
     */
    where?: AlertSettingsWhereInput
    /**
     * Limit how many AlertSettings to delete.
     */
    limit?: number
  }

  /**
   * AlertSettings.user
   */
  export type AlertSettings$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AlertSettings without action
   */
  export type AlertSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlertSettings
     */
    select?: AlertSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AlertSettings
     */
    omit?: AlertSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlertSettingsInclude<ExtArgs> | null
  }


  /**
   * Model AIProviderSettings
   */

  export type AggregateAIProviderSettings = {
    _count: AIProviderSettingsCountAggregateOutputType | null
    _avg: AIProviderSettingsAvgAggregateOutputType | null
    _sum: AIProviderSettingsSumAggregateOutputType | null
    _min: AIProviderSettingsMinAggregateOutputType | null
    _max: AIProviderSettingsMaxAggregateOutputType | null
  }

  export type AIProviderSettingsAvgAggregateOutputType = {
    temperature: number | null
    maxTokens: number | null
    topP: number | null
    frequencyPenalty: number | null
    presencePenalty: number | null
  }

  export type AIProviderSettingsSumAggregateOutputType = {
    temperature: number | null
    maxTokens: number | null
    topP: number | null
    frequencyPenalty: number | null
    presencePenalty: number | null
  }

  export type AIProviderSettingsMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    provider: $Enums.AIProvider | null
    apiKey: string | null
    model: string | null
    temperature: number | null
    maxTokens: number | null
    topP: number | null
    frequencyPenalty: number | null
    presencePenalty: number | null
    isDefault: boolean | null
    isActive: boolean | null
    lastUsed: Date | null
    lastModified: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AIProviderSettingsMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    provider: $Enums.AIProvider | null
    apiKey: string | null
    model: string | null
    temperature: number | null
    maxTokens: number | null
    topP: number | null
    frequencyPenalty: number | null
    presencePenalty: number | null
    isDefault: boolean | null
    isActive: boolean | null
    lastUsed: Date | null
    lastModified: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AIProviderSettingsCountAggregateOutputType = {
    id: number
    organizationId: number
    userId: number
    provider: number
    apiKey: number
    model: number
    temperature: number
    maxTokens: number
    topP: number
    frequencyPenalty: number
    presencePenalty: number
    advancedSettings: number
    isDefault: number
    isActive: number
    lastUsed: number
    lastModified: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AIProviderSettingsAvgAggregateInputType = {
    temperature?: true
    maxTokens?: true
    topP?: true
    frequencyPenalty?: true
    presencePenalty?: true
  }

  export type AIProviderSettingsSumAggregateInputType = {
    temperature?: true
    maxTokens?: true
    topP?: true
    frequencyPenalty?: true
    presencePenalty?: true
  }

  export type AIProviderSettingsMinAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    provider?: true
    apiKey?: true
    model?: true
    temperature?: true
    maxTokens?: true
    topP?: true
    frequencyPenalty?: true
    presencePenalty?: true
    isDefault?: true
    isActive?: true
    lastUsed?: true
    lastModified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AIProviderSettingsMaxAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    provider?: true
    apiKey?: true
    model?: true
    temperature?: true
    maxTokens?: true
    topP?: true
    frequencyPenalty?: true
    presencePenalty?: true
    isDefault?: true
    isActive?: true
    lastUsed?: true
    lastModified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AIProviderSettingsCountAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    provider?: true
    apiKey?: true
    model?: true
    temperature?: true
    maxTokens?: true
    topP?: true
    frequencyPenalty?: true
    presencePenalty?: true
    advancedSettings?: true
    isDefault?: true
    isActive?: true
    lastUsed?: true
    lastModified?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AIProviderSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIProviderSettings to aggregate.
     */
    where?: AIProviderSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIProviderSettings to fetch.
     */
    orderBy?: AIProviderSettingsOrderByWithRelationInput | AIProviderSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AIProviderSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIProviderSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIProviderSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AIProviderSettings
    **/
    _count?: true | AIProviderSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AIProviderSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AIProviderSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AIProviderSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AIProviderSettingsMaxAggregateInputType
  }

  export type GetAIProviderSettingsAggregateType<T extends AIProviderSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateAIProviderSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAIProviderSettings[P]>
      : GetScalarType<T[P], AggregateAIProviderSettings[P]>
  }




  export type AIProviderSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIProviderSettingsWhereInput
    orderBy?: AIProviderSettingsOrderByWithAggregationInput | AIProviderSettingsOrderByWithAggregationInput[]
    by: AIProviderSettingsScalarFieldEnum[] | AIProviderSettingsScalarFieldEnum
    having?: AIProviderSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AIProviderSettingsCountAggregateInputType | true
    _avg?: AIProviderSettingsAvgAggregateInputType
    _sum?: AIProviderSettingsSumAggregateInputType
    _min?: AIProviderSettingsMinAggregateInputType
    _max?: AIProviderSettingsMaxAggregateInputType
  }

  export type AIProviderSettingsGroupByOutputType = {
    id: string
    organizationId: string
    userId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature: number
    maxTokens: number
    topP: number
    frequencyPenalty: number
    presencePenalty: number
    advancedSettings: JsonValue | null
    isDefault: boolean
    isActive: boolean
    lastUsed: Date | null
    lastModified: Date
    createdAt: Date
    updatedAt: Date
    _count: AIProviderSettingsCountAggregateOutputType | null
    _avg: AIProviderSettingsAvgAggregateOutputType | null
    _sum: AIProviderSettingsSumAggregateOutputType | null
    _min: AIProviderSettingsMinAggregateOutputType | null
    _max: AIProviderSettingsMaxAggregateOutputType | null
  }

  type GetAIProviderSettingsGroupByPayload<T extends AIProviderSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AIProviderSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AIProviderSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AIProviderSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], AIProviderSettingsGroupByOutputType[P]>
        }
      >
    >


  export type AIProviderSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    provider?: boolean
    apiKey?: boolean
    model?: boolean
    temperature?: boolean
    maxTokens?: boolean
    topP?: boolean
    frequencyPenalty?: boolean
    presencePenalty?: boolean
    advancedSettings?: boolean
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aIProviderSettings"]>

  export type AIProviderSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    provider?: boolean
    apiKey?: boolean
    model?: boolean
    temperature?: boolean
    maxTokens?: boolean
    topP?: boolean
    frequencyPenalty?: boolean
    presencePenalty?: boolean
    advancedSettings?: boolean
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aIProviderSettings"]>

  export type AIProviderSettingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    provider?: boolean
    apiKey?: boolean
    model?: boolean
    temperature?: boolean
    maxTokens?: boolean
    topP?: boolean
    frequencyPenalty?: boolean
    presencePenalty?: boolean
    advancedSettings?: boolean
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aIProviderSettings"]>

  export type AIProviderSettingsSelectScalar = {
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    provider?: boolean
    apiKey?: boolean
    model?: boolean
    temperature?: boolean
    maxTokens?: boolean
    topP?: boolean
    frequencyPenalty?: boolean
    presencePenalty?: boolean
    advancedSettings?: boolean
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AIProviderSettingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "userId" | "provider" | "apiKey" | "model" | "temperature" | "maxTokens" | "topP" | "frequencyPenalty" | "presencePenalty" | "advancedSettings" | "isDefault" | "isActive" | "lastUsed" | "lastModified" | "createdAt" | "updatedAt", ExtArgs["result"]["aIProviderSettings"]>
  export type AIProviderSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AIProviderSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AIProviderSettingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AIProviderSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AIProviderSettings"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      userId: string
      provider: $Enums.AIProvider
      apiKey: string
      model: string
      temperature: number
      maxTokens: number
      topP: number
      frequencyPenalty: number
      presencePenalty: number
      advancedSettings: Prisma.JsonValue | null
      isDefault: boolean
      isActive: boolean
      lastUsed: Date | null
      lastModified: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["aIProviderSettings"]>
    composites: {}
  }

  type AIProviderSettingsGetPayload<S extends boolean | null | undefined | AIProviderSettingsDefaultArgs> = $Result.GetResult<Prisma.$AIProviderSettingsPayload, S>

  type AIProviderSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AIProviderSettingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AIProviderSettingsCountAggregateInputType | true
    }

  export interface AIProviderSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AIProviderSettings'], meta: { name: 'AIProviderSettings' } }
    /**
     * Find zero or one AIProviderSettings that matches the filter.
     * @param {AIProviderSettingsFindUniqueArgs} args - Arguments to find a AIProviderSettings
     * @example
     * // Get one AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AIProviderSettingsFindUniqueArgs>(args: SelectSubset<T, AIProviderSettingsFindUniqueArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AIProviderSettings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AIProviderSettingsFindUniqueOrThrowArgs} args - Arguments to find a AIProviderSettings
     * @example
     * // Get one AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AIProviderSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, AIProviderSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AIProviderSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsFindFirstArgs} args - Arguments to find a AIProviderSettings
     * @example
     * // Get one AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AIProviderSettingsFindFirstArgs>(args?: SelectSubset<T, AIProviderSettingsFindFirstArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AIProviderSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsFindFirstOrThrowArgs} args - Arguments to find a AIProviderSettings
     * @example
     * // Get one AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AIProviderSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, AIProviderSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AIProviderSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.findMany()
     * 
     * // Get first 10 AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aIProviderSettingsWithIdOnly = await prisma.aIProviderSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AIProviderSettingsFindManyArgs>(args?: SelectSubset<T, AIProviderSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AIProviderSettings.
     * @param {AIProviderSettingsCreateArgs} args - Arguments to create a AIProviderSettings.
     * @example
     * // Create one AIProviderSettings
     * const AIProviderSettings = await prisma.aIProviderSettings.create({
     *   data: {
     *     // ... data to create a AIProviderSettings
     *   }
     * })
     * 
     */
    create<T extends AIProviderSettingsCreateArgs>(args: SelectSubset<T, AIProviderSettingsCreateArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AIProviderSettings.
     * @param {AIProviderSettingsCreateManyArgs} args - Arguments to create many AIProviderSettings.
     * @example
     * // Create many AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AIProviderSettingsCreateManyArgs>(args?: SelectSubset<T, AIProviderSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AIProviderSettings and returns the data saved in the database.
     * @param {AIProviderSettingsCreateManyAndReturnArgs} args - Arguments to create many AIProviderSettings.
     * @example
     * // Create many AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AIProviderSettings and only return the `id`
     * const aIProviderSettingsWithIdOnly = await prisma.aIProviderSettings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AIProviderSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, AIProviderSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AIProviderSettings.
     * @param {AIProviderSettingsDeleteArgs} args - Arguments to delete one AIProviderSettings.
     * @example
     * // Delete one AIProviderSettings
     * const AIProviderSettings = await prisma.aIProviderSettings.delete({
     *   where: {
     *     // ... filter to delete one AIProviderSettings
     *   }
     * })
     * 
     */
    delete<T extends AIProviderSettingsDeleteArgs>(args: SelectSubset<T, AIProviderSettingsDeleteArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AIProviderSettings.
     * @param {AIProviderSettingsUpdateArgs} args - Arguments to update one AIProviderSettings.
     * @example
     * // Update one AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AIProviderSettingsUpdateArgs>(args: SelectSubset<T, AIProviderSettingsUpdateArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AIProviderSettings.
     * @param {AIProviderSettingsDeleteManyArgs} args - Arguments to filter AIProviderSettings to delete.
     * @example
     * // Delete a few AIProviderSettings
     * const { count } = await prisma.aIProviderSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AIProviderSettingsDeleteManyArgs>(args?: SelectSubset<T, AIProviderSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AIProviderSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AIProviderSettingsUpdateManyArgs>(args: SelectSubset<T, AIProviderSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AIProviderSettings and returns the data updated in the database.
     * @param {AIProviderSettingsUpdateManyAndReturnArgs} args - Arguments to update many AIProviderSettings.
     * @example
     * // Update many AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AIProviderSettings and only return the `id`
     * const aIProviderSettingsWithIdOnly = await prisma.aIProviderSettings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AIProviderSettingsUpdateManyAndReturnArgs>(args: SelectSubset<T, AIProviderSettingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AIProviderSettings.
     * @param {AIProviderSettingsUpsertArgs} args - Arguments to update or create a AIProviderSettings.
     * @example
     * // Update or create a AIProviderSettings
     * const aIProviderSettings = await prisma.aIProviderSettings.upsert({
     *   create: {
     *     // ... data to create a AIProviderSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AIProviderSettings we want to update
     *   }
     * })
     */
    upsert<T extends AIProviderSettingsUpsertArgs>(args: SelectSubset<T, AIProviderSettingsUpsertArgs<ExtArgs>>): Prisma__AIProviderSettingsClient<$Result.GetResult<Prisma.$AIProviderSettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AIProviderSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsCountArgs} args - Arguments to filter AIProviderSettings to count.
     * @example
     * // Count the number of AIProviderSettings
     * const count = await prisma.aIProviderSettings.count({
     *   where: {
     *     // ... the filter for the AIProviderSettings we want to count
     *   }
     * })
    **/
    count<T extends AIProviderSettingsCountArgs>(
      args?: Subset<T, AIProviderSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AIProviderSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AIProviderSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AIProviderSettingsAggregateArgs>(args: Subset<T, AIProviderSettingsAggregateArgs>): Prisma.PrismaPromise<GetAIProviderSettingsAggregateType<T>>

    /**
     * Group by AIProviderSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIProviderSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AIProviderSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AIProviderSettingsGroupByArgs['orderBy'] }
        : { orderBy?: AIProviderSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AIProviderSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAIProviderSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AIProviderSettings model
   */
  readonly fields: AIProviderSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AIProviderSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AIProviderSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AIProviderSettings model
   */
  interface AIProviderSettingsFieldRefs {
    readonly id: FieldRef<"AIProviderSettings", 'String'>
    readonly organizationId: FieldRef<"AIProviderSettings", 'String'>
    readonly userId: FieldRef<"AIProviderSettings", 'String'>
    readonly provider: FieldRef<"AIProviderSettings", 'AIProvider'>
    readonly apiKey: FieldRef<"AIProviderSettings", 'String'>
    readonly model: FieldRef<"AIProviderSettings", 'String'>
    readonly temperature: FieldRef<"AIProviderSettings", 'Float'>
    readonly maxTokens: FieldRef<"AIProviderSettings", 'Int'>
    readonly topP: FieldRef<"AIProviderSettings", 'Float'>
    readonly frequencyPenalty: FieldRef<"AIProviderSettings", 'Float'>
    readonly presencePenalty: FieldRef<"AIProviderSettings", 'Float'>
    readonly advancedSettings: FieldRef<"AIProviderSettings", 'Json'>
    readonly isDefault: FieldRef<"AIProviderSettings", 'Boolean'>
    readonly isActive: FieldRef<"AIProviderSettings", 'Boolean'>
    readonly lastUsed: FieldRef<"AIProviderSettings", 'DateTime'>
    readonly lastModified: FieldRef<"AIProviderSettings", 'DateTime'>
    readonly createdAt: FieldRef<"AIProviderSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"AIProviderSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AIProviderSettings findUnique
   */
  export type AIProviderSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AIProviderSettings to fetch.
     */
    where: AIProviderSettingsWhereUniqueInput
  }

  /**
   * AIProviderSettings findUniqueOrThrow
   */
  export type AIProviderSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AIProviderSettings to fetch.
     */
    where: AIProviderSettingsWhereUniqueInput
  }

  /**
   * AIProviderSettings findFirst
   */
  export type AIProviderSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AIProviderSettings to fetch.
     */
    where?: AIProviderSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIProviderSettings to fetch.
     */
    orderBy?: AIProviderSettingsOrderByWithRelationInput | AIProviderSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIProviderSettings.
     */
    cursor?: AIProviderSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIProviderSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIProviderSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIProviderSettings.
     */
    distinct?: AIProviderSettingsScalarFieldEnum | AIProviderSettingsScalarFieldEnum[]
  }

  /**
   * AIProviderSettings findFirstOrThrow
   */
  export type AIProviderSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AIProviderSettings to fetch.
     */
    where?: AIProviderSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIProviderSettings to fetch.
     */
    orderBy?: AIProviderSettingsOrderByWithRelationInput | AIProviderSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIProviderSettings.
     */
    cursor?: AIProviderSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIProviderSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIProviderSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIProviderSettings.
     */
    distinct?: AIProviderSettingsScalarFieldEnum | AIProviderSettingsScalarFieldEnum[]
  }

  /**
   * AIProviderSettings findMany
   */
  export type AIProviderSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * Filter, which AIProviderSettings to fetch.
     */
    where?: AIProviderSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIProviderSettings to fetch.
     */
    orderBy?: AIProviderSettingsOrderByWithRelationInput | AIProviderSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AIProviderSettings.
     */
    cursor?: AIProviderSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIProviderSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIProviderSettings.
     */
    skip?: number
    distinct?: AIProviderSettingsScalarFieldEnum | AIProviderSettingsScalarFieldEnum[]
  }

  /**
   * AIProviderSettings create
   */
  export type AIProviderSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a AIProviderSettings.
     */
    data: XOR<AIProviderSettingsCreateInput, AIProviderSettingsUncheckedCreateInput>
  }

  /**
   * AIProviderSettings createMany
   */
  export type AIProviderSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AIProviderSettings.
     */
    data: AIProviderSettingsCreateManyInput | AIProviderSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AIProviderSettings createManyAndReturn
   */
  export type AIProviderSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * The data used to create many AIProviderSettings.
     */
    data: AIProviderSettingsCreateManyInput | AIProviderSettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AIProviderSettings update
   */
  export type AIProviderSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a AIProviderSettings.
     */
    data: XOR<AIProviderSettingsUpdateInput, AIProviderSettingsUncheckedUpdateInput>
    /**
     * Choose, which AIProviderSettings to update.
     */
    where: AIProviderSettingsWhereUniqueInput
  }

  /**
   * AIProviderSettings updateMany
   */
  export type AIProviderSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AIProviderSettings.
     */
    data: XOR<AIProviderSettingsUpdateManyMutationInput, AIProviderSettingsUncheckedUpdateManyInput>
    /**
     * Filter which AIProviderSettings to update
     */
    where?: AIProviderSettingsWhereInput
    /**
     * Limit how many AIProviderSettings to update.
     */
    limit?: number
  }

  /**
   * AIProviderSettings updateManyAndReturn
   */
  export type AIProviderSettingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * The data used to update AIProviderSettings.
     */
    data: XOR<AIProviderSettingsUpdateManyMutationInput, AIProviderSettingsUncheckedUpdateManyInput>
    /**
     * Filter which AIProviderSettings to update
     */
    where?: AIProviderSettingsWhereInput
    /**
     * Limit how many AIProviderSettings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AIProviderSettings upsert
   */
  export type AIProviderSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the AIProviderSettings to update in case it exists.
     */
    where: AIProviderSettingsWhereUniqueInput
    /**
     * In case the AIProviderSettings found by the `where` argument doesn't exist, create a new AIProviderSettings with this data.
     */
    create: XOR<AIProviderSettingsCreateInput, AIProviderSettingsUncheckedCreateInput>
    /**
     * In case the AIProviderSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AIProviderSettingsUpdateInput, AIProviderSettingsUncheckedUpdateInput>
  }

  /**
   * AIProviderSettings delete
   */
  export type AIProviderSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
    /**
     * Filter which AIProviderSettings to delete.
     */
    where: AIProviderSettingsWhereUniqueInput
  }

  /**
   * AIProviderSettings deleteMany
   */
  export type AIProviderSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIProviderSettings to delete
     */
    where?: AIProviderSettingsWhereInput
    /**
     * Limit how many AIProviderSettings to delete.
     */
    limit?: number
  }

  /**
   * AIProviderSettings without action
   */
  export type AIProviderSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIProviderSettings
     */
    select?: AIProviderSettingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIProviderSettings
     */
    omit?: AIProviderSettingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIProviderSettingsInclude<ExtArgs> | null
  }


  /**
   * Model SystemMetrics
   */

  export type AggregateSystemMetrics = {
    _count: SystemMetricsCountAggregateOutputType | null
    _avg: SystemMetricsAvgAggregateOutputType | null
    _sum: SystemMetricsSumAggregateOutputType | null
    _min: SystemMetricsMinAggregateOutputType | null
    _max: SystemMetricsMaxAggregateOutputType | null
  }

  export type SystemMetricsAvgAggregateOutputType = {
    articlesGenerated: number | null
    templatesUsed: number | null
    newsProcessed: number | null
    alertsTriggered: number | null
    apiRequests: number | null
    aiTokensUsed: number | null
    systemUptime: number | null
    avgResponseTime: number | null
    errorCount: number | null
  }

  export type SystemMetricsSumAggregateOutputType = {
    articlesGenerated: number | null
    templatesUsed: number | null
    newsProcessed: number | null
    alertsTriggered: number | null
    apiRequests: number | null
    aiTokensUsed: number | null
    systemUptime: number | null
    avgResponseTime: number | null
    errorCount: number | null
  }

  export type SystemMetricsMinAggregateOutputType = {
    id: string | null
    date: Date | null
    articlesGenerated: number | null
    templatesUsed: number | null
    newsProcessed: number | null
    alertsTriggered: number | null
    apiRequests: number | null
    aiTokensUsed: number | null
    systemUptime: number | null
    avgResponseTime: number | null
    errorCount: number | null
    createdAt: Date | null
  }

  export type SystemMetricsMaxAggregateOutputType = {
    id: string | null
    date: Date | null
    articlesGenerated: number | null
    templatesUsed: number | null
    newsProcessed: number | null
    alertsTriggered: number | null
    apiRequests: number | null
    aiTokensUsed: number | null
    systemUptime: number | null
    avgResponseTime: number | null
    errorCount: number | null
    createdAt: Date | null
  }

  export type SystemMetricsCountAggregateOutputType = {
    id: number
    date: number
    articlesGenerated: number
    templatesUsed: number
    newsProcessed: number
    alertsTriggered: number
    apiRequests: number
    aiTokensUsed: number
    systemUptime: number
    avgResponseTime: number
    errorCount: number
    createdAt: number
    _all: number
  }


  export type SystemMetricsAvgAggregateInputType = {
    articlesGenerated?: true
    templatesUsed?: true
    newsProcessed?: true
    alertsTriggered?: true
    apiRequests?: true
    aiTokensUsed?: true
    systemUptime?: true
    avgResponseTime?: true
    errorCount?: true
  }

  export type SystemMetricsSumAggregateInputType = {
    articlesGenerated?: true
    templatesUsed?: true
    newsProcessed?: true
    alertsTriggered?: true
    apiRequests?: true
    aiTokensUsed?: true
    systemUptime?: true
    avgResponseTime?: true
    errorCount?: true
  }

  export type SystemMetricsMinAggregateInputType = {
    id?: true
    date?: true
    articlesGenerated?: true
    templatesUsed?: true
    newsProcessed?: true
    alertsTriggered?: true
    apiRequests?: true
    aiTokensUsed?: true
    systemUptime?: true
    avgResponseTime?: true
    errorCount?: true
    createdAt?: true
  }

  export type SystemMetricsMaxAggregateInputType = {
    id?: true
    date?: true
    articlesGenerated?: true
    templatesUsed?: true
    newsProcessed?: true
    alertsTriggered?: true
    apiRequests?: true
    aiTokensUsed?: true
    systemUptime?: true
    avgResponseTime?: true
    errorCount?: true
    createdAt?: true
  }

  export type SystemMetricsCountAggregateInputType = {
    id?: true
    date?: true
    articlesGenerated?: true
    templatesUsed?: true
    newsProcessed?: true
    alertsTriggered?: true
    apiRequests?: true
    aiTokensUsed?: true
    systemUptime?: true
    avgResponseTime?: true
    errorCount?: true
    createdAt?: true
    _all?: true
  }

  export type SystemMetricsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemMetrics to aggregate.
     */
    where?: SystemMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemMetrics to fetch.
     */
    orderBy?: SystemMetricsOrderByWithRelationInput | SystemMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemMetrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SystemMetrics
    **/
    _count?: true | SystemMetricsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SystemMetricsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SystemMetricsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemMetricsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemMetricsMaxAggregateInputType
  }

  export type GetSystemMetricsAggregateType<T extends SystemMetricsAggregateArgs> = {
        [P in keyof T & keyof AggregateSystemMetrics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystemMetrics[P]>
      : GetScalarType<T[P], AggregateSystemMetrics[P]>
  }




  export type SystemMetricsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemMetricsWhereInput
    orderBy?: SystemMetricsOrderByWithAggregationInput | SystemMetricsOrderByWithAggregationInput[]
    by: SystemMetricsScalarFieldEnum[] | SystemMetricsScalarFieldEnum
    having?: SystemMetricsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemMetricsCountAggregateInputType | true
    _avg?: SystemMetricsAvgAggregateInputType
    _sum?: SystemMetricsSumAggregateInputType
    _min?: SystemMetricsMinAggregateInputType
    _max?: SystemMetricsMaxAggregateInputType
  }

  export type SystemMetricsGroupByOutputType = {
    id: string
    date: Date
    articlesGenerated: number
    templatesUsed: number
    newsProcessed: number
    alertsTriggered: number
    apiRequests: number
    aiTokensUsed: number
    systemUptime: number
    avgResponseTime: number
    errorCount: number
    createdAt: Date
    _count: SystemMetricsCountAggregateOutputType | null
    _avg: SystemMetricsAvgAggregateOutputType | null
    _sum: SystemMetricsSumAggregateOutputType | null
    _min: SystemMetricsMinAggregateOutputType | null
    _max: SystemMetricsMaxAggregateOutputType | null
  }

  type GetSystemMetricsGroupByPayload<T extends SystemMetricsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemMetricsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemMetricsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemMetricsGroupByOutputType[P]>
            : GetScalarType<T[P], SystemMetricsGroupByOutputType[P]>
        }
      >
    >


  export type SystemMetricsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    articlesGenerated?: boolean
    templatesUsed?: boolean
    newsProcessed?: boolean
    alertsTriggered?: boolean
    apiRequests?: boolean
    aiTokensUsed?: boolean
    systemUptime?: boolean
    avgResponseTime?: boolean
    errorCount?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["systemMetrics"]>

  export type SystemMetricsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    articlesGenerated?: boolean
    templatesUsed?: boolean
    newsProcessed?: boolean
    alertsTriggered?: boolean
    apiRequests?: boolean
    aiTokensUsed?: boolean
    systemUptime?: boolean
    avgResponseTime?: boolean
    errorCount?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["systemMetrics"]>

  export type SystemMetricsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    articlesGenerated?: boolean
    templatesUsed?: boolean
    newsProcessed?: boolean
    alertsTriggered?: boolean
    apiRequests?: boolean
    aiTokensUsed?: boolean
    systemUptime?: boolean
    avgResponseTime?: boolean
    errorCount?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["systemMetrics"]>

  export type SystemMetricsSelectScalar = {
    id?: boolean
    date?: boolean
    articlesGenerated?: boolean
    templatesUsed?: boolean
    newsProcessed?: boolean
    alertsTriggered?: boolean
    apiRequests?: boolean
    aiTokensUsed?: boolean
    systemUptime?: boolean
    avgResponseTime?: boolean
    errorCount?: boolean
    createdAt?: boolean
  }

  export type SystemMetricsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "date" | "articlesGenerated" | "templatesUsed" | "newsProcessed" | "alertsTriggered" | "apiRequests" | "aiTokensUsed" | "systemUptime" | "avgResponseTime" | "errorCount" | "createdAt", ExtArgs["result"]["systemMetrics"]>

  export type $SystemMetricsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SystemMetrics"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      date: Date
      articlesGenerated: number
      templatesUsed: number
      newsProcessed: number
      alertsTriggered: number
      apiRequests: number
      aiTokensUsed: number
      systemUptime: number
      avgResponseTime: number
      errorCount: number
      createdAt: Date
    }, ExtArgs["result"]["systemMetrics"]>
    composites: {}
  }

  type SystemMetricsGetPayload<S extends boolean | null | undefined | SystemMetricsDefaultArgs> = $Result.GetResult<Prisma.$SystemMetricsPayload, S>

  type SystemMetricsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SystemMetricsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SystemMetricsCountAggregateInputType | true
    }

  export interface SystemMetricsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SystemMetrics'], meta: { name: 'SystemMetrics' } }
    /**
     * Find zero or one SystemMetrics that matches the filter.
     * @param {SystemMetricsFindUniqueArgs} args - Arguments to find a SystemMetrics
     * @example
     * // Get one SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemMetricsFindUniqueArgs>(args: SelectSubset<T, SystemMetricsFindUniqueArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SystemMetrics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SystemMetricsFindUniqueOrThrowArgs} args - Arguments to find a SystemMetrics
     * @example
     * // Get one SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemMetricsFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemMetricsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SystemMetrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsFindFirstArgs} args - Arguments to find a SystemMetrics
     * @example
     * // Get one SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemMetricsFindFirstArgs>(args?: SelectSubset<T, SystemMetricsFindFirstArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SystemMetrics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsFindFirstOrThrowArgs} args - Arguments to find a SystemMetrics
     * @example
     * // Get one SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemMetricsFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemMetricsFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SystemMetrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.findMany()
     * 
     * // Get first 10 SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemMetricsWithIdOnly = await prisma.systemMetrics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemMetricsFindManyArgs>(args?: SelectSubset<T, SystemMetricsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SystemMetrics.
     * @param {SystemMetricsCreateArgs} args - Arguments to create a SystemMetrics.
     * @example
     * // Create one SystemMetrics
     * const SystemMetrics = await prisma.systemMetrics.create({
     *   data: {
     *     // ... data to create a SystemMetrics
     *   }
     * })
     * 
     */
    create<T extends SystemMetricsCreateArgs>(args: SelectSubset<T, SystemMetricsCreateArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SystemMetrics.
     * @param {SystemMetricsCreateManyArgs} args - Arguments to create many SystemMetrics.
     * @example
     * // Create many SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemMetricsCreateManyArgs>(args?: SelectSubset<T, SystemMetricsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SystemMetrics and returns the data saved in the database.
     * @param {SystemMetricsCreateManyAndReturnArgs} args - Arguments to create many SystemMetrics.
     * @example
     * // Create many SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SystemMetrics and only return the `id`
     * const systemMetricsWithIdOnly = await prisma.systemMetrics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SystemMetricsCreateManyAndReturnArgs>(args?: SelectSubset<T, SystemMetricsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SystemMetrics.
     * @param {SystemMetricsDeleteArgs} args - Arguments to delete one SystemMetrics.
     * @example
     * // Delete one SystemMetrics
     * const SystemMetrics = await prisma.systemMetrics.delete({
     *   where: {
     *     // ... filter to delete one SystemMetrics
     *   }
     * })
     * 
     */
    delete<T extends SystemMetricsDeleteArgs>(args: SelectSubset<T, SystemMetricsDeleteArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SystemMetrics.
     * @param {SystemMetricsUpdateArgs} args - Arguments to update one SystemMetrics.
     * @example
     * // Update one SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemMetricsUpdateArgs>(args: SelectSubset<T, SystemMetricsUpdateArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SystemMetrics.
     * @param {SystemMetricsDeleteManyArgs} args - Arguments to filter SystemMetrics to delete.
     * @example
     * // Delete a few SystemMetrics
     * const { count } = await prisma.systemMetrics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemMetricsDeleteManyArgs>(args?: SelectSubset<T, SystemMetricsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemMetricsUpdateManyArgs>(args: SelectSubset<T, SystemMetricsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SystemMetrics and returns the data updated in the database.
     * @param {SystemMetricsUpdateManyAndReturnArgs} args - Arguments to update many SystemMetrics.
     * @example
     * // Update many SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SystemMetrics and only return the `id`
     * const systemMetricsWithIdOnly = await prisma.systemMetrics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SystemMetricsUpdateManyAndReturnArgs>(args: SelectSubset<T, SystemMetricsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SystemMetrics.
     * @param {SystemMetricsUpsertArgs} args - Arguments to update or create a SystemMetrics.
     * @example
     * // Update or create a SystemMetrics
     * const systemMetrics = await prisma.systemMetrics.upsert({
     *   create: {
     *     // ... data to create a SystemMetrics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SystemMetrics we want to update
     *   }
     * })
     */
    upsert<T extends SystemMetricsUpsertArgs>(args: SelectSubset<T, SystemMetricsUpsertArgs<ExtArgs>>): Prisma__SystemMetricsClient<$Result.GetResult<Prisma.$SystemMetricsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SystemMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsCountArgs} args - Arguments to filter SystemMetrics to count.
     * @example
     * // Count the number of SystemMetrics
     * const count = await prisma.systemMetrics.count({
     *   where: {
     *     // ... the filter for the SystemMetrics we want to count
     *   }
     * })
    **/
    count<T extends SystemMetricsCountArgs>(
      args?: Subset<T, SystemMetricsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemMetricsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SystemMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemMetricsAggregateArgs>(args: Subset<T, SystemMetricsAggregateArgs>): Prisma.PrismaPromise<GetSystemMetricsAggregateType<T>>

    /**
     * Group by SystemMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemMetricsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemMetricsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemMetricsGroupByArgs['orderBy'] }
        : { orderBy?: SystemMetricsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemMetricsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemMetricsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SystemMetrics model
   */
  readonly fields: SystemMetricsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SystemMetrics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemMetricsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SystemMetrics model
   */
  interface SystemMetricsFieldRefs {
    readonly id: FieldRef<"SystemMetrics", 'String'>
    readonly date: FieldRef<"SystemMetrics", 'DateTime'>
    readonly articlesGenerated: FieldRef<"SystemMetrics", 'Int'>
    readonly templatesUsed: FieldRef<"SystemMetrics", 'Int'>
    readonly newsProcessed: FieldRef<"SystemMetrics", 'Int'>
    readonly alertsTriggered: FieldRef<"SystemMetrics", 'Int'>
    readonly apiRequests: FieldRef<"SystemMetrics", 'Int'>
    readonly aiTokensUsed: FieldRef<"SystemMetrics", 'Int'>
    readonly systemUptime: FieldRef<"SystemMetrics", 'Float'>
    readonly avgResponseTime: FieldRef<"SystemMetrics", 'Float'>
    readonly errorCount: FieldRef<"SystemMetrics", 'Int'>
    readonly createdAt: FieldRef<"SystemMetrics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SystemMetrics findUnique
   */
  export type SystemMetricsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * Filter, which SystemMetrics to fetch.
     */
    where: SystemMetricsWhereUniqueInput
  }

  /**
   * SystemMetrics findUniqueOrThrow
   */
  export type SystemMetricsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * Filter, which SystemMetrics to fetch.
     */
    where: SystemMetricsWhereUniqueInput
  }

  /**
   * SystemMetrics findFirst
   */
  export type SystemMetricsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * Filter, which SystemMetrics to fetch.
     */
    where?: SystemMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemMetrics to fetch.
     */
    orderBy?: SystemMetricsOrderByWithRelationInput | SystemMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemMetrics.
     */
    cursor?: SystemMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemMetrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemMetrics.
     */
    distinct?: SystemMetricsScalarFieldEnum | SystemMetricsScalarFieldEnum[]
  }

  /**
   * SystemMetrics findFirstOrThrow
   */
  export type SystemMetricsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * Filter, which SystemMetrics to fetch.
     */
    where?: SystemMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemMetrics to fetch.
     */
    orderBy?: SystemMetricsOrderByWithRelationInput | SystemMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SystemMetrics.
     */
    cursor?: SystemMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemMetrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SystemMetrics.
     */
    distinct?: SystemMetricsScalarFieldEnum | SystemMetricsScalarFieldEnum[]
  }

  /**
   * SystemMetrics findMany
   */
  export type SystemMetricsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * Filter, which SystemMetrics to fetch.
     */
    where?: SystemMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SystemMetrics to fetch.
     */
    orderBy?: SystemMetricsOrderByWithRelationInput | SystemMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SystemMetrics.
     */
    cursor?: SystemMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SystemMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SystemMetrics.
     */
    skip?: number
    distinct?: SystemMetricsScalarFieldEnum | SystemMetricsScalarFieldEnum[]
  }

  /**
   * SystemMetrics create
   */
  export type SystemMetricsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * The data needed to create a SystemMetrics.
     */
    data: XOR<SystemMetricsCreateInput, SystemMetricsUncheckedCreateInput>
  }

  /**
   * SystemMetrics createMany
   */
  export type SystemMetricsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SystemMetrics.
     */
    data: SystemMetricsCreateManyInput | SystemMetricsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemMetrics createManyAndReturn
   */
  export type SystemMetricsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * The data used to create many SystemMetrics.
     */
    data: SystemMetricsCreateManyInput | SystemMetricsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SystemMetrics update
   */
  export type SystemMetricsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * The data needed to update a SystemMetrics.
     */
    data: XOR<SystemMetricsUpdateInput, SystemMetricsUncheckedUpdateInput>
    /**
     * Choose, which SystemMetrics to update.
     */
    where: SystemMetricsWhereUniqueInput
  }

  /**
   * SystemMetrics updateMany
   */
  export type SystemMetricsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SystemMetrics.
     */
    data: XOR<SystemMetricsUpdateManyMutationInput, SystemMetricsUncheckedUpdateManyInput>
    /**
     * Filter which SystemMetrics to update
     */
    where?: SystemMetricsWhereInput
    /**
     * Limit how many SystemMetrics to update.
     */
    limit?: number
  }

  /**
   * SystemMetrics updateManyAndReturn
   */
  export type SystemMetricsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * The data used to update SystemMetrics.
     */
    data: XOR<SystemMetricsUpdateManyMutationInput, SystemMetricsUncheckedUpdateManyInput>
    /**
     * Filter which SystemMetrics to update
     */
    where?: SystemMetricsWhereInput
    /**
     * Limit how many SystemMetrics to update.
     */
    limit?: number
  }

  /**
   * SystemMetrics upsert
   */
  export type SystemMetricsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * The filter to search for the SystemMetrics to update in case it exists.
     */
    where: SystemMetricsWhereUniqueInput
    /**
     * In case the SystemMetrics found by the `where` argument doesn't exist, create a new SystemMetrics with this data.
     */
    create: XOR<SystemMetricsCreateInput, SystemMetricsUncheckedCreateInput>
    /**
     * In case the SystemMetrics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemMetricsUpdateInput, SystemMetricsUncheckedUpdateInput>
  }

  /**
   * SystemMetrics delete
   */
  export type SystemMetricsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
    /**
     * Filter which SystemMetrics to delete.
     */
    where: SystemMetricsWhereUniqueInput
  }

  /**
   * SystemMetrics deleteMany
   */
  export type SystemMetricsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SystemMetrics to delete
     */
    where?: SystemMetricsWhereInput
    /**
     * Limit how many SystemMetrics to delete.
     */
    limit?: number
  }

  /**
   * SystemMetrics without action
   */
  export type SystemMetricsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemMetrics
     */
    select?: SystemMetricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SystemMetrics
     */
    omit?: SystemMetricsOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const OrganizationScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    domain: 'domain',
    settings: 'settings',
    plan: 'plan',
    maxUsers: 'maxUsers',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrganizationScalarFieldEnum = (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum]


  export const OrganizationMembershipScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    organizationId: 'organizationId',
    role: 'role',
    isActive: 'isActive',
    joinedAt: 'joinedAt'
  };

  export type OrganizationMembershipScalarFieldEnum = (typeof OrganizationMembershipScalarFieldEnum)[keyof typeof OrganizationMembershipScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    username: 'username',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    avatar: 'avatar',
    role: 'role',
    isActive: 'isActive',
    lastLoginAt: 'lastLoginAt',
    emailVerified: 'emailVerified',
    emailVerifiedAt: 'emailVerifiedAt',
    preferences: 'preferences',
    mfaEnabled: 'mfaEnabled',
    mfaSecret: 'mfaSecret',
    mfaBackupCodes: 'mfaBackupCodes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserSessionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    sessionToken: 'sessionToken',
    userAgent: 'userAgent',
    ipAddress: 'ipAddress',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type UserSessionScalarFieldEnum = (typeof UserSessionScalarFieldEnum)[keyof typeof UserSessionScalarFieldEnum]


  export const ArticleScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    title: 'title',
    content: 'content',
    summary: 'summary',
    slug: 'slug',
    status: 'status',
    authorId: 'authorId',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    tags: 'tags',
    keywords: 'keywords',
    sourceType: 'sourceType',
    sourceData: 'sourceData',
    generatedBy: 'generatedBy',
    templateId: 'templateId',
    publishedAt: 'publishedAt',
    scheduledAt: 'scheduledAt',
    viewCount: 'viewCount',
    shareCount: 'shareCount',
    engagementRate: 'engagementRate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ArticleScalarFieldEnum = (typeof ArticleScalarFieldEnum)[keyof typeof ArticleScalarFieldEnum]


  export const TemplateScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    name: 'name',
    description: 'description',
    content: 'content',
    variables: 'variables',
    category: 'category',
    usageCount: 'usageCount',
    lastUsedAt: 'lastUsedAt',
    isActive: 'isActive',
    isSystem: 'isSystem',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TemplateScalarFieldEnum = (typeof TemplateScalarFieldEnum)[keyof typeof TemplateScalarFieldEnum]


  export const ArticleVersionScalarFieldEnum: {
    id: 'id',
    articleId: 'articleId',
    version: 'version',
    title: 'title',
    content: 'content',
    changes: 'changes',
    createdAt: 'createdAt',
    authorId: 'authorId',
    changeType: 'changeType'
  };

  export type ArticleVersionScalarFieldEnum = (typeof ArticleVersionScalarFieldEnum)[keyof typeof ArticleVersionScalarFieldEnum]


  export const ArticleAnalyticsScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    articleId: 'articleId',
    date: 'date',
    views: 'views',
    uniqueViews: 'uniqueViews',
    shares: 'shares',
    comments: 'comments',
    avgReadTime: 'avgReadTime',
    bounceRate: 'bounceRate',
    engagementRate: 'engagementRate',
    trafficSources: 'trafficSources',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ArticleAnalyticsScalarFieldEnum = (typeof ArticleAnalyticsScalarFieldEnum)[keyof typeof ArticleAnalyticsScalarFieldEnum]


  export const NewsItemScalarFieldEnum: {
    id: 'id',
    title: 'title',
    summary: 'summary',
    content: 'content',
    url: 'url',
    imageUrl: 'imageUrl',
    guid: 'guid',
    source: 'source',
    author: 'author',
    sentiment: 'sentiment',
    importance: 'importance',
    aiSummary: 'aiSummary',
    topics: 'topics',
    coins: 'coins',
    companies: 'companies',
    products: 'products',
    technology: 'technology',
    market: 'market',
    regulatory: 'regulatory',
    regions: 'regions',
    hasGeneratedArticle: 'hasGeneratedArticle',
    generatedArticleId: 'generatedArticleId',
    publishedAt: 'publishedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NewsItemScalarFieldEnum = (typeof NewsItemScalarFieldEnum)[keyof typeof NewsItemScalarFieldEnum]


  export const RSSSourceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    url: 'url',
    category: 'category',
    description: 'description',
    enabled: 'enabled',
    lastCollected: 'lastCollected',
    totalCollected: 'totalCollected',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RSSSourceScalarFieldEnum = (typeof RSSSourceScalarFieldEnum)[keyof typeof RSSSourceScalarFieldEnum]


  export const PriceAlertScalarFieldEnum: {
    id: 'id',
    coin: 'coin',
    alertType: 'alertType',
    condition: 'condition',
    isActive: 'isActive',
    message: 'message',
    autoGenerate: 'autoGenerate',
    templateId: 'templateId',
    lastTriggered: 'lastTriggered',
    triggerCount: 'triggerCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PriceAlertScalarFieldEnum = (typeof PriceAlertScalarFieldEnum)[keyof typeof PriceAlertScalarFieldEnum]


  export const AlertTriggerScalarFieldEnum: {
    id: 'id',
    alertId: 'alertId',
    triggerData: 'triggerData',
    articleGenerated: 'articleGenerated',
    articleId: 'articleId',
    triggeredAt: 'triggeredAt'
  };

  export type AlertTriggerScalarFieldEnum = (typeof AlertTriggerScalarFieldEnum)[keyof typeof AlertTriggerScalarFieldEnum]


  export const PriceHistoryScalarFieldEnum: {
    id: 'id',
    symbol: 'symbol',
    name: 'name',
    price: 'price',
    volume: 'volume',
    marketCap: 'marketCap',
    rank: 'rank',
    change1h: 'change1h',
    change24h: 'change24h',
    change7d: 'change7d',
    timestamp: 'timestamp'
  };

  export type PriceHistoryScalarFieldEnum = (typeof PriceHistoryScalarFieldEnum)[keyof typeof PriceHistoryScalarFieldEnum]


  export const AlertHistoryScalarFieldEnum: {
    id: 'id',
    symbol: 'symbol',
    alertType: 'alertType',
    level: 'level',
    title: 'title',
    description: 'description',
    changePercent: 'changePercent',
    timeframe: 'timeframe',
    volume: 'volume',
    details: 'details',
    isActive: 'isActive',
    dismissed: 'dismissed',
    timestamp: 'timestamp'
  };

  export type AlertHistoryScalarFieldEnum = (typeof AlertHistoryScalarFieldEnum)[keyof typeof AlertHistoryScalarFieldEnum]


  export const MarketIndicatorsScalarFieldEnum: {
    id: 'id',
    totalMarketCap: 'totalMarketCap',
    btcDominance: 'btcDominance',
    fearGreedIndex: 'fearGreedIndex',
    totalVolume24h: 'totalVolume24h',
    timestamp: 'timestamp'
  };

  export type MarketIndicatorsScalarFieldEnum = (typeof MarketIndicatorsScalarFieldEnum)[keyof typeof MarketIndicatorsScalarFieldEnum]


  export const AlertSettingsScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    userId: 'userId',
    symbol: 'symbol',
    alertType: 'alertType',
    isEnabled: 'isEnabled',
    threshold: 'threshold',
    cooldownHours: 'cooldownHours',
    maxAlertsPerDay: 'maxAlertsPerDay',
    maxGlobalAlertsPerDay: 'maxGlobalAlertsPerDay',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AlertSettingsScalarFieldEnum = (typeof AlertSettingsScalarFieldEnum)[keyof typeof AlertSettingsScalarFieldEnum]


  export const AIProviderSettingsScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    userId: 'userId',
    provider: 'provider',
    apiKey: 'apiKey',
    model: 'model',
    temperature: 'temperature',
    maxTokens: 'maxTokens',
    topP: 'topP',
    frequencyPenalty: 'frequencyPenalty',
    presencePenalty: 'presencePenalty',
    advancedSettings: 'advancedSettings',
    isDefault: 'isDefault',
    isActive: 'isActive',
    lastUsed: 'lastUsed',
    lastModified: 'lastModified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AIProviderSettingsScalarFieldEnum = (typeof AIProviderSettingsScalarFieldEnum)[keyof typeof AIProviderSettingsScalarFieldEnum]


  export const SystemMetricsScalarFieldEnum: {
    id: 'id',
    date: 'date',
    articlesGenerated: 'articlesGenerated',
    templatesUsed: 'templatesUsed',
    newsProcessed: 'newsProcessed',
    alertsTriggered: 'alertsTriggered',
    apiRequests: 'apiRequests',
    aiTokensUsed: 'aiTokensUsed',
    systemUptime: 'systemUptime',
    avgResponseTime: 'avgResponseTime',
    errorCount: 'errorCount',
    createdAt: 'createdAt'
  };

  export type SystemMetricsScalarFieldEnum = (typeof SystemMetricsScalarFieldEnum)[keyof typeof SystemMetricsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'MemberRole'
   */
  export type EnumMemberRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MemberRole'>
    


  /**
   * Reference to a field of type 'MemberRole[]'
   */
  export type ListEnumMemberRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MemberRole[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'ArticleStatus'
   */
  export type EnumArticleStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ArticleStatus'>
    


  /**
   * Reference to a field of type 'ArticleStatus[]'
   */
  export type ListEnumArticleStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ArticleStatus[]'>
    


  /**
   * Reference to a field of type 'SourceType'
   */
  export type EnumSourceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SourceType'>
    


  /**
   * Reference to a field of type 'SourceType[]'
   */
  export type ListEnumSourceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SourceType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'AlertType'
   */
  export type EnumAlertTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlertType'>
    


  /**
   * Reference to a field of type 'AlertType[]'
   */
  export type ListEnumAlertTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AlertType[]'>
    


  /**
   * Reference to a field of type 'AIProvider'
   */
  export type EnumAIProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AIProvider'>
    


  /**
   * Reference to a field of type 'AIProvider[]'
   */
  export type ListEnumAIProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AIProvider[]'>
    
  /**
   * Deep Input Types
   */


  export type OrganizationWhereInput = {
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    id?: StringFilter<"Organization"> | string
    name?: StringFilter<"Organization"> | string
    slug?: StringFilter<"Organization"> | string
    domain?: StringNullableFilter<"Organization"> | string | null
    settings?: JsonNullableFilter<"Organization">
    plan?: StringFilter<"Organization"> | string
    maxUsers?: IntFilter<"Organization"> | number
    isActive?: BoolFilter<"Organization"> | boolean
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    memberships?: OrganizationMembershipListRelationFilter
    articles?: ArticleListRelationFilter
    templates?: TemplateListRelationFilter
    aiProviderSettings?: AIProviderSettingsListRelationFilter
    alertSettings?: AlertSettingsListRelationFilter
    analytics?: ArticleAnalyticsListRelationFilter
  }

  export type OrganizationOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    domain?: SortOrderInput | SortOrder
    settings?: SortOrderInput | SortOrder
    plan?: SortOrder
    maxUsers?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    memberships?: OrganizationMembershipOrderByRelationAggregateInput
    articles?: ArticleOrderByRelationAggregateInput
    templates?: TemplateOrderByRelationAggregateInput
    aiProviderSettings?: AIProviderSettingsOrderByRelationAggregateInput
    alertSettings?: AlertSettingsOrderByRelationAggregateInput
    analytics?: ArticleAnalyticsOrderByRelationAggregateInput
  }

  export type OrganizationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    name?: StringFilter<"Organization"> | string
    domain?: StringNullableFilter<"Organization"> | string | null
    settings?: JsonNullableFilter<"Organization">
    plan?: StringFilter<"Organization"> | string
    maxUsers?: IntFilter<"Organization"> | number
    isActive?: BoolFilter<"Organization"> | boolean
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    memberships?: OrganizationMembershipListRelationFilter
    articles?: ArticleListRelationFilter
    templates?: TemplateListRelationFilter
    aiProviderSettings?: AIProviderSettingsListRelationFilter
    alertSettings?: AlertSettingsListRelationFilter
    analytics?: ArticleAnalyticsListRelationFilter
  }, "id" | "slug">

  export type OrganizationOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    domain?: SortOrderInput | SortOrder
    settings?: SortOrderInput | SortOrder
    plan?: SortOrder
    maxUsers?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrganizationCountOrderByAggregateInput
    _avg?: OrganizationAvgOrderByAggregateInput
    _max?: OrganizationMaxOrderByAggregateInput
    _min?: OrganizationMinOrderByAggregateInput
    _sum?: OrganizationSumOrderByAggregateInput
  }

  export type OrganizationScalarWhereWithAggregatesInput = {
    AND?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    OR?: OrganizationScalarWhereWithAggregatesInput[]
    NOT?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Organization"> | string
    name?: StringWithAggregatesFilter<"Organization"> | string
    slug?: StringWithAggregatesFilter<"Organization"> | string
    domain?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    settings?: JsonNullableWithAggregatesFilter<"Organization">
    plan?: StringWithAggregatesFilter<"Organization"> | string
    maxUsers?: IntWithAggregatesFilter<"Organization"> | number
    isActive?: BoolWithAggregatesFilter<"Organization"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Organization"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Organization"> | Date | string
  }

  export type OrganizationMembershipWhereInput = {
    AND?: OrganizationMembershipWhereInput | OrganizationMembershipWhereInput[]
    OR?: OrganizationMembershipWhereInput[]
    NOT?: OrganizationMembershipWhereInput | OrganizationMembershipWhereInput[]
    id?: StringFilter<"OrganizationMembership"> | string
    userId?: StringFilter<"OrganizationMembership"> | string
    organizationId?: StringFilter<"OrganizationMembership"> | string
    role?: EnumMemberRoleFilter<"OrganizationMembership"> | $Enums.MemberRole
    isActive?: BoolFilter<"OrganizationMembership"> | boolean
    joinedAt?: DateTimeFilter<"OrganizationMembership"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
  }

  export type OrganizationMembershipOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    joinedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    organization?: OrganizationOrderByWithRelationInput
  }

  export type OrganizationMembershipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_organizationId?: OrganizationMembershipUserIdOrganizationIdCompoundUniqueInput
    AND?: OrganizationMembershipWhereInput | OrganizationMembershipWhereInput[]
    OR?: OrganizationMembershipWhereInput[]
    NOT?: OrganizationMembershipWhereInput | OrganizationMembershipWhereInput[]
    userId?: StringFilter<"OrganizationMembership"> | string
    organizationId?: StringFilter<"OrganizationMembership"> | string
    role?: EnumMemberRoleFilter<"OrganizationMembership"> | $Enums.MemberRole
    isActive?: BoolFilter<"OrganizationMembership"> | boolean
    joinedAt?: DateTimeFilter<"OrganizationMembership"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
  }, "id" | "userId_organizationId">

  export type OrganizationMembershipOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    joinedAt?: SortOrder
    _count?: OrganizationMembershipCountOrderByAggregateInput
    _max?: OrganizationMembershipMaxOrderByAggregateInput
    _min?: OrganizationMembershipMinOrderByAggregateInput
  }

  export type OrganizationMembershipScalarWhereWithAggregatesInput = {
    AND?: OrganizationMembershipScalarWhereWithAggregatesInput | OrganizationMembershipScalarWhereWithAggregatesInput[]
    OR?: OrganizationMembershipScalarWhereWithAggregatesInput[]
    NOT?: OrganizationMembershipScalarWhereWithAggregatesInput | OrganizationMembershipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrganizationMembership"> | string
    userId?: StringWithAggregatesFilter<"OrganizationMembership"> | string
    organizationId?: StringWithAggregatesFilter<"OrganizationMembership"> | string
    role?: EnumMemberRoleWithAggregatesFilter<"OrganizationMembership"> | $Enums.MemberRole
    isActive?: BoolWithAggregatesFilter<"OrganizationMembership"> | boolean
    joinedAt?: DateTimeWithAggregatesFilter<"OrganizationMembership"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    preferences?: JsonNullableFilter<"User">
    mfaEnabled?: BoolFilter<"User"> | boolean
    mfaSecret?: StringNullableFilter<"User"> | string | null
    mfaBackupCodes?: JsonNullableFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    memberships?: OrganizationMembershipListRelationFilter
    aiProviderSettings?: AIProviderSettingsListRelationFilter
    alertSettings?: AlertSettingsListRelationFilter
    articleVersions?: ArticleVersionListRelationFilter
    articles?: ArticleListRelationFilter
    sessions?: UserSessionListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    preferences?: SortOrderInput | SortOrder
    mfaEnabled?: SortOrder
    mfaSecret?: SortOrderInput | SortOrder
    mfaBackupCodes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    memberships?: OrganizationMembershipOrderByRelationAggregateInput
    aiProviderSettings?: AIProviderSettingsOrderByRelationAggregateInput
    alertSettings?: AlertSettingsOrderByRelationAggregateInput
    articleVersions?: ArticleVersionOrderByRelationAggregateInput
    articles?: ArticleOrderByRelationAggregateInput
    sessions?: UserSessionOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    isActive?: BoolFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    preferences?: JsonNullableFilter<"User">
    mfaEnabled?: BoolFilter<"User"> | boolean
    mfaSecret?: StringNullableFilter<"User"> | string | null
    mfaBackupCodes?: JsonNullableFilter<"User">
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    memberships?: OrganizationMembershipListRelationFilter
    aiProviderSettings?: AIProviderSettingsListRelationFilter
    alertSettings?: AlertSettingsListRelationFilter
    articleVersions?: ArticleVersionListRelationFilter
    articles?: ArticleListRelationFilter
    sessions?: UserSessionListRelationFilter
  }, "id" | "email" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    preferences?: SortOrderInput | SortOrder
    mfaEnabled?: SortOrder
    mfaSecret?: SortOrderInput | SortOrder
    mfaBackupCodes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    preferences?: JsonNullableWithAggregatesFilter<"User">
    mfaEnabled?: BoolWithAggregatesFilter<"User"> | boolean
    mfaSecret?: StringNullableWithAggregatesFilter<"User"> | string | null
    mfaBackupCodes?: JsonNullableWithAggregatesFilter<"User">
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type UserSessionWhereInput = {
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    sessionToken?: StringFilter<"UserSession"> | string
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserSessionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionToken?: SortOrder
    userAgent?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    userId?: StringFilter<"UserSession"> | string
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type UserSessionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionToken?: SortOrder
    userAgent?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: UserSessionCountOrderByAggregateInput
    _max?: UserSessionMaxOrderByAggregateInput
    _min?: UserSessionMinOrderByAggregateInput
  }

  export type UserSessionScalarWhereWithAggregatesInput = {
    AND?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    OR?: UserSessionScalarWhereWithAggregatesInput[]
    NOT?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSession"> | string
    userId?: StringWithAggregatesFilter<"UserSession"> | string
    sessionToken?: StringWithAggregatesFilter<"UserSession"> | string
    userAgent?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    expiresAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
  }

  export type ArticleWhereInput = {
    AND?: ArticleWhereInput | ArticleWhereInput[]
    OR?: ArticleWhereInput[]
    NOT?: ArticleWhereInput | ArticleWhereInput[]
    id?: StringFilter<"Article"> | string
    organizationId?: StringFilter<"Article"> | string
    title?: StringFilter<"Article"> | string
    content?: StringNullableFilter<"Article"> | string | null
    summary?: StringNullableFilter<"Article"> | string | null
    slug?: StringFilter<"Article"> | string
    status?: EnumArticleStatusFilter<"Article"> | $Enums.ArticleStatus
    authorId?: StringNullableFilter<"Article"> | string | null
    metaTitle?: StringNullableFilter<"Article"> | string | null
    metaDescription?: StringNullableFilter<"Article"> | string | null
    tags?: JsonNullableFilter<"Article">
    keywords?: JsonNullableFilter<"Article">
    sourceType?: EnumSourceTypeFilter<"Article"> | $Enums.SourceType
    sourceData?: JsonNullableFilter<"Article">
    generatedBy?: StringNullableFilter<"Article"> | string | null
    templateId?: StringNullableFilter<"Article"> | string | null
    publishedAt?: DateTimeNullableFilter<"Article"> | Date | string | null
    scheduledAt?: DateTimeNullableFilter<"Article"> | Date | string | null
    viewCount?: IntFilter<"Article"> | number
    shareCount?: IntFilter<"Article"> | number
    engagementRate?: FloatFilter<"Article"> | number
    createdAt?: DateTimeFilter<"Article"> | Date | string
    updatedAt?: DateTimeFilter<"Article"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    analytics?: ArticleAnalyticsListRelationFilter
    versions?: ArticleVersionListRelationFilter
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    template?: XOR<TemplateNullableScalarRelationFilter, TemplateWhereInput> | null
  }

  export type ArticleOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    title?: SortOrder
    content?: SortOrderInput | SortOrder
    summary?: SortOrderInput | SortOrder
    slug?: SortOrder
    status?: SortOrder
    authorId?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    keywords?: SortOrderInput | SortOrder
    sourceType?: SortOrder
    sourceData?: SortOrderInput | SortOrder
    generatedBy?: SortOrderInput | SortOrder
    templateId?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    scheduledAt?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    analytics?: ArticleAnalyticsOrderByRelationAggregateInput
    versions?: ArticleVersionOrderByRelationAggregateInput
    author?: UserOrderByWithRelationInput
    template?: TemplateOrderByWithRelationInput
  }

  export type ArticleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: ArticleWhereInput | ArticleWhereInput[]
    OR?: ArticleWhereInput[]
    NOT?: ArticleWhereInput | ArticleWhereInput[]
    organizationId?: StringFilter<"Article"> | string
    title?: StringFilter<"Article"> | string
    content?: StringNullableFilter<"Article"> | string | null
    summary?: StringNullableFilter<"Article"> | string | null
    status?: EnumArticleStatusFilter<"Article"> | $Enums.ArticleStatus
    authorId?: StringNullableFilter<"Article"> | string | null
    metaTitle?: StringNullableFilter<"Article"> | string | null
    metaDescription?: StringNullableFilter<"Article"> | string | null
    tags?: JsonNullableFilter<"Article">
    keywords?: JsonNullableFilter<"Article">
    sourceType?: EnumSourceTypeFilter<"Article"> | $Enums.SourceType
    sourceData?: JsonNullableFilter<"Article">
    generatedBy?: StringNullableFilter<"Article"> | string | null
    templateId?: StringNullableFilter<"Article"> | string | null
    publishedAt?: DateTimeNullableFilter<"Article"> | Date | string | null
    scheduledAt?: DateTimeNullableFilter<"Article"> | Date | string | null
    viewCount?: IntFilter<"Article"> | number
    shareCount?: IntFilter<"Article"> | number
    engagementRate?: FloatFilter<"Article"> | number
    createdAt?: DateTimeFilter<"Article"> | Date | string
    updatedAt?: DateTimeFilter<"Article"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    analytics?: ArticleAnalyticsListRelationFilter
    versions?: ArticleVersionListRelationFilter
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    template?: XOR<TemplateNullableScalarRelationFilter, TemplateWhereInput> | null
  }, "id" | "slug">

  export type ArticleOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    title?: SortOrder
    content?: SortOrderInput | SortOrder
    summary?: SortOrderInput | SortOrder
    slug?: SortOrder
    status?: SortOrder
    authorId?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    keywords?: SortOrderInput | SortOrder
    sourceType?: SortOrder
    sourceData?: SortOrderInput | SortOrder
    generatedBy?: SortOrderInput | SortOrder
    templateId?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    scheduledAt?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ArticleCountOrderByAggregateInput
    _avg?: ArticleAvgOrderByAggregateInput
    _max?: ArticleMaxOrderByAggregateInput
    _min?: ArticleMinOrderByAggregateInput
    _sum?: ArticleSumOrderByAggregateInput
  }

  export type ArticleScalarWhereWithAggregatesInput = {
    AND?: ArticleScalarWhereWithAggregatesInput | ArticleScalarWhereWithAggregatesInput[]
    OR?: ArticleScalarWhereWithAggregatesInput[]
    NOT?: ArticleScalarWhereWithAggregatesInput | ArticleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Article"> | string
    organizationId?: StringWithAggregatesFilter<"Article"> | string
    title?: StringWithAggregatesFilter<"Article"> | string
    content?: StringNullableWithAggregatesFilter<"Article"> | string | null
    summary?: StringNullableWithAggregatesFilter<"Article"> | string | null
    slug?: StringWithAggregatesFilter<"Article"> | string
    status?: EnumArticleStatusWithAggregatesFilter<"Article"> | $Enums.ArticleStatus
    authorId?: StringNullableWithAggregatesFilter<"Article"> | string | null
    metaTitle?: StringNullableWithAggregatesFilter<"Article"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"Article"> | string | null
    tags?: JsonNullableWithAggregatesFilter<"Article">
    keywords?: JsonNullableWithAggregatesFilter<"Article">
    sourceType?: EnumSourceTypeWithAggregatesFilter<"Article"> | $Enums.SourceType
    sourceData?: JsonNullableWithAggregatesFilter<"Article">
    generatedBy?: StringNullableWithAggregatesFilter<"Article"> | string | null
    templateId?: StringNullableWithAggregatesFilter<"Article"> | string | null
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Article"> | Date | string | null
    scheduledAt?: DateTimeNullableWithAggregatesFilter<"Article"> | Date | string | null
    viewCount?: IntWithAggregatesFilter<"Article"> | number
    shareCount?: IntWithAggregatesFilter<"Article"> | number
    engagementRate?: FloatWithAggregatesFilter<"Article"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Article"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Article"> | Date | string
  }

  export type TemplateWhereInput = {
    AND?: TemplateWhereInput | TemplateWhereInput[]
    OR?: TemplateWhereInput[]
    NOT?: TemplateWhereInput | TemplateWhereInput[]
    id?: StringFilter<"Template"> | string
    organizationId?: StringFilter<"Template"> | string
    name?: StringFilter<"Template"> | string
    description?: StringNullableFilter<"Template"> | string | null
    content?: StringFilter<"Template"> | string
    variables?: JsonFilter<"Template">
    category?: StringNullableFilter<"Template"> | string | null
    usageCount?: IntFilter<"Template"> | number
    lastUsedAt?: DateTimeNullableFilter<"Template"> | Date | string | null
    isActive?: BoolFilter<"Template"> | boolean
    isSystem?: BoolFilter<"Template"> | boolean
    createdAt?: DateTimeFilter<"Template"> | Date | string
    updatedAt?: DateTimeFilter<"Template"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    articles?: ArticleListRelationFilter
  }

  export type TemplateOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    content?: SortOrder
    variables?: SortOrder
    category?: SortOrderInput | SortOrder
    usageCount?: SortOrder
    lastUsedAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isSystem?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    articles?: ArticleOrderByRelationAggregateInput
  }

  export type TemplateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TemplateWhereInput | TemplateWhereInput[]
    OR?: TemplateWhereInput[]
    NOT?: TemplateWhereInput | TemplateWhereInput[]
    organizationId?: StringFilter<"Template"> | string
    name?: StringFilter<"Template"> | string
    description?: StringNullableFilter<"Template"> | string | null
    content?: StringFilter<"Template"> | string
    variables?: JsonFilter<"Template">
    category?: StringNullableFilter<"Template"> | string | null
    usageCount?: IntFilter<"Template"> | number
    lastUsedAt?: DateTimeNullableFilter<"Template"> | Date | string | null
    isActive?: BoolFilter<"Template"> | boolean
    isSystem?: BoolFilter<"Template"> | boolean
    createdAt?: DateTimeFilter<"Template"> | Date | string
    updatedAt?: DateTimeFilter<"Template"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    articles?: ArticleListRelationFilter
  }, "id">

  export type TemplateOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    content?: SortOrder
    variables?: SortOrder
    category?: SortOrderInput | SortOrder
    usageCount?: SortOrder
    lastUsedAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isSystem?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TemplateCountOrderByAggregateInput
    _avg?: TemplateAvgOrderByAggregateInput
    _max?: TemplateMaxOrderByAggregateInput
    _min?: TemplateMinOrderByAggregateInput
    _sum?: TemplateSumOrderByAggregateInput
  }

  export type TemplateScalarWhereWithAggregatesInput = {
    AND?: TemplateScalarWhereWithAggregatesInput | TemplateScalarWhereWithAggregatesInput[]
    OR?: TemplateScalarWhereWithAggregatesInput[]
    NOT?: TemplateScalarWhereWithAggregatesInput | TemplateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Template"> | string
    organizationId?: StringWithAggregatesFilter<"Template"> | string
    name?: StringWithAggregatesFilter<"Template"> | string
    description?: StringNullableWithAggregatesFilter<"Template"> | string | null
    content?: StringWithAggregatesFilter<"Template"> | string
    variables?: JsonWithAggregatesFilter<"Template">
    category?: StringNullableWithAggregatesFilter<"Template"> | string | null
    usageCount?: IntWithAggregatesFilter<"Template"> | number
    lastUsedAt?: DateTimeNullableWithAggregatesFilter<"Template"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"Template"> | boolean
    isSystem?: BoolWithAggregatesFilter<"Template"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Template"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Template"> | Date | string
  }

  export type ArticleVersionWhereInput = {
    AND?: ArticleVersionWhereInput | ArticleVersionWhereInput[]
    OR?: ArticleVersionWhereInput[]
    NOT?: ArticleVersionWhereInput | ArticleVersionWhereInput[]
    id?: StringFilter<"ArticleVersion"> | string
    articleId?: StringFilter<"ArticleVersion"> | string
    version?: IntFilter<"ArticleVersion"> | number
    title?: StringFilter<"ArticleVersion"> | string
    content?: StringFilter<"ArticleVersion"> | string
    changes?: StringNullableFilter<"ArticleVersion"> | string | null
    createdAt?: DateTimeFilter<"ArticleVersion"> | Date | string
    authorId?: StringNullableFilter<"ArticleVersion"> | string | null
    changeType?: StringNullableFilter<"ArticleVersion"> | string | null
    article?: XOR<ArticleScalarRelationFilter, ArticleWhereInput>
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ArticleVersionOrderByWithRelationInput = {
    id?: SortOrder
    articleId?: SortOrder
    version?: SortOrder
    title?: SortOrder
    content?: SortOrder
    changes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    authorId?: SortOrderInput | SortOrder
    changeType?: SortOrderInput | SortOrder
    article?: ArticleOrderByWithRelationInput
    author?: UserOrderByWithRelationInput
  }

  export type ArticleVersionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    articleId_version?: ArticleVersionArticleIdVersionCompoundUniqueInput
    AND?: ArticleVersionWhereInput | ArticleVersionWhereInput[]
    OR?: ArticleVersionWhereInput[]
    NOT?: ArticleVersionWhereInput | ArticleVersionWhereInput[]
    articleId?: StringFilter<"ArticleVersion"> | string
    version?: IntFilter<"ArticleVersion"> | number
    title?: StringFilter<"ArticleVersion"> | string
    content?: StringFilter<"ArticleVersion"> | string
    changes?: StringNullableFilter<"ArticleVersion"> | string | null
    createdAt?: DateTimeFilter<"ArticleVersion"> | Date | string
    authorId?: StringNullableFilter<"ArticleVersion"> | string | null
    changeType?: StringNullableFilter<"ArticleVersion"> | string | null
    article?: XOR<ArticleScalarRelationFilter, ArticleWhereInput>
    author?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "articleId_version">

  export type ArticleVersionOrderByWithAggregationInput = {
    id?: SortOrder
    articleId?: SortOrder
    version?: SortOrder
    title?: SortOrder
    content?: SortOrder
    changes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    authorId?: SortOrderInput | SortOrder
    changeType?: SortOrderInput | SortOrder
    _count?: ArticleVersionCountOrderByAggregateInput
    _avg?: ArticleVersionAvgOrderByAggregateInput
    _max?: ArticleVersionMaxOrderByAggregateInput
    _min?: ArticleVersionMinOrderByAggregateInput
    _sum?: ArticleVersionSumOrderByAggregateInput
  }

  export type ArticleVersionScalarWhereWithAggregatesInput = {
    AND?: ArticleVersionScalarWhereWithAggregatesInput | ArticleVersionScalarWhereWithAggregatesInput[]
    OR?: ArticleVersionScalarWhereWithAggregatesInput[]
    NOT?: ArticleVersionScalarWhereWithAggregatesInput | ArticleVersionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ArticleVersion"> | string
    articleId?: StringWithAggregatesFilter<"ArticleVersion"> | string
    version?: IntWithAggregatesFilter<"ArticleVersion"> | number
    title?: StringWithAggregatesFilter<"ArticleVersion"> | string
    content?: StringWithAggregatesFilter<"ArticleVersion"> | string
    changes?: StringNullableWithAggregatesFilter<"ArticleVersion"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ArticleVersion"> | Date | string
    authorId?: StringNullableWithAggregatesFilter<"ArticleVersion"> | string | null
    changeType?: StringNullableWithAggregatesFilter<"ArticleVersion"> | string | null
  }

  export type ArticleAnalyticsWhereInput = {
    AND?: ArticleAnalyticsWhereInput | ArticleAnalyticsWhereInput[]
    OR?: ArticleAnalyticsWhereInput[]
    NOT?: ArticleAnalyticsWhereInput | ArticleAnalyticsWhereInput[]
    id?: StringFilter<"ArticleAnalytics"> | string
    organizationId?: StringFilter<"ArticleAnalytics"> | string
    articleId?: StringFilter<"ArticleAnalytics"> | string
    date?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    views?: IntFilter<"ArticleAnalytics"> | number
    uniqueViews?: IntFilter<"ArticleAnalytics"> | number
    shares?: IntFilter<"ArticleAnalytics"> | number
    comments?: IntFilter<"ArticleAnalytics"> | number
    avgReadTime?: FloatFilter<"ArticleAnalytics"> | number
    bounceRate?: FloatFilter<"ArticleAnalytics"> | number
    engagementRate?: FloatFilter<"ArticleAnalytics"> | number
    trafficSources?: JsonNullableFilter<"ArticleAnalytics">
    createdAt?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    article?: XOR<ArticleScalarRelationFilter, ArticleWhereInput>
  }

  export type ArticleAnalyticsOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    articleId?: SortOrder
    date?: SortOrder
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
    trafficSources?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    article?: ArticleOrderByWithRelationInput
  }

  export type ArticleAnalyticsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    articleId_date?: ArticleAnalyticsArticleIdDateCompoundUniqueInput
    AND?: ArticleAnalyticsWhereInput | ArticleAnalyticsWhereInput[]
    OR?: ArticleAnalyticsWhereInput[]
    NOT?: ArticleAnalyticsWhereInput | ArticleAnalyticsWhereInput[]
    organizationId?: StringFilter<"ArticleAnalytics"> | string
    articleId?: StringFilter<"ArticleAnalytics"> | string
    date?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    views?: IntFilter<"ArticleAnalytics"> | number
    uniqueViews?: IntFilter<"ArticleAnalytics"> | number
    shares?: IntFilter<"ArticleAnalytics"> | number
    comments?: IntFilter<"ArticleAnalytics"> | number
    avgReadTime?: FloatFilter<"ArticleAnalytics"> | number
    bounceRate?: FloatFilter<"ArticleAnalytics"> | number
    engagementRate?: FloatFilter<"ArticleAnalytics"> | number
    trafficSources?: JsonNullableFilter<"ArticleAnalytics">
    createdAt?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    article?: XOR<ArticleScalarRelationFilter, ArticleWhereInput>
  }, "id" | "articleId_date">

  export type ArticleAnalyticsOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    articleId?: SortOrder
    date?: SortOrder
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
    trafficSources?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ArticleAnalyticsCountOrderByAggregateInput
    _avg?: ArticleAnalyticsAvgOrderByAggregateInput
    _max?: ArticleAnalyticsMaxOrderByAggregateInput
    _min?: ArticleAnalyticsMinOrderByAggregateInput
    _sum?: ArticleAnalyticsSumOrderByAggregateInput
  }

  export type ArticleAnalyticsScalarWhereWithAggregatesInput = {
    AND?: ArticleAnalyticsScalarWhereWithAggregatesInput | ArticleAnalyticsScalarWhereWithAggregatesInput[]
    OR?: ArticleAnalyticsScalarWhereWithAggregatesInput[]
    NOT?: ArticleAnalyticsScalarWhereWithAggregatesInput | ArticleAnalyticsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ArticleAnalytics"> | string
    organizationId?: StringWithAggregatesFilter<"ArticleAnalytics"> | string
    articleId?: StringWithAggregatesFilter<"ArticleAnalytics"> | string
    date?: DateTimeWithAggregatesFilter<"ArticleAnalytics"> | Date | string
    views?: IntWithAggregatesFilter<"ArticleAnalytics"> | number
    uniqueViews?: IntWithAggregatesFilter<"ArticleAnalytics"> | number
    shares?: IntWithAggregatesFilter<"ArticleAnalytics"> | number
    comments?: IntWithAggregatesFilter<"ArticleAnalytics"> | number
    avgReadTime?: FloatWithAggregatesFilter<"ArticleAnalytics"> | number
    bounceRate?: FloatWithAggregatesFilter<"ArticleAnalytics"> | number
    engagementRate?: FloatWithAggregatesFilter<"ArticleAnalytics"> | number
    trafficSources?: JsonNullableWithAggregatesFilter<"ArticleAnalytics">
    createdAt?: DateTimeWithAggregatesFilter<"ArticleAnalytics"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ArticleAnalytics"> | Date | string
  }

  export type NewsItemWhereInput = {
    AND?: NewsItemWhereInput | NewsItemWhereInput[]
    OR?: NewsItemWhereInput[]
    NOT?: NewsItemWhereInput | NewsItemWhereInput[]
    id?: StringFilter<"NewsItem"> | string
    title?: StringFilter<"NewsItem"> | string
    summary?: StringNullableFilter<"NewsItem"> | string | null
    content?: StringNullableFilter<"NewsItem"> | string | null
    url?: StringFilter<"NewsItem"> | string
    imageUrl?: StringNullableFilter<"NewsItem"> | string | null
    guid?: StringFilter<"NewsItem"> | string
    source?: StringFilter<"NewsItem"> | string
    author?: StringNullableFilter<"NewsItem"> | string | null
    sentiment?: FloatNullableFilter<"NewsItem"> | number | null
    importance?: IntFilter<"NewsItem"> | number
    aiSummary?: StringNullableFilter<"NewsItem"> | string | null
    topics?: JsonNullableFilter<"NewsItem">
    coins?: JsonNullableFilter<"NewsItem">
    companies?: JsonNullableFilter<"NewsItem">
    products?: JsonNullableFilter<"NewsItem">
    technology?: JsonNullableFilter<"NewsItem">
    market?: JsonNullableFilter<"NewsItem">
    regulatory?: JsonNullableFilter<"NewsItem">
    regions?: JsonNullableFilter<"NewsItem">
    hasGeneratedArticle?: BoolFilter<"NewsItem"> | boolean
    generatedArticleId?: StringNullableFilter<"NewsItem"> | string | null
    publishedAt?: DateTimeFilter<"NewsItem"> | Date | string
    createdAt?: DateTimeFilter<"NewsItem"> | Date | string
    updatedAt?: DateTimeFilter<"NewsItem"> | Date | string
  }

  export type NewsItemOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    url?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    guid?: SortOrder
    source?: SortOrder
    author?: SortOrderInput | SortOrder
    sentiment?: SortOrderInput | SortOrder
    importance?: SortOrder
    aiSummary?: SortOrderInput | SortOrder
    topics?: SortOrderInput | SortOrder
    coins?: SortOrderInput | SortOrder
    companies?: SortOrderInput | SortOrder
    products?: SortOrderInput | SortOrder
    technology?: SortOrderInput | SortOrder
    market?: SortOrderInput | SortOrder
    regulatory?: SortOrderInput | SortOrder
    regions?: SortOrderInput | SortOrder
    hasGeneratedArticle?: SortOrder
    generatedArticleId?: SortOrderInput | SortOrder
    publishedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    url?: string
    guid?: string
    AND?: NewsItemWhereInput | NewsItemWhereInput[]
    OR?: NewsItemWhereInput[]
    NOT?: NewsItemWhereInput | NewsItemWhereInput[]
    title?: StringFilter<"NewsItem"> | string
    summary?: StringNullableFilter<"NewsItem"> | string | null
    content?: StringNullableFilter<"NewsItem"> | string | null
    imageUrl?: StringNullableFilter<"NewsItem"> | string | null
    source?: StringFilter<"NewsItem"> | string
    author?: StringNullableFilter<"NewsItem"> | string | null
    sentiment?: FloatNullableFilter<"NewsItem"> | number | null
    importance?: IntFilter<"NewsItem"> | number
    aiSummary?: StringNullableFilter<"NewsItem"> | string | null
    topics?: JsonNullableFilter<"NewsItem">
    coins?: JsonNullableFilter<"NewsItem">
    companies?: JsonNullableFilter<"NewsItem">
    products?: JsonNullableFilter<"NewsItem">
    technology?: JsonNullableFilter<"NewsItem">
    market?: JsonNullableFilter<"NewsItem">
    regulatory?: JsonNullableFilter<"NewsItem">
    regions?: JsonNullableFilter<"NewsItem">
    hasGeneratedArticle?: BoolFilter<"NewsItem"> | boolean
    generatedArticleId?: StringNullableFilter<"NewsItem"> | string | null
    publishedAt?: DateTimeFilter<"NewsItem"> | Date | string
    createdAt?: DateTimeFilter<"NewsItem"> | Date | string
    updatedAt?: DateTimeFilter<"NewsItem"> | Date | string
  }, "id" | "url" | "guid">

  export type NewsItemOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    url?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    guid?: SortOrder
    source?: SortOrder
    author?: SortOrderInput | SortOrder
    sentiment?: SortOrderInput | SortOrder
    importance?: SortOrder
    aiSummary?: SortOrderInput | SortOrder
    topics?: SortOrderInput | SortOrder
    coins?: SortOrderInput | SortOrder
    companies?: SortOrderInput | SortOrder
    products?: SortOrderInput | SortOrder
    technology?: SortOrderInput | SortOrder
    market?: SortOrderInput | SortOrder
    regulatory?: SortOrderInput | SortOrder
    regions?: SortOrderInput | SortOrder
    hasGeneratedArticle?: SortOrder
    generatedArticleId?: SortOrderInput | SortOrder
    publishedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NewsItemCountOrderByAggregateInput
    _avg?: NewsItemAvgOrderByAggregateInput
    _max?: NewsItemMaxOrderByAggregateInput
    _min?: NewsItemMinOrderByAggregateInput
    _sum?: NewsItemSumOrderByAggregateInput
  }

  export type NewsItemScalarWhereWithAggregatesInput = {
    AND?: NewsItemScalarWhereWithAggregatesInput | NewsItemScalarWhereWithAggregatesInput[]
    OR?: NewsItemScalarWhereWithAggregatesInput[]
    NOT?: NewsItemScalarWhereWithAggregatesInput | NewsItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"NewsItem"> | string
    title?: StringWithAggregatesFilter<"NewsItem"> | string
    summary?: StringNullableWithAggregatesFilter<"NewsItem"> | string | null
    content?: StringNullableWithAggregatesFilter<"NewsItem"> | string | null
    url?: StringWithAggregatesFilter<"NewsItem"> | string
    imageUrl?: StringNullableWithAggregatesFilter<"NewsItem"> | string | null
    guid?: StringWithAggregatesFilter<"NewsItem"> | string
    source?: StringWithAggregatesFilter<"NewsItem"> | string
    author?: StringNullableWithAggregatesFilter<"NewsItem"> | string | null
    sentiment?: FloatNullableWithAggregatesFilter<"NewsItem"> | number | null
    importance?: IntWithAggregatesFilter<"NewsItem"> | number
    aiSummary?: StringNullableWithAggregatesFilter<"NewsItem"> | string | null
    topics?: JsonNullableWithAggregatesFilter<"NewsItem">
    coins?: JsonNullableWithAggregatesFilter<"NewsItem">
    companies?: JsonNullableWithAggregatesFilter<"NewsItem">
    products?: JsonNullableWithAggregatesFilter<"NewsItem">
    technology?: JsonNullableWithAggregatesFilter<"NewsItem">
    market?: JsonNullableWithAggregatesFilter<"NewsItem">
    regulatory?: JsonNullableWithAggregatesFilter<"NewsItem">
    regions?: JsonNullableWithAggregatesFilter<"NewsItem">
    hasGeneratedArticle?: BoolWithAggregatesFilter<"NewsItem"> | boolean
    generatedArticleId?: StringNullableWithAggregatesFilter<"NewsItem"> | string | null
    publishedAt?: DateTimeWithAggregatesFilter<"NewsItem"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"NewsItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"NewsItem"> | Date | string
  }

  export type RSSSourceWhereInput = {
    AND?: RSSSourceWhereInput | RSSSourceWhereInput[]
    OR?: RSSSourceWhereInput[]
    NOT?: RSSSourceWhereInput | RSSSourceWhereInput[]
    id?: StringFilter<"RSSSource"> | string
    name?: StringFilter<"RSSSource"> | string
    url?: StringFilter<"RSSSource"> | string
    category?: StringFilter<"RSSSource"> | string
    description?: StringNullableFilter<"RSSSource"> | string | null
    enabled?: BoolFilter<"RSSSource"> | boolean
    lastCollected?: DateTimeNullableFilter<"RSSSource"> | Date | string | null
    totalCollected?: IntFilter<"RSSSource"> | number
    status?: StringFilter<"RSSSource"> | string
    createdAt?: DateTimeFilter<"RSSSource"> | Date | string
    updatedAt?: DateTimeFilter<"RSSSource"> | Date | string
  }

  export type RSSSourceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    category?: SortOrder
    description?: SortOrderInput | SortOrder
    enabled?: SortOrder
    lastCollected?: SortOrderInput | SortOrder
    totalCollected?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RSSSourceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    url?: string
    AND?: RSSSourceWhereInput | RSSSourceWhereInput[]
    OR?: RSSSourceWhereInput[]
    NOT?: RSSSourceWhereInput | RSSSourceWhereInput[]
    name?: StringFilter<"RSSSource"> | string
    category?: StringFilter<"RSSSource"> | string
    description?: StringNullableFilter<"RSSSource"> | string | null
    enabled?: BoolFilter<"RSSSource"> | boolean
    lastCollected?: DateTimeNullableFilter<"RSSSource"> | Date | string | null
    totalCollected?: IntFilter<"RSSSource"> | number
    status?: StringFilter<"RSSSource"> | string
    createdAt?: DateTimeFilter<"RSSSource"> | Date | string
    updatedAt?: DateTimeFilter<"RSSSource"> | Date | string
  }, "id" | "url">

  export type RSSSourceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    category?: SortOrder
    description?: SortOrderInput | SortOrder
    enabled?: SortOrder
    lastCollected?: SortOrderInput | SortOrder
    totalCollected?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RSSSourceCountOrderByAggregateInput
    _avg?: RSSSourceAvgOrderByAggregateInput
    _max?: RSSSourceMaxOrderByAggregateInput
    _min?: RSSSourceMinOrderByAggregateInput
    _sum?: RSSSourceSumOrderByAggregateInput
  }

  export type RSSSourceScalarWhereWithAggregatesInput = {
    AND?: RSSSourceScalarWhereWithAggregatesInput | RSSSourceScalarWhereWithAggregatesInput[]
    OR?: RSSSourceScalarWhereWithAggregatesInput[]
    NOT?: RSSSourceScalarWhereWithAggregatesInput | RSSSourceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RSSSource"> | string
    name?: StringWithAggregatesFilter<"RSSSource"> | string
    url?: StringWithAggregatesFilter<"RSSSource"> | string
    category?: StringWithAggregatesFilter<"RSSSource"> | string
    description?: StringNullableWithAggregatesFilter<"RSSSource"> | string | null
    enabled?: BoolWithAggregatesFilter<"RSSSource"> | boolean
    lastCollected?: DateTimeNullableWithAggregatesFilter<"RSSSource"> | Date | string | null
    totalCollected?: IntWithAggregatesFilter<"RSSSource"> | number
    status?: StringWithAggregatesFilter<"RSSSource"> | string
    createdAt?: DateTimeWithAggregatesFilter<"RSSSource"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RSSSource"> | Date | string
  }

  export type PriceAlertWhereInput = {
    AND?: PriceAlertWhereInput | PriceAlertWhereInput[]
    OR?: PriceAlertWhereInput[]
    NOT?: PriceAlertWhereInput | PriceAlertWhereInput[]
    id?: StringFilter<"PriceAlert"> | string
    coin?: StringFilter<"PriceAlert"> | string
    alertType?: EnumAlertTypeFilter<"PriceAlert"> | $Enums.AlertType
    condition?: JsonFilter<"PriceAlert">
    isActive?: BoolFilter<"PriceAlert"> | boolean
    message?: StringNullableFilter<"PriceAlert"> | string | null
    autoGenerate?: BoolFilter<"PriceAlert"> | boolean
    templateId?: StringNullableFilter<"PriceAlert"> | string | null
    lastTriggered?: DateTimeNullableFilter<"PriceAlert"> | Date | string | null
    triggerCount?: IntFilter<"PriceAlert"> | number
    createdAt?: DateTimeFilter<"PriceAlert"> | Date | string
    updatedAt?: DateTimeFilter<"PriceAlert"> | Date | string
  }

  export type PriceAlertOrderByWithRelationInput = {
    id?: SortOrder
    coin?: SortOrder
    alertType?: SortOrder
    condition?: SortOrder
    isActive?: SortOrder
    message?: SortOrderInput | SortOrder
    autoGenerate?: SortOrder
    templateId?: SortOrderInput | SortOrder
    lastTriggered?: SortOrderInput | SortOrder
    triggerCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAlertWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PriceAlertWhereInput | PriceAlertWhereInput[]
    OR?: PriceAlertWhereInput[]
    NOT?: PriceAlertWhereInput | PriceAlertWhereInput[]
    coin?: StringFilter<"PriceAlert"> | string
    alertType?: EnumAlertTypeFilter<"PriceAlert"> | $Enums.AlertType
    condition?: JsonFilter<"PriceAlert">
    isActive?: BoolFilter<"PriceAlert"> | boolean
    message?: StringNullableFilter<"PriceAlert"> | string | null
    autoGenerate?: BoolFilter<"PriceAlert"> | boolean
    templateId?: StringNullableFilter<"PriceAlert"> | string | null
    lastTriggered?: DateTimeNullableFilter<"PriceAlert"> | Date | string | null
    triggerCount?: IntFilter<"PriceAlert"> | number
    createdAt?: DateTimeFilter<"PriceAlert"> | Date | string
    updatedAt?: DateTimeFilter<"PriceAlert"> | Date | string
  }, "id">

  export type PriceAlertOrderByWithAggregationInput = {
    id?: SortOrder
    coin?: SortOrder
    alertType?: SortOrder
    condition?: SortOrder
    isActive?: SortOrder
    message?: SortOrderInput | SortOrder
    autoGenerate?: SortOrder
    templateId?: SortOrderInput | SortOrder
    lastTriggered?: SortOrderInput | SortOrder
    triggerCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PriceAlertCountOrderByAggregateInput
    _avg?: PriceAlertAvgOrderByAggregateInput
    _max?: PriceAlertMaxOrderByAggregateInput
    _min?: PriceAlertMinOrderByAggregateInput
    _sum?: PriceAlertSumOrderByAggregateInput
  }

  export type PriceAlertScalarWhereWithAggregatesInput = {
    AND?: PriceAlertScalarWhereWithAggregatesInput | PriceAlertScalarWhereWithAggregatesInput[]
    OR?: PriceAlertScalarWhereWithAggregatesInput[]
    NOT?: PriceAlertScalarWhereWithAggregatesInput | PriceAlertScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PriceAlert"> | string
    coin?: StringWithAggregatesFilter<"PriceAlert"> | string
    alertType?: EnumAlertTypeWithAggregatesFilter<"PriceAlert"> | $Enums.AlertType
    condition?: JsonWithAggregatesFilter<"PriceAlert">
    isActive?: BoolWithAggregatesFilter<"PriceAlert"> | boolean
    message?: StringNullableWithAggregatesFilter<"PriceAlert"> | string | null
    autoGenerate?: BoolWithAggregatesFilter<"PriceAlert"> | boolean
    templateId?: StringNullableWithAggregatesFilter<"PriceAlert"> | string | null
    lastTriggered?: DateTimeNullableWithAggregatesFilter<"PriceAlert"> | Date | string | null
    triggerCount?: IntWithAggregatesFilter<"PriceAlert"> | number
    createdAt?: DateTimeWithAggregatesFilter<"PriceAlert"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PriceAlert"> | Date | string
  }

  export type AlertTriggerWhereInput = {
    AND?: AlertTriggerWhereInput | AlertTriggerWhereInput[]
    OR?: AlertTriggerWhereInput[]
    NOT?: AlertTriggerWhereInput | AlertTriggerWhereInput[]
    id?: StringFilter<"AlertTrigger"> | string
    alertId?: StringFilter<"AlertTrigger"> | string
    triggerData?: JsonFilter<"AlertTrigger">
    articleGenerated?: BoolFilter<"AlertTrigger"> | boolean
    articleId?: StringNullableFilter<"AlertTrigger"> | string | null
    triggeredAt?: DateTimeFilter<"AlertTrigger"> | Date | string
  }

  export type AlertTriggerOrderByWithRelationInput = {
    id?: SortOrder
    alertId?: SortOrder
    triggerData?: SortOrder
    articleGenerated?: SortOrder
    articleId?: SortOrderInput | SortOrder
    triggeredAt?: SortOrder
  }

  export type AlertTriggerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AlertTriggerWhereInput | AlertTriggerWhereInput[]
    OR?: AlertTriggerWhereInput[]
    NOT?: AlertTriggerWhereInput | AlertTriggerWhereInput[]
    alertId?: StringFilter<"AlertTrigger"> | string
    triggerData?: JsonFilter<"AlertTrigger">
    articleGenerated?: BoolFilter<"AlertTrigger"> | boolean
    articleId?: StringNullableFilter<"AlertTrigger"> | string | null
    triggeredAt?: DateTimeFilter<"AlertTrigger"> | Date | string
  }, "id">

  export type AlertTriggerOrderByWithAggregationInput = {
    id?: SortOrder
    alertId?: SortOrder
    triggerData?: SortOrder
    articleGenerated?: SortOrder
    articleId?: SortOrderInput | SortOrder
    triggeredAt?: SortOrder
    _count?: AlertTriggerCountOrderByAggregateInput
    _max?: AlertTriggerMaxOrderByAggregateInput
    _min?: AlertTriggerMinOrderByAggregateInput
  }

  export type AlertTriggerScalarWhereWithAggregatesInput = {
    AND?: AlertTriggerScalarWhereWithAggregatesInput | AlertTriggerScalarWhereWithAggregatesInput[]
    OR?: AlertTriggerScalarWhereWithAggregatesInput[]
    NOT?: AlertTriggerScalarWhereWithAggregatesInput | AlertTriggerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AlertTrigger"> | string
    alertId?: StringWithAggregatesFilter<"AlertTrigger"> | string
    triggerData?: JsonWithAggregatesFilter<"AlertTrigger">
    articleGenerated?: BoolWithAggregatesFilter<"AlertTrigger"> | boolean
    articleId?: StringNullableWithAggregatesFilter<"AlertTrigger"> | string | null
    triggeredAt?: DateTimeWithAggregatesFilter<"AlertTrigger"> | Date | string
  }

  export type PriceHistoryWhereInput = {
    AND?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    OR?: PriceHistoryWhereInput[]
    NOT?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    id?: IntFilter<"PriceHistory"> | number
    symbol?: StringFilter<"PriceHistory"> | string
    name?: StringFilter<"PriceHistory"> | string
    price?: FloatFilter<"PriceHistory"> | number
    volume?: FloatFilter<"PriceHistory"> | number
    marketCap?: FloatNullableFilter<"PriceHistory"> | number | null
    rank?: IntNullableFilter<"PriceHistory"> | number | null
    change1h?: FloatNullableFilter<"PriceHistory"> | number | null
    change24h?: FloatNullableFilter<"PriceHistory"> | number | null
    change7d?: FloatNullableFilter<"PriceHistory"> | number | null
    timestamp?: DateTimeFilter<"PriceHistory"> | Date | string
  }

  export type PriceHistoryOrderByWithRelationInput = {
    id?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrderInput | SortOrder
    rank?: SortOrderInput | SortOrder
    change1h?: SortOrderInput | SortOrder
    change24h?: SortOrderInput | SortOrder
    change7d?: SortOrderInput | SortOrder
    timestamp?: SortOrder
  }

  export type PriceHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    OR?: PriceHistoryWhereInput[]
    NOT?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    symbol?: StringFilter<"PriceHistory"> | string
    name?: StringFilter<"PriceHistory"> | string
    price?: FloatFilter<"PriceHistory"> | number
    volume?: FloatFilter<"PriceHistory"> | number
    marketCap?: FloatNullableFilter<"PriceHistory"> | number | null
    rank?: IntNullableFilter<"PriceHistory"> | number | null
    change1h?: FloatNullableFilter<"PriceHistory"> | number | null
    change24h?: FloatNullableFilter<"PriceHistory"> | number | null
    change7d?: FloatNullableFilter<"PriceHistory"> | number | null
    timestamp?: DateTimeFilter<"PriceHistory"> | Date | string
  }, "id">

  export type PriceHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrderInput | SortOrder
    rank?: SortOrderInput | SortOrder
    change1h?: SortOrderInput | SortOrder
    change24h?: SortOrderInput | SortOrder
    change7d?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: PriceHistoryCountOrderByAggregateInput
    _avg?: PriceHistoryAvgOrderByAggregateInput
    _max?: PriceHistoryMaxOrderByAggregateInput
    _min?: PriceHistoryMinOrderByAggregateInput
    _sum?: PriceHistorySumOrderByAggregateInput
  }

  export type PriceHistoryScalarWhereWithAggregatesInput = {
    AND?: PriceHistoryScalarWhereWithAggregatesInput | PriceHistoryScalarWhereWithAggregatesInput[]
    OR?: PriceHistoryScalarWhereWithAggregatesInput[]
    NOT?: PriceHistoryScalarWhereWithAggregatesInput | PriceHistoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PriceHistory"> | number
    symbol?: StringWithAggregatesFilter<"PriceHistory"> | string
    name?: StringWithAggregatesFilter<"PriceHistory"> | string
    price?: FloatWithAggregatesFilter<"PriceHistory"> | number
    volume?: FloatWithAggregatesFilter<"PriceHistory"> | number
    marketCap?: FloatNullableWithAggregatesFilter<"PriceHistory"> | number | null
    rank?: IntNullableWithAggregatesFilter<"PriceHistory"> | number | null
    change1h?: FloatNullableWithAggregatesFilter<"PriceHistory"> | number | null
    change24h?: FloatNullableWithAggregatesFilter<"PriceHistory"> | number | null
    change7d?: FloatNullableWithAggregatesFilter<"PriceHistory"> | number | null
    timestamp?: DateTimeWithAggregatesFilter<"PriceHistory"> | Date | string
  }

  export type AlertHistoryWhereInput = {
    AND?: AlertHistoryWhereInput | AlertHistoryWhereInput[]
    OR?: AlertHistoryWhereInput[]
    NOT?: AlertHistoryWhereInput | AlertHistoryWhereInput[]
    id?: IntFilter<"AlertHistory"> | number
    symbol?: StringFilter<"AlertHistory"> | string
    alertType?: StringFilter<"AlertHistory"> | string
    level?: StringFilter<"AlertHistory"> | string
    title?: StringFilter<"AlertHistory"> | string
    description?: StringFilter<"AlertHistory"> | string
    changePercent?: FloatNullableFilter<"AlertHistory"> | number | null
    timeframe?: StringNullableFilter<"AlertHistory"> | string | null
    volume?: FloatNullableFilter<"AlertHistory"> | number | null
    details?: JsonNullableFilter<"AlertHistory">
    isActive?: BoolFilter<"AlertHistory"> | boolean
    dismissed?: BoolFilter<"AlertHistory"> | boolean
    timestamp?: DateTimeFilter<"AlertHistory"> | Date | string
  }

  export type AlertHistoryOrderByWithRelationInput = {
    id?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    level?: SortOrder
    title?: SortOrder
    description?: SortOrder
    changePercent?: SortOrderInput | SortOrder
    timeframe?: SortOrderInput | SortOrder
    volume?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    isActive?: SortOrder
    dismissed?: SortOrder
    timestamp?: SortOrder
  }

  export type AlertHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AlertHistoryWhereInput | AlertHistoryWhereInput[]
    OR?: AlertHistoryWhereInput[]
    NOT?: AlertHistoryWhereInput | AlertHistoryWhereInput[]
    symbol?: StringFilter<"AlertHistory"> | string
    alertType?: StringFilter<"AlertHistory"> | string
    level?: StringFilter<"AlertHistory"> | string
    title?: StringFilter<"AlertHistory"> | string
    description?: StringFilter<"AlertHistory"> | string
    changePercent?: FloatNullableFilter<"AlertHistory"> | number | null
    timeframe?: StringNullableFilter<"AlertHistory"> | string | null
    volume?: FloatNullableFilter<"AlertHistory"> | number | null
    details?: JsonNullableFilter<"AlertHistory">
    isActive?: BoolFilter<"AlertHistory"> | boolean
    dismissed?: BoolFilter<"AlertHistory"> | boolean
    timestamp?: DateTimeFilter<"AlertHistory"> | Date | string
  }, "id">

  export type AlertHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    level?: SortOrder
    title?: SortOrder
    description?: SortOrder
    changePercent?: SortOrderInput | SortOrder
    timeframe?: SortOrderInput | SortOrder
    volume?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    isActive?: SortOrder
    dismissed?: SortOrder
    timestamp?: SortOrder
    _count?: AlertHistoryCountOrderByAggregateInput
    _avg?: AlertHistoryAvgOrderByAggregateInput
    _max?: AlertHistoryMaxOrderByAggregateInput
    _min?: AlertHistoryMinOrderByAggregateInput
    _sum?: AlertHistorySumOrderByAggregateInput
  }

  export type AlertHistoryScalarWhereWithAggregatesInput = {
    AND?: AlertHistoryScalarWhereWithAggregatesInput | AlertHistoryScalarWhereWithAggregatesInput[]
    OR?: AlertHistoryScalarWhereWithAggregatesInput[]
    NOT?: AlertHistoryScalarWhereWithAggregatesInput | AlertHistoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AlertHistory"> | number
    symbol?: StringWithAggregatesFilter<"AlertHistory"> | string
    alertType?: StringWithAggregatesFilter<"AlertHistory"> | string
    level?: StringWithAggregatesFilter<"AlertHistory"> | string
    title?: StringWithAggregatesFilter<"AlertHistory"> | string
    description?: StringWithAggregatesFilter<"AlertHistory"> | string
    changePercent?: FloatNullableWithAggregatesFilter<"AlertHistory"> | number | null
    timeframe?: StringNullableWithAggregatesFilter<"AlertHistory"> | string | null
    volume?: FloatNullableWithAggregatesFilter<"AlertHistory"> | number | null
    details?: JsonNullableWithAggregatesFilter<"AlertHistory">
    isActive?: BoolWithAggregatesFilter<"AlertHistory"> | boolean
    dismissed?: BoolWithAggregatesFilter<"AlertHistory"> | boolean
    timestamp?: DateTimeWithAggregatesFilter<"AlertHistory"> | Date | string
  }

  export type MarketIndicatorsWhereInput = {
    AND?: MarketIndicatorsWhereInput | MarketIndicatorsWhereInput[]
    OR?: MarketIndicatorsWhereInput[]
    NOT?: MarketIndicatorsWhereInput | MarketIndicatorsWhereInput[]
    id?: IntFilter<"MarketIndicators"> | number
    totalMarketCap?: FloatFilter<"MarketIndicators"> | number
    btcDominance?: FloatFilter<"MarketIndicators"> | number
    fearGreedIndex?: IntNullableFilter<"MarketIndicators"> | number | null
    totalVolume24h?: FloatNullableFilter<"MarketIndicators"> | number | null
    timestamp?: DateTimeFilter<"MarketIndicators"> | Date | string
  }

  export type MarketIndicatorsOrderByWithRelationInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrderInput | SortOrder
    totalVolume24h?: SortOrderInput | SortOrder
    timestamp?: SortOrder
  }

  export type MarketIndicatorsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MarketIndicatorsWhereInput | MarketIndicatorsWhereInput[]
    OR?: MarketIndicatorsWhereInput[]
    NOT?: MarketIndicatorsWhereInput | MarketIndicatorsWhereInput[]
    totalMarketCap?: FloatFilter<"MarketIndicators"> | number
    btcDominance?: FloatFilter<"MarketIndicators"> | number
    fearGreedIndex?: IntNullableFilter<"MarketIndicators"> | number | null
    totalVolume24h?: FloatNullableFilter<"MarketIndicators"> | number | null
    timestamp?: DateTimeFilter<"MarketIndicators"> | Date | string
  }, "id">

  export type MarketIndicatorsOrderByWithAggregationInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrderInput | SortOrder
    totalVolume24h?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: MarketIndicatorsCountOrderByAggregateInput
    _avg?: MarketIndicatorsAvgOrderByAggregateInput
    _max?: MarketIndicatorsMaxOrderByAggregateInput
    _min?: MarketIndicatorsMinOrderByAggregateInput
    _sum?: MarketIndicatorsSumOrderByAggregateInput
  }

  export type MarketIndicatorsScalarWhereWithAggregatesInput = {
    AND?: MarketIndicatorsScalarWhereWithAggregatesInput | MarketIndicatorsScalarWhereWithAggregatesInput[]
    OR?: MarketIndicatorsScalarWhereWithAggregatesInput[]
    NOT?: MarketIndicatorsScalarWhereWithAggregatesInput | MarketIndicatorsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MarketIndicators"> | number
    totalMarketCap?: FloatWithAggregatesFilter<"MarketIndicators"> | number
    btcDominance?: FloatWithAggregatesFilter<"MarketIndicators"> | number
    fearGreedIndex?: IntNullableWithAggregatesFilter<"MarketIndicators"> | number | null
    totalVolume24h?: FloatNullableWithAggregatesFilter<"MarketIndicators"> | number | null
    timestamp?: DateTimeWithAggregatesFilter<"MarketIndicators"> | Date | string
  }

  export type AlertSettingsWhereInput = {
    AND?: AlertSettingsWhereInput | AlertSettingsWhereInput[]
    OR?: AlertSettingsWhereInput[]
    NOT?: AlertSettingsWhereInput | AlertSettingsWhereInput[]
    id?: IntFilter<"AlertSettings"> | number
    organizationId?: StringFilter<"AlertSettings"> | string
    userId?: StringNullableFilter<"AlertSettings"> | string | null
    symbol?: StringNullableFilter<"AlertSettings"> | string | null
    alertType?: StringFilter<"AlertSettings"> | string
    isEnabled?: BoolFilter<"AlertSettings"> | boolean
    threshold?: FloatNullableFilter<"AlertSettings"> | number | null
    cooldownHours?: IntFilter<"AlertSettings"> | number
    maxAlertsPerDay?: IntFilter<"AlertSettings"> | number
    maxGlobalAlertsPerDay?: IntFilter<"AlertSettings"> | number
    createdAt?: DateTimeFilter<"AlertSettings"> | Date | string
    updatedAt?: DateTimeFilter<"AlertSettings"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type AlertSettingsOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrderInput | SortOrder
    symbol?: SortOrderInput | SortOrder
    alertType?: SortOrder
    isEnabled?: SortOrder
    threshold?: SortOrderInput | SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AlertSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AlertSettingsWhereInput | AlertSettingsWhereInput[]
    OR?: AlertSettingsWhereInput[]
    NOT?: AlertSettingsWhereInput | AlertSettingsWhereInput[]
    organizationId?: StringFilter<"AlertSettings"> | string
    userId?: StringNullableFilter<"AlertSettings"> | string | null
    symbol?: StringNullableFilter<"AlertSettings"> | string | null
    alertType?: StringFilter<"AlertSettings"> | string
    isEnabled?: BoolFilter<"AlertSettings"> | boolean
    threshold?: FloatNullableFilter<"AlertSettings"> | number | null
    cooldownHours?: IntFilter<"AlertSettings"> | number
    maxAlertsPerDay?: IntFilter<"AlertSettings"> | number
    maxGlobalAlertsPerDay?: IntFilter<"AlertSettings"> | number
    createdAt?: DateTimeFilter<"AlertSettings"> | Date | string
    updatedAt?: DateTimeFilter<"AlertSettings"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type AlertSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrderInput | SortOrder
    symbol?: SortOrderInput | SortOrder
    alertType?: SortOrder
    isEnabled?: SortOrder
    threshold?: SortOrderInput | SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AlertSettingsCountOrderByAggregateInput
    _avg?: AlertSettingsAvgOrderByAggregateInput
    _max?: AlertSettingsMaxOrderByAggregateInput
    _min?: AlertSettingsMinOrderByAggregateInput
    _sum?: AlertSettingsSumOrderByAggregateInput
  }

  export type AlertSettingsScalarWhereWithAggregatesInput = {
    AND?: AlertSettingsScalarWhereWithAggregatesInput | AlertSettingsScalarWhereWithAggregatesInput[]
    OR?: AlertSettingsScalarWhereWithAggregatesInput[]
    NOT?: AlertSettingsScalarWhereWithAggregatesInput | AlertSettingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"AlertSettings"> | number
    organizationId?: StringWithAggregatesFilter<"AlertSettings"> | string
    userId?: StringNullableWithAggregatesFilter<"AlertSettings"> | string | null
    symbol?: StringNullableWithAggregatesFilter<"AlertSettings"> | string | null
    alertType?: StringWithAggregatesFilter<"AlertSettings"> | string
    isEnabled?: BoolWithAggregatesFilter<"AlertSettings"> | boolean
    threshold?: FloatNullableWithAggregatesFilter<"AlertSettings"> | number | null
    cooldownHours?: IntWithAggregatesFilter<"AlertSettings"> | number
    maxAlertsPerDay?: IntWithAggregatesFilter<"AlertSettings"> | number
    maxGlobalAlertsPerDay?: IntWithAggregatesFilter<"AlertSettings"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AlertSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AlertSettings"> | Date | string
  }

  export type AIProviderSettingsWhereInput = {
    AND?: AIProviderSettingsWhereInput | AIProviderSettingsWhereInput[]
    OR?: AIProviderSettingsWhereInput[]
    NOT?: AIProviderSettingsWhereInput | AIProviderSettingsWhereInput[]
    id?: StringFilter<"AIProviderSettings"> | string
    organizationId?: StringFilter<"AIProviderSettings"> | string
    userId?: StringFilter<"AIProviderSettings"> | string
    provider?: EnumAIProviderFilter<"AIProviderSettings"> | $Enums.AIProvider
    apiKey?: StringFilter<"AIProviderSettings"> | string
    model?: StringFilter<"AIProviderSettings"> | string
    temperature?: FloatFilter<"AIProviderSettings"> | number
    maxTokens?: IntFilter<"AIProviderSettings"> | number
    topP?: FloatFilter<"AIProviderSettings"> | number
    frequencyPenalty?: FloatFilter<"AIProviderSettings"> | number
    presencePenalty?: FloatFilter<"AIProviderSettings"> | number
    advancedSettings?: JsonNullableFilter<"AIProviderSettings">
    isDefault?: BoolFilter<"AIProviderSettings"> | boolean
    isActive?: BoolFilter<"AIProviderSettings"> | boolean
    lastUsed?: DateTimeNullableFilter<"AIProviderSettings"> | Date | string | null
    lastModified?: DateTimeFilter<"AIProviderSettings"> | Date | string
    createdAt?: DateTimeFilter<"AIProviderSettings"> | Date | string
    updatedAt?: DateTimeFilter<"AIProviderSettings"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AIProviderSettingsOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    provider?: SortOrder
    apiKey?: SortOrder
    model?: SortOrder
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
    advancedSettings?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    lastUsed?: SortOrderInput | SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AIProviderSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_provider?: AIProviderSettingsUserIdProviderCompoundUniqueInput
    AND?: AIProviderSettingsWhereInput | AIProviderSettingsWhereInput[]
    OR?: AIProviderSettingsWhereInput[]
    NOT?: AIProviderSettingsWhereInput | AIProviderSettingsWhereInput[]
    organizationId?: StringFilter<"AIProviderSettings"> | string
    userId?: StringFilter<"AIProviderSettings"> | string
    provider?: EnumAIProviderFilter<"AIProviderSettings"> | $Enums.AIProvider
    apiKey?: StringFilter<"AIProviderSettings"> | string
    model?: StringFilter<"AIProviderSettings"> | string
    temperature?: FloatFilter<"AIProviderSettings"> | number
    maxTokens?: IntFilter<"AIProviderSettings"> | number
    topP?: FloatFilter<"AIProviderSettings"> | number
    frequencyPenalty?: FloatFilter<"AIProviderSettings"> | number
    presencePenalty?: FloatFilter<"AIProviderSettings"> | number
    advancedSettings?: JsonNullableFilter<"AIProviderSettings">
    isDefault?: BoolFilter<"AIProviderSettings"> | boolean
    isActive?: BoolFilter<"AIProviderSettings"> | boolean
    lastUsed?: DateTimeNullableFilter<"AIProviderSettings"> | Date | string | null
    lastModified?: DateTimeFilter<"AIProviderSettings"> | Date | string
    createdAt?: DateTimeFilter<"AIProviderSettings"> | Date | string
    updatedAt?: DateTimeFilter<"AIProviderSettings"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_provider">

  export type AIProviderSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    provider?: SortOrder
    apiKey?: SortOrder
    model?: SortOrder
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
    advancedSettings?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    lastUsed?: SortOrderInput | SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AIProviderSettingsCountOrderByAggregateInput
    _avg?: AIProviderSettingsAvgOrderByAggregateInput
    _max?: AIProviderSettingsMaxOrderByAggregateInput
    _min?: AIProviderSettingsMinOrderByAggregateInput
    _sum?: AIProviderSettingsSumOrderByAggregateInput
  }

  export type AIProviderSettingsScalarWhereWithAggregatesInput = {
    AND?: AIProviderSettingsScalarWhereWithAggregatesInput | AIProviderSettingsScalarWhereWithAggregatesInput[]
    OR?: AIProviderSettingsScalarWhereWithAggregatesInput[]
    NOT?: AIProviderSettingsScalarWhereWithAggregatesInput | AIProviderSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AIProviderSettings"> | string
    organizationId?: StringWithAggregatesFilter<"AIProviderSettings"> | string
    userId?: StringWithAggregatesFilter<"AIProviderSettings"> | string
    provider?: EnumAIProviderWithAggregatesFilter<"AIProviderSettings"> | $Enums.AIProvider
    apiKey?: StringWithAggregatesFilter<"AIProviderSettings"> | string
    model?: StringWithAggregatesFilter<"AIProviderSettings"> | string
    temperature?: FloatWithAggregatesFilter<"AIProviderSettings"> | number
    maxTokens?: IntWithAggregatesFilter<"AIProviderSettings"> | number
    topP?: FloatWithAggregatesFilter<"AIProviderSettings"> | number
    frequencyPenalty?: FloatWithAggregatesFilter<"AIProviderSettings"> | number
    presencePenalty?: FloatWithAggregatesFilter<"AIProviderSettings"> | number
    advancedSettings?: JsonNullableWithAggregatesFilter<"AIProviderSettings">
    isDefault?: BoolWithAggregatesFilter<"AIProviderSettings"> | boolean
    isActive?: BoolWithAggregatesFilter<"AIProviderSettings"> | boolean
    lastUsed?: DateTimeNullableWithAggregatesFilter<"AIProviderSettings"> | Date | string | null
    lastModified?: DateTimeWithAggregatesFilter<"AIProviderSettings"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"AIProviderSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AIProviderSettings"> | Date | string
  }

  export type SystemMetricsWhereInput = {
    AND?: SystemMetricsWhereInput | SystemMetricsWhereInput[]
    OR?: SystemMetricsWhereInput[]
    NOT?: SystemMetricsWhereInput | SystemMetricsWhereInput[]
    id?: StringFilter<"SystemMetrics"> | string
    date?: DateTimeFilter<"SystemMetrics"> | Date | string
    articlesGenerated?: IntFilter<"SystemMetrics"> | number
    templatesUsed?: IntFilter<"SystemMetrics"> | number
    newsProcessed?: IntFilter<"SystemMetrics"> | number
    alertsTriggered?: IntFilter<"SystemMetrics"> | number
    apiRequests?: IntFilter<"SystemMetrics"> | number
    aiTokensUsed?: IntFilter<"SystemMetrics"> | number
    systemUptime?: FloatFilter<"SystemMetrics"> | number
    avgResponseTime?: FloatFilter<"SystemMetrics"> | number
    errorCount?: IntFilter<"SystemMetrics"> | number
    createdAt?: DateTimeFilter<"SystemMetrics"> | Date | string
  }

  export type SystemMetricsOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrder
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
    createdAt?: SortOrder
  }

  export type SystemMetricsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    date?: Date | string
    AND?: SystemMetricsWhereInput | SystemMetricsWhereInput[]
    OR?: SystemMetricsWhereInput[]
    NOT?: SystemMetricsWhereInput | SystemMetricsWhereInput[]
    articlesGenerated?: IntFilter<"SystemMetrics"> | number
    templatesUsed?: IntFilter<"SystemMetrics"> | number
    newsProcessed?: IntFilter<"SystemMetrics"> | number
    alertsTriggered?: IntFilter<"SystemMetrics"> | number
    apiRequests?: IntFilter<"SystemMetrics"> | number
    aiTokensUsed?: IntFilter<"SystemMetrics"> | number
    systemUptime?: FloatFilter<"SystemMetrics"> | number
    avgResponseTime?: FloatFilter<"SystemMetrics"> | number
    errorCount?: IntFilter<"SystemMetrics"> | number
    createdAt?: DateTimeFilter<"SystemMetrics"> | Date | string
  }, "id" | "date">

  export type SystemMetricsOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrder
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
    createdAt?: SortOrder
    _count?: SystemMetricsCountOrderByAggregateInput
    _avg?: SystemMetricsAvgOrderByAggregateInput
    _max?: SystemMetricsMaxOrderByAggregateInput
    _min?: SystemMetricsMinOrderByAggregateInput
    _sum?: SystemMetricsSumOrderByAggregateInput
  }

  export type SystemMetricsScalarWhereWithAggregatesInput = {
    AND?: SystemMetricsScalarWhereWithAggregatesInput | SystemMetricsScalarWhereWithAggregatesInput[]
    OR?: SystemMetricsScalarWhereWithAggregatesInput[]
    NOT?: SystemMetricsScalarWhereWithAggregatesInput | SystemMetricsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SystemMetrics"> | string
    date?: DateTimeWithAggregatesFilter<"SystemMetrics"> | Date | string
    articlesGenerated?: IntWithAggregatesFilter<"SystemMetrics"> | number
    templatesUsed?: IntWithAggregatesFilter<"SystemMetrics"> | number
    newsProcessed?: IntWithAggregatesFilter<"SystemMetrics"> | number
    alertsTriggered?: IntWithAggregatesFilter<"SystemMetrics"> | number
    apiRequests?: IntWithAggregatesFilter<"SystemMetrics"> | number
    aiTokensUsed?: IntWithAggregatesFilter<"SystemMetrics"> | number
    systemUptime?: FloatWithAggregatesFilter<"SystemMetrics"> | number
    avgResponseTime?: FloatWithAggregatesFilter<"SystemMetrics"> | number
    errorCount?: IntWithAggregatesFilter<"SystemMetrics"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SystemMetrics"> | Date | string
  }

  export type OrganizationCreateInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutOrganizationInput
    articles?: ArticleCreateNestedManyWithoutOrganizationInput
    templates?: TemplateCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput
    articles?: ArticleUncheckedCreateNestedManyWithoutOrganizationInput
    templates?: TemplateUncheckedCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUncheckedUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationCreateManyInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrganizationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationMembershipCreateInput = {
    id?: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
    user: UserCreateNestedOneWithoutMembershipsInput
    organization: OrganizationCreateNestedOneWithoutMembershipsInput
  }

  export type OrganizationMembershipUncheckedCreateInput = {
    id?: string
    userId: string
    organizationId: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
  }

  export type OrganizationMembershipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutMembershipsNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutMembershipsNestedInput
  }

  export type OrganizationMembershipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationMembershipCreateManyInput = {
    id?: string
    userId: string
    organizationId: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
  }

  export type OrganizationMembershipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationMembershipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionCreateNestedManyWithoutAuthorInput
    articles?: ArticleCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput
    articles?: ArticleUncheckedCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionCreateInput = {
    id?: string
    sessionToken: string
    userAgent?: string | null
    ipAddress?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type UserSessionUncheckedCreateInput = {
    id?: string
    userId: string
    sessionToken: string
    userAgent?: string | null
    ipAddress?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type UserSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type UserSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionCreateManyInput = {
    id?: string
    userId: string
    sessionToken: string
    userAgent?: string | null
    ipAddress?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type UserSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleCreateInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutArticlesInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionCreateNestedManyWithoutArticleInput
    author?: UserCreateNestedOneWithoutArticlesInput
    template?: TemplateCreateNestedOneWithoutArticlesInput
  }

  export type ArticleUncheckedCreateInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionUncheckedCreateNestedManyWithoutArticleInput
  }

  export type ArticleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutArticlesNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUpdateManyWithoutArticleNestedInput
    author?: UserUpdateOneWithoutArticlesNestedInput
    template?: TemplateUpdateOneWithoutArticlesNestedInput
  }

  export type ArticleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUncheckedUpdateManyWithoutArticleNestedInput
  }

  export type ArticleCreateManyInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateCreateInput = {
    id?: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutTemplatesInput
    articles?: ArticleCreateNestedManyWithoutTemplateInput
  }

  export type TemplateUncheckedCreateInput = {
    id?: string
    organizationId: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    articles?: ArticleUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type TemplateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutTemplatesNestedInput
    articles?: ArticleUpdateManyWithoutTemplateNestedInput
  }

  export type TemplateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    articles?: ArticleUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type TemplateCreateManyInput = {
    id?: string
    organizationId: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleVersionCreateInput = {
    id?: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    changeType?: string | null
    article: ArticleCreateNestedOneWithoutVersionsInput
    author?: UserCreateNestedOneWithoutArticleVersionsInput
  }

  export type ArticleVersionUncheckedCreateInput = {
    id?: string
    articleId: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    authorId?: string | null
    changeType?: string | null
  }

  export type ArticleVersionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
    article?: ArticleUpdateOneRequiredWithoutVersionsNestedInput
    author?: UserUpdateOneWithoutArticleVersionsNestedInput
  }

  export type ArticleVersionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleVersionCreateManyInput = {
    id?: string
    articleId: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    authorId?: string | null
    changeType?: string | null
  }

  export type ArticleVersionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleVersionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleAnalyticsCreateInput = {
    id?: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAnalyticsInput
    article: ArticleCreateNestedOneWithoutAnalyticsInput
  }

  export type ArticleAnalyticsUncheckedCreateInput = {
    id?: string
    organizationId: string
    articleId: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleAnalyticsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAnalyticsNestedInput
    article?: ArticleUpdateOneRequiredWithoutAnalyticsNestedInput
  }

  export type ArticleAnalyticsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleAnalyticsCreateManyInput = {
    id?: string
    organizationId: string
    articleId: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleAnalyticsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleAnalyticsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsItemCreateInput = {
    id?: string
    title: string
    summary?: string | null
    content?: string | null
    url: string
    imageUrl?: string | null
    guid: string
    source: string
    author?: string | null
    sentiment?: number | null
    importance?: number
    aiSummary?: string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: boolean
    generatedArticleId?: string | null
    publishedAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsItemUncheckedCreateInput = {
    id?: string
    title: string
    summary?: string | null
    content?: string | null
    url: string
    imageUrl?: string | null
    guid: string
    source: string
    author?: string | null
    sentiment?: number | null
    importance?: number
    aiSummary?: string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: boolean
    generatedArticleId?: string | null
    publishedAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    guid?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableFloatFieldUpdateOperationsInput | number | null
    importance?: IntFieldUpdateOperationsInput | number
    aiSummary?: NullableStringFieldUpdateOperationsInput | string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: BoolFieldUpdateOperationsInput | boolean
    generatedArticleId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    guid?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableFloatFieldUpdateOperationsInput | number | null
    importance?: IntFieldUpdateOperationsInput | number
    aiSummary?: NullableStringFieldUpdateOperationsInput | string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: BoolFieldUpdateOperationsInput | boolean
    generatedArticleId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsItemCreateManyInput = {
    id?: string
    title: string
    summary?: string | null
    content?: string | null
    url: string
    imageUrl?: string | null
    guid: string
    source: string
    author?: string | null
    sentiment?: number | null
    importance?: number
    aiSummary?: string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: boolean
    generatedArticleId?: string | null
    publishedAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NewsItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    guid?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableFloatFieldUpdateOperationsInput | number | null
    importance?: IntFieldUpdateOperationsInput | number
    aiSummary?: NullableStringFieldUpdateOperationsInput | string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: BoolFieldUpdateOperationsInput | boolean
    generatedArticleId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NewsItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    guid?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableFloatFieldUpdateOperationsInput | number | null
    importance?: IntFieldUpdateOperationsInput | number
    aiSummary?: NullableStringFieldUpdateOperationsInput | string | null
    topics?: NullableJsonNullValueInput | InputJsonValue
    coins?: NullableJsonNullValueInput | InputJsonValue
    companies?: NullableJsonNullValueInput | InputJsonValue
    products?: NullableJsonNullValueInput | InputJsonValue
    technology?: NullableJsonNullValueInput | InputJsonValue
    market?: NullableJsonNullValueInput | InputJsonValue
    regulatory?: NullableJsonNullValueInput | InputJsonValue
    regions?: NullableJsonNullValueInput | InputJsonValue
    hasGeneratedArticle?: BoolFieldUpdateOperationsInput | boolean
    generatedArticleId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RSSSourceCreateInput = {
    id?: string
    name: string
    url: string
    category: string
    description?: string | null
    enabled?: boolean
    lastCollected?: Date | string | null
    totalCollected?: number
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RSSSourceUncheckedCreateInput = {
    id?: string
    name: string
    url: string
    category: string
    description?: string | null
    enabled?: boolean
    lastCollected?: Date | string | null
    totalCollected?: number
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RSSSourceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled?: BoolFieldUpdateOperationsInput | boolean
    lastCollected?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalCollected?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RSSSourceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled?: BoolFieldUpdateOperationsInput | boolean
    lastCollected?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalCollected?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RSSSourceCreateManyInput = {
    id?: string
    name: string
    url: string
    category: string
    description?: string | null
    enabled?: boolean
    lastCollected?: Date | string | null
    totalCollected?: number
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RSSSourceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled?: BoolFieldUpdateOperationsInput | boolean
    lastCollected?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalCollected?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RSSSourceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    enabled?: BoolFieldUpdateOperationsInput | boolean
    lastCollected?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalCollected?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceAlertCreateInput = {
    id?: string
    coin: string
    alertType: $Enums.AlertType
    condition: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    message?: string | null
    autoGenerate?: boolean
    templateId?: string | null
    lastTriggered?: Date | string | null
    triggerCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceAlertUncheckedCreateInput = {
    id?: string
    coin: string
    alertType: $Enums.AlertType
    condition: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    message?: string | null
    autoGenerate?: boolean
    templateId?: string | null
    lastTriggered?: Date | string | null
    triggerCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceAlertUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    coin?: StringFieldUpdateOperationsInput | string
    alertType?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    condition?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    message?: NullableStringFieldUpdateOperationsInput | string | null
    autoGenerate?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    lastTriggered?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    triggerCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceAlertUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    coin?: StringFieldUpdateOperationsInput | string
    alertType?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    condition?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    message?: NullableStringFieldUpdateOperationsInput | string | null
    autoGenerate?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    lastTriggered?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    triggerCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceAlertCreateManyInput = {
    id?: string
    coin: string
    alertType: $Enums.AlertType
    condition: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    message?: string | null
    autoGenerate?: boolean
    templateId?: string | null
    lastTriggered?: Date | string | null
    triggerCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceAlertUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    coin?: StringFieldUpdateOperationsInput | string
    alertType?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    condition?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    message?: NullableStringFieldUpdateOperationsInput | string | null
    autoGenerate?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    lastTriggered?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    triggerCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceAlertUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    coin?: StringFieldUpdateOperationsInput | string
    alertType?: EnumAlertTypeFieldUpdateOperationsInput | $Enums.AlertType
    condition?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    message?: NullableStringFieldUpdateOperationsInput | string | null
    autoGenerate?: BoolFieldUpdateOperationsInput | boolean
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    lastTriggered?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    triggerCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertTriggerCreateInput = {
    id?: string
    alertId: string
    triggerData: JsonNullValueInput | InputJsonValue
    articleGenerated?: boolean
    articleId?: string | null
    triggeredAt?: Date | string
  }

  export type AlertTriggerUncheckedCreateInput = {
    id?: string
    alertId: string
    triggerData: JsonNullValueInput | InputJsonValue
    articleGenerated?: boolean
    articleId?: string | null
    triggeredAt?: Date | string
  }

  export type AlertTriggerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    alertId?: StringFieldUpdateOperationsInput | string
    triggerData?: JsonNullValueInput | InputJsonValue
    articleGenerated?: BoolFieldUpdateOperationsInput | boolean
    articleId?: NullableStringFieldUpdateOperationsInput | string | null
    triggeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertTriggerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    alertId?: StringFieldUpdateOperationsInput | string
    triggerData?: JsonNullValueInput | InputJsonValue
    articleGenerated?: BoolFieldUpdateOperationsInput | boolean
    articleId?: NullableStringFieldUpdateOperationsInput | string | null
    triggeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertTriggerCreateManyInput = {
    id?: string
    alertId: string
    triggerData: JsonNullValueInput | InputJsonValue
    articleGenerated?: boolean
    articleId?: string | null
    triggeredAt?: Date | string
  }

  export type AlertTriggerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    alertId?: StringFieldUpdateOperationsInput | string
    triggerData?: JsonNullValueInput | InputJsonValue
    articleGenerated?: BoolFieldUpdateOperationsInput | boolean
    articleId?: NullableStringFieldUpdateOperationsInput | string | null
    triggeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertTriggerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    alertId?: StringFieldUpdateOperationsInput | string
    triggerData?: JsonNullValueInput | InputJsonValue
    articleGenerated?: BoolFieldUpdateOperationsInput | boolean
    articleId?: NullableStringFieldUpdateOperationsInput | string | null
    triggeredAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceHistoryCreateInput = {
    symbol: string
    name: string
    price: number
    volume: number
    marketCap?: number | null
    rank?: number | null
    change1h?: number | null
    change24h?: number | null
    change7d?: number | null
    timestamp?: Date | string
  }

  export type PriceHistoryUncheckedCreateInput = {
    id?: number
    symbol: string
    name: string
    price: number
    volume: number
    marketCap?: number | null
    rank?: number | null
    change1h?: number | null
    change24h?: number | null
    change7d?: number | null
    timestamp?: Date | string
  }

  export type PriceHistoryUpdateInput = {
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    volume?: FloatFieldUpdateOperationsInput | number
    marketCap?: NullableFloatFieldUpdateOperationsInput | number | null
    rank?: NullableIntFieldUpdateOperationsInput | number | null
    change1h?: NullableFloatFieldUpdateOperationsInput | number | null
    change24h?: NullableFloatFieldUpdateOperationsInput | number | null
    change7d?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceHistoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    volume?: FloatFieldUpdateOperationsInput | number
    marketCap?: NullableFloatFieldUpdateOperationsInput | number | null
    rank?: NullableIntFieldUpdateOperationsInput | number | null
    change1h?: NullableFloatFieldUpdateOperationsInput | number | null
    change24h?: NullableFloatFieldUpdateOperationsInput | number | null
    change7d?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceHistoryCreateManyInput = {
    id?: number
    symbol: string
    name: string
    price: number
    volume: number
    marketCap?: number | null
    rank?: number | null
    change1h?: number | null
    change24h?: number | null
    change7d?: number | null
    timestamp?: Date | string
  }

  export type PriceHistoryUpdateManyMutationInput = {
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    volume?: FloatFieldUpdateOperationsInput | number
    marketCap?: NullableFloatFieldUpdateOperationsInput | number | null
    rank?: NullableIntFieldUpdateOperationsInput | number | null
    change1h?: NullableFloatFieldUpdateOperationsInput | number | null
    change24h?: NullableFloatFieldUpdateOperationsInput | number | null
    change7d?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceHistoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    volume?: FloatFieldUpdateOperationsInput | number
    marketCap?: NullableFloatFieldUpdateOperationsInput | number | null
    rank?: NullableIntFieldUpdateOperationsInput | number | null
    change1h?: NullableFloatFieldUpdateOperationsInput | number | null
    change24h?: NullableFloatFieldUpdateOperationsInput | number | null
    change7d?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertHistoryCreateInput = {
    symbol: string
    alertType: string
    level: string
    title: string
    description: string
    changePercent?: number | null
    timeframe?: string | null
    volume?: number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    dismissed?: boolean
    timestamp?: Date | string
  }

  export type AlertHistoryUncheckedCreateInput = {
    id?: number
    symbol: string
    alertType: string
    level: string
    title: string
    description: string
    changePercent?: number | null
    timeframe?: string | null
    volume?: number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    dismissed?: boolean
    timestamp?: Date | string
  }

  export type AlertHistoryUpdateInput = {
    symbol?: StringFieldUpdateOperationsInput | string
    alertType?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    changePercent?: NullableFloatFieldUpdateOperationsInput | number | null
    timeframe?: NullableStringFieldUpdateOperationsInput | string | null
    volume?: NullableFloatFieldUpdateOperationsInput | number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertHistoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    symbol?: StringFieldUpdateOperationsInput | string
    alertType?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    changePercent?: NullableFloatFieldUpdateOperationsInput | number | null
    timeframe?: NullableStringFieldUpdateOperationsInput | string | null
    volume?: NullableFloatFieldUpdateOperationsInput | number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertHistoryCreateManyInput = {
    id?: number
    symbol: string
    alertType: string
    level: string
    title: string
    description: string
    changePercent?: number | null
    timeframe?: string | null
    volume?: number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    dismissed?: boolean
    timestamp?: Date | string
  }

  export type AlertHistoryUpdateManyMutationInput = {
    symbol?: StringFieldUpdateOperationsInput | string
    alertType?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    changePercent?: NullableFloatFieldUpdateOperationsInput | number | null
    timeframe?: NullableStringFieldUpdateOperationsInput | string | null
    volume?: NullableFloatFieldUpdateOperationsInput | number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertHistoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    symbol?: StringFieldUpdateOperationsInput | string
    alertType?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    changePercent?: NullableFloatFieldUpdateOperationsInput | number | null
    timeframe?: NullableStringFieldUpdateOperationsInput | string | null
    volume?: NullableFloatFieldUpdateOperationsInput | number | null
    details?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketIndicatorsCreateInput = {
    totalMarketCap: number
    btcDominance: number
    fearGreedIndex?: number | null
    totalVolume24h?: number | null
    timestamp?: Date | string
  }

  export type MarketIndicatorsUncheckedCreateInput = {
    id?: number
    totalMarketCap: number
    btcDominance: number
    fearGreedIndex?: number | null
    totalVolume24h?: number | null
    timestamp?: Date | string
  }

  export type MarketIndicatorsUpdateInput = {
    totalMarketCap?: FloatFieldUpdateOperationsInput | number
    btcDominance?: FloatFieldUpdateOperationsInput | number
    fearGreedIndex?: NullableIntFieldUpdateOperationsInput | number | null
    totalVolume24h?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketIndicatorsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    totalMarketCap?: FloatFieldUpdateOperationsInput | number
    btcDominance?: FloatFieldUpdateOperationsInput | number
    fearGreedIndex?: NullableIntFieldUpdateOperationsInput | number | null
    totalVolume24h?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketIndicatorsCreateManyInput = {
    id?: number
    totalMarketCap: number
    btcDominance: number
    fearGreedIndex?: number | null
    totalVolume24h?: number | null
    timestamp?: Date | string
  }

  export type MarketIndicatorsUpdateManyMutationInput = {
    totalMarketCap?: FloatFieldUpdateOperationsInput | number
    btcDominance?: FloatFieldUpdateOperationsInput | number
    fearGreedIndex?: NullableIntFieldUpdateOperationsInput | number | null
    totalVolume24h?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketIndicatorsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    totalMarketCap?: FloatFieldUpdateOperationsInput | number
    btcDominance?: FloatFieldUpdateOperationsInput | number
    fearGreedIndex?: NullableIntFieldUpdateOperationsInput | number | null
    totalVolume24h?: NullableFloatFieldUpdateOperationsInput | number | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsCreateInput = {
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAlertSettingsInput
    user?: UserCreateNestedOneWithoutAlertSettingsInput
  }

  export type AlertSettingsUncheckedCreateInput = {
    id?: number
    organizationId: string
    userId?: string | null
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AlertSettingsUpdateInput = {
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAlertSettingsNestedInput
    user?: UserUpdateOneWithoutAlertSettingsNestedInput
  }

  export type AlertSettingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsCreateManyInput = {
    id?: number
    organizationId: string
    userId?: string | null
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AlertSettingsUpdateManyMutationInput = {
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsCreateInput = {
    id?: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAiProviderSettingsInput
    user: UserCreateNestedOneWithoutAiProviderSettingsInput
  }

  export type AIProviderSettingsUncheckedCreateInput = {
    id?: string
    organizationId: string
    userId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIProviderSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAiProviderSettingsNestedInput
    user?: UserUpdateOneRequiredWithoutAiProviderSettingsNestedInput
  }

  export type AIProviderSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsCreateManyInput = {
    id?: string
    organizationId: string
    userId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIProviderSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemMetricsCreateInput = {
    id?: string
    date: Date | string
    articlesGenerated?: number
    templatesUsed?: number
    newsProcessed?: number
    alertsTriggered?: number
    apiRequests?: number
    aiTokensUsed?: number
    systemUptime?: number
    avgResponseTime?: number
    errorCount?: number
    createdAt?: Date | string
  }

  export type SystemMetricsUncheckedCreateInput = {
    id?: string
    date: Date | string
    articlesGenerated?: number
    templatesUsed?: number
    newsProcessed?: number
    alertsTriggered?: number
    apiRequests?: number
    aiTokensUsed?: number
    systemUptime?: number
    avgResponseTime?: number
    errorCount?: number
    createdAt?: Date | string
  }

  export type SystemMetricsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    articlesGenerated?: IntFieldUpdateOperationsInput | number
    templatesUsed?: IntFieldUpdateOperationsInput | number
    newsProcessed?: IntFieldUpdateOperationsInput | number
    alertsTriggered?: IntFieldUpdateOperationsInput | number
    apiRequests?: IntFieldUpdateOperationsInput | number
    aiTokensUsed?: IntFieldUpdateOperationsInput | number
    systemUptime?: FloatFieldUpdateOperationsInput | number
    avgResponseTime?: FloatFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemMetricsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    articlesGenerated?: IntFieldUpdateOperationsInput | number
    templatesUsed?: IntFieldUpdateOperationsInput | number
    newsProcessed?: IntFieldUpdateOperationsInput | number
    alertsTriggered?: IntFieldUpdateOperationsInput | number
    apiRequests?: IntFieldUpdateOperationsInput | number
    aiTokensUsed?: IntFieldUpdateOperationsInput | number
    systemUptime?: FloatFieldUpdateOperationsInput | number
    avgResponseTime?: FloatFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemMetricsCreateManyInput = {
    id?: string
    date: Date | string
    articlesGenerated?: number
    templatesUsed?: number
    newsProcessed?: number
    alertsTriggered?: number
    apiRequests?: number
    aiTokensUsed?: number
    systemUptime?: number
    avgResponseTime?: number
    errorCount?: number
    createdAt?: Date | string
  }

  export type SystemMetricsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    articlesGenerated?: IntFieldUpdateOperationsInput | number
    templatesUsed?: IntFieldUpdateOperationsInput | number
    newsProcessed?: IntFieldUpdateOperationsInput | number
    alertsTriggered?: IntFieldUpdateOperationsInput | number
    apiRequests?: IntFieldUpdateOperationsInput | number
    aiTokensUsed?: IntFieldUpdateOperationsInput | number
    systemUptime?: FloatFieldUpdateOperationsInput | number
    avgResponseTime?: FloatFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SystemMetricsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    articlesGenerated?: IntFieldUpdateOperationsInput | number
    templatesUsed?: IntFieldUpdateOperationsInput | number
    newsProcessed?: IntFieldUpdateOperationsInput | number
    alertsTriggered?: IntFieldUpdateOperationsInput | number
    apiRequests?: IntFieldUpdateOperationsInput | number
    aiTokensUsed?: IntFieldUpdateOperationsInput | number
    systemUptime?: FloatFieldUpdateOperationsInput | number
    avgResponseTime?: FloatFieldUpdateOperationsInput | number
    errorCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type OrganizationMembershipListRelationFilter = {
    every?: OrganizationMembershipWhereInput
    some?: OrganizationMembershipWhereInput
    none?: OrganizationMembershipWhereInput
  }

  export type ArticleListRelationFilter = {
    every?: ArticleWhereInput
    some?: ArticleWhereInput
    none?: ArticleWhereInput
  }

  export type TemplateListRelationFilter = {
    every?: TemplateWhereInput
    some?: TemplateWhereInput
    none?: TemplateWhereInput
  }

  export type AIProviderSettingsListRelationFilter = {
    every?: AIProviderSettingsWhereInput
    some?: AIProviderSettingsWhereInput
    none?: AIProviderSettingsWhereInput
  }

  export type AlertSettingsListRelationFilter = {
    every?: AlertSettingsWhereInput
    some?: AlertSettingsWhereInput
    none?: AlertSettingsWhereInput
  }

  export type ArticleAnalyticsListRelationFilter = {
    every?: ArticleAnalyticsWhereInput
    some?: ArticleAnalyticsWhereInput
    none?: ArticleAnalyticsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type OrganizationMembershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ArticleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TemplateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AIProviderSettingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlertSettingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ArticleAnalyticsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrganizationCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    domain?: SortOrder
    settings?: SortOrder
    plan?: SortOrder
    maxUsers?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrganizationAvgOrderByAggregateInput = {
    maxUsers?: SortOrder
  }

  export type OrganizationMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    domain?: SortOrder
    plan?: SortOrder
    maxUsers?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrganizationMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    domain?: SortOrder
    plan?: SortOrder
    maxUsers?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrganizationSumOrderByAggregateInput = {
    maxUsers?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumMemberRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.MemberRole | EnumMemberRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMemberRoleFilter<$PrismaModel> | $Enums.MemberRole
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type OrganizationScalarRelationFilter = {
    is?: OrganizationWhereInput
    isNot?: OrganizationWhereInput
  }

  export type OrganizationMembershipUserIdOrganizationIdCompoundUniqueInput = {
    userId: string
    organizationId: string
  }

  export type OrganizationMembershipCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    joinedAt?: SortOrder
  }

  export type OrganizationMembershipMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    joinedAt?: SortOrder
  }

  export type OrganizationMembershipMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    organizationId?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    joinedAt?: SortOrder
  }

  export type EnumMemberRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MemberRole | EnumMemberRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMemberRoleWithAggregatesFilter<$PrismaModel> | $Enums.MemberRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMemberRoleFilter<$PrismaModel>
    _max?: NestedEnumMemberRoleFilter<$PrismaModel>
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ArticleVersionListRelationFilter = {
    every?: ArticleVersionWhereInput
    some?: ArticleVersionWhereInput
    none?: ArticleVersionWhereInput
  }

  export type UserSessionListRelationFilter = {
    every?: UserSessionWhereInput
    some?: UserSessionWhereInput
    none?: UserSessionWhereInput
  }

  export type ArticleVersionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    preferences?: SortOrder
    mfaEnabled?: SortOrder
    mfaSecret?: SortOrder
    mfaBackupCodes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    mfaEnabled?: SortOrder
    mfaSecret?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    isActive?: SortOrder
    lastLoginAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    mfaEnabled?: SortOrder
    mfaSecret?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type UserSessionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionToken?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type UserSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionToken?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type UserSessionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionToken?: SortOrder
    userAgent?: SortOrder
    ipAddress?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumArticleStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ArticleStatus | EnumArticleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumArticleStatusFilter<$PrismaModel> | $Enums.ArticleStatus
  }

  export type EnumSourceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SourceType | EnumSourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSourceTypeFilter<$PrismaModel> | $Enums.SourceType
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type TemplateNullableScalarRelationFilter = {
    is?: TemplateWhereInput | null
    isNot?: TemplateWhereInput | null
  }

  export type ArticleCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    slug?: SortOrder
    status?: SortOrder
    authorId?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    tags?: SortOrder
    keywords?: SortOrder
    sourceType?: SortOrder
    sourceData?: SortOrder
    generatedBy?: SortOrder
    templateId?: SortOrder
    publishedAt?: SortOrder
    scheduledAt?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArticleAvgOrderByAggregateInput = {
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
  }

  export type ArticleMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    slug?: SortOrder
    status?: SortOrder
    authorId?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    sourceType?: SortOrder
    generatedBy?: SortOrder
    templateId?: SortOrder
    publishedAt?: SortOrder
    scheduledAt?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArticleMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    slug?: SortOrder
    status?: SortOrder
    authorId?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    sourceType?: SortOrder
    generatedBy?: SortOrder
    templateId?: SortOrder
    publishedAt?: SortOrder
    scheduledAt?: SortOrder
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArticleSumOrderByAggregateInput = {
    viewCount?: SortOrder
    shareCount?: SortOrder
    engagementRate?: SortOrder
  }

  export type EnumArticleStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ArticleStatus | EnumArticleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumArticleStatusWithAggregatesFilter<$PrismaModel> | $Enums.ArticleStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumArticleStatusFilter<$PrismaModel>
    _max?: NestedEnumArticleStatusFilter<$PrismaModel>
  }

  export type EnumSourceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SourceType | EnumSourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSourceTypeWithAggregatesFilter<$PrismaModel> | $Enums.SourceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSourceTypeFilter<$PrismaModel>
    _max?: NestedEnumSourceTypeFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type TemplateCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    content?: SortOrder
    variables?: SortOrder
    category?: SortOrder
    usageCount?: SortOrder
    lastUsedAt?: SortOrder
    isActive?: SortOrder
    isSystem?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TemplateAvgOrderByAggregateInput = {
    usageCount?: SortOrder
  }

  export type TemplateMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    content?: SortOrder
    category?: SortOrder
    usageCount?: SortOrder
    lastUsedAt?: SortOrder
    isActive?: SortOrder
    isSystem?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TemplateMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    content?: SortOrder
    category?: SortOrder
    usageCount?: SortOrder
    lastUsedAt?: SortOrder
    isActive?: SortOrder
    isSystem?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TemplateSumOrderByAggregateInput = {
    usageCount?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type ArticleScalarRelationFilter = {
    is?: ArticleWhereInput
    isNot?: ArticleWhereInput
  }

  export type ArticleVersionArticleIdVersionCompoundUniqueInput = {
    articleId: string
    version: number
  }

  export type ArticleVersionCountOrderByAggregateInput = {
    id?: SortOrder
    articleId?: SortOrder
    version?: SortOrder
    title?: SortOrder
    content?: SortOrder
    changes?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    changeType?: SortOrder
  }

  export type ArticleVersionAvgOrderByAggregateInput = {
    version?: SortOrder
  }

  export type ArticleVersionMaxOrderByAggregateInput = {
    id?: SortOrder
    articleId?: SortOrder
    version?: SortOrder
    title?: SortOrder
    content?: SortOrder
    changes?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    changeType?: SortOrder
  }

  export type ArticleVersionMinOrderByAggregateInput = {
    id?: SortOrder
    articleId?: SortOrder
    version?: SortOrder
    title?: SortOrder
    content?: SortOrder
    changes?: SortOrder
    createdAt?: SortOrder
    authorId?: SortOrder
    changeType?: SortOrder
  }

  export type ArticleVersionSumOrderByAggregateInput = {
    version?: SortOrder
  }

  export type ArticleAnalyticsArticleIdDateCompoundUniqueInput = {
    articleId: string
    date: Date | string
  }

  export type ArticleAnalyticsCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    articleId?: SortOrder
    date?: SortOrder
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
    trafficSources?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArticleAnalyticsAvgOrderByAggregateInput = {
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
  }

  export type ArticleAnalyticsMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    articleId?: SortOrder
    date?: SortOrder
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArticleAnalyticsMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    articleId?: SortOrder
    date?: SortOrder
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ArticleAnalyticsSumOrderByAggregateInput = {
    views?: SortOrder
    uniqueViews?: SortOrder
    shares?: SortOrder
    comments?: SortOrder
    avgReadTime?: SortOrder
    bounceRate?: SortOrder
    engagementRate?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NewsItemCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    content?: SortOrder
    url?: SortOrder
    imageUrl?: SortOrder
    guid?: SortOrder
    source?: SortOrder
    author?: SortOrder
    sentiment?: SortOrder
    importance?: SortOrder
    aiSummary?: SortOrder
    topics?: SortOrder
    coins?: SortOrder
    companies?: SortOrder
    products?: SortOrder
    technology?: SortOrder
    market?: SortOrder
    regulatory?: SortOrder
    regions?: SortOrder
    hasGeneratedArticle?: SortOrder
    generatedArticleId?: SortOrder
    publishedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsItemAvgOrderByAggregateInput = {
    sentiment?: SortOrder
    importance?: SortOrder
  }

  export type NewsItemMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    content?: SortOrder
    url?: SortOrder
    imageUrl?: SortOrder
    guid?: SortOrder
    source?: SortOrder
    author?: SortOrder
    sentiment?: SortOrder
    importance?: SortOrder
    aiSummary?: SortOrder
    hasGeneratedArticle?: SortOrder
    generatedArticleId?: SortOrder
    publishedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsItemMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    summary?: SortOrder
    content?: SortOrder
    url?: SortOrder
    imageUrl?: SortOrder
    guid?: SortOrder
    source?: SortOrder
    author?: SortOrder
    sentiment?: SortOrder
    importance?: SortOrder
    aiSummary?: SortOrder
    hasGeneratedArticle?: SortOrder
    generatedArticleId?: SortOrder
    publishedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NewsItemSumOrderByAggregateInput = {
    sentiment?: SortOrder
    importance?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type RSSSourceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    category?: SortOrder
    description?: SortOrder
    enabled?: SortOrder
    lastCollected?: SortOrder
    totalCollected?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RSSSourceAvgOrderByAggregateInput = {
    totalCollected?: SortOrder
  }

  export type RSSSourceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    category?: SortOrder
    description?: SortOrder
    enabled?: SortOrder
    lastCollected?: SortOrder
    totalCollected?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RSSSourceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    category?: SortOrder
    description?: SortOrder
    enabled?: SortOrder
    lastCollected?: SortOrder
    totalCollected?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RSSSourceSumOrderByAggregateInput = {
    totalCollected?: SortOrder
  }

  export type EnumAlertTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeFilter<$PrismaModel> | $Enums.AlertType
  }

  export type PriceAlertCountOrderByAggregateInput = {
    id?: SortOrder
    coin?: SortOrder
    alertType?: SortOrder
    condition?: SortOrder
    isActive?: SortOrder
    message?: SortOrder
    autoGenerate?: SortOrder
    templateId?: SortOrder
    lastTriggered?: SortOrder
    triggerCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAlertAvgOrderByAggregateInput = {
    triggerCount?: SortOrder
  }

  export type PriceAlertMaxOrderByAggregateInput = {
    id?: SortOrder
    coin?: SortOrder
    alertType?: SortOrder
    isActive?: SortOrder
    message?: SortOrder
    autoGenerate?: SortOrder
    templateId?: SortOrder
    lastTriggered?: SortOrder
    triggerCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAlertMinOrderByAggregateInput = {
    id?: SortOrder
    coin?: SortOrder
    alertType?: SortOrder
    isActive?: SortOrder
    message?: SortOrder
    autoGenerate?: SortOrder
    templateId?: SortOrder
    lastTriggered?: SortOrder
    triggerCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAlertSumOrderByAggregateInput = {
    triggerCount?: SortOrder
  }

  export type EnumAlertTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeWithAggregatesFilter<$PrismaModel> | $Enums.AlertType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlertTypeFilter<$PrismaModel>
    _max?: NestedEnumAlertTypeFilter<$PrismaModel>
  }

  export type AlertTriggerCountOrderByAggregateInput = {
    id?: SortOrder
    alertId?: SortOrder
    triggerData?: SortOrder
    articleGenerated?: SortOrder
    articleId?: SortOrder
    triggeredAt?: SortOrder
  }

  export type AlertTriggerMaxOrderByAggregateInput = {
    id?: SortOrder
    alertId?: SortOrder
    articleGenerated?: SortOrder
    articleId?: SortOrder
    triggeredAt?: SortOrder
  }

  export type AlertTriggerMinOrderByAggregateInput = {
    id?: SortOrder
    alertId?: SortOrder
    articleGenerated?: SortOrder
    articleId?: SortOrder
    triggeredAt?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type PriceHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrder
    rank?: SortOrder
    change1h?: SortOrder
    change24h?: SortOrder
    change7d?: SortOrder
    timestamp?: SortOrder
  }

  export type PriceHistoryAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrder
    rank?: SortOrder
    change1h?: SortOrder
    change24h?: SortOrder
    change7d?: SortOrder
  }

  export type PriceHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrder
    rank?: SortOrder
    change1h?: SortOrder
    change24h?: SortOrder
    change7d?: SortOrder
    timestamp?: SortOrder
  }

  export type PriceHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrder
    rank?: SortOrder
    change1h?: SortOrder
    change24h?: SortOrder
    change7d?: SortOrder
    timestamp?: SortOrder
  }

  export type PriceHistorySumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    volume?: SortOrder
    marketCap?: SortOrder
    rank?: SortOrder
    change1h?: SortOrder
    change24h?: SortOrder
    change7d?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type AlertHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    level?: SortOrder
    title?: SortOrder
    description?: SortOrder
    changePercent?: SortOrder
    timeframe?: SortOrder
    volume?: SortOrder
    details?: SortOrder
    isActive?: SortOrder
    dismissed?: SortOrder
    timestamp?: SortOrder
  }

  export type AlertHistoryAvgOrderByAggregateInput = {
    id?: SortOrder
    changePercent?: SortOrder
    volume?: SortOrder
  }

  export type AlertHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    level?: SortOrder
    title?: SortOrder
    description?: SortOrder
    changePercent?: SortOrder
    timeframe?: SortOrder
    volume?: SortOrder
    isActive?: SortOrder
    dismissed?: SortOrder
    timestamp?: SortOrder
  }

  export type AlertHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    level?: SortOrder
    title?: SortOrder
    description?: SortOrder
    changePercent?: SortOrder
    timeframe?: SortOrder
    volume?: SortOrder
    isActive?: SortOrder
    dismissed?: SortOrder
    timestamp?: SortOrder
  }

  export type AlertHistorySumOrderByAggregateInput = {
    id?: SortOrder
    changePercent?: SortOrder
    volume?: SortOrder
  }

  export type MarketIndicatorsCountOrderByAggregateInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrder
    totalVolume24h?: SortOrder
    timestamp?: SortOrder
  }

  export type MarketIndicatorsAvgOrderByAggregateInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrder
    totalVolume24h?: SortOrder
  }

  export type MarketIndicatorsMaxOrderByAggregateInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrder
    totalVolume24h?: SortOrder
    timestamp?: SortOrder
  }

  export type MarketIndicatorsMinOrderByAggregateInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrder
    totalVolume24h?: SortOrder
    timestamp?: SortOrder
  }

  export type MarketIndicatorsSumOrderByAggregateInput = {
    id?: SortOrder
    totalMarketCap?: SortOrder
    btcDominance?: SortOrder
    fearGreedIndex?: SortOrder
    totalVolume24h?: SortOrder
  }

  export type AlertSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    isEnabled?: SortOrder
    threshold?: SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AlertSettingsAvgOrderByAggregateInput = {
    id?: SortOrder
    threshold?: SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
  }

  export type AlertSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    isEnabled?: SortOrder
    threshold?: SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AlertSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    symbol?: SortOrder
    alertType?: SortOrder
    isEnabled?: SortOrder
    threshold?: SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AlertSettingsSumOrderByAggregateInput = {
    id?: SortOrder
    threshold?: SortOrder
    cooldownHours?: SortOrder
    maxAlertsPerDay?: SortOrder
    maxGlobalAlertsPerDay?: SortOrder
  }

  export type EnumAIProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.AIProvider | EnumAIProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAIProviderFilter<$PrismaModel> | $Enums.AIProvider
  }

  export type AIProviderSettingsUserIdProviderCompoundUniqueInput = {
    userId: string
    provider: $Enums.AIProvider
  }

  export type AIProviderSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    provider?: SortOrder
    apiKey?: SortOrder
    model?: SortOrder
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
    advancedSettings?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    lastUsed?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIProviderSettingsAvgOrderByAggregateInput = {
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
  }

  export type AIProviderSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    provider?: SortOrder
    apiKey?: SortOrder
    model?: SortOrder
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    lastUsed?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIProviderSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    provider?: SortOrder
    apiKey?: SortOrder
    model?: SortOrder
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    lastUsed?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIProviderSettingsSumOrderByAggregateInput = {
    temperature?: SortOrder
    maxTokens?: SortOrder
    topP?: SortOrder
    frequencyPenalty?: SortOrder
    presencePenalty?: SortOrder
  }

  export type EnumAIProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AIProvider | EnumAIProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAIProviderWithAggregatesFilter<$PrismaModel> | $Enums.AIProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAIProviderFilter<$PrismaModel>
    _max?: NestedEnumAIProviderFilter<$PrismaModel>
  }

  export type SystemMetricsCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
    createdAt?: SortOrder
  }

  export type SystemMetricsAvgOrderByAggregateInput = {
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
  }

  export type SystemMetricsMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
    createdAt?: SortOrder
  }

  export type SystemMetricsMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
    createdAt?: SortOrder
  }

  export type SystemMetricsSumOrderByAggregateInput = {
    articlesGenerated?: SortOrder
    templatesUsed?: SortOrder
    newsProcessed?: SortOrder
    alertsTriggered?: SortOrder
    apiRequests?: SortOrder
    aiTokensUsed?: SortOrder
    systemUptime?: SortOrder
    avgResponseTime?: SortOrder
    errorCount?: SortOrder
  }

  export type OrganizationMembershipCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<OrganizationMembershipCreateWithoutOrganizationInput, OrganizationMembershipUncheckedCreateWithoutOrganizationInput> | OrganizationMembershipCreateWithoutOrganizationInput[] | OrganizationMembershipUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutOrganizationInput | OrganizationMembershipCreateOrConnectWithoutOrganizationInput[]
    createMany?: OrganizationMembershipCreateManyOrganizationInputEnvelope
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
  }

  export type ArticleCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ArticleCreateWithoutOrganizationInput, ArticleUncheckedCreateWithoutOrganizationInput> | ArticleCreateWithoutOrganizationInput[] | ArticleUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutOrganizationInput | ArticleCreateOrConnectWithoutOrganizationInput[]
    createMany?: ArticleCreateManyOrganizationInputEnvelope
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
  }

  export type TemplateCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<TemplateCreateWithoutOrganizationInput, TemplateUncheckedCreateWithoutOrganizationInput> | TemplateCreateWithoutOrganizationInput[] | TemplateUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: TemplateCreateOrConnectWithoutOrganizationInput | TemplateCreateOrConnectWithoutOrganizationInput[]
    createMany?: TemplateCreateManyOrganizationInputEnvelope
    connect?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
  }

  export type AIProviderSettingsCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AIProviderSettingsCreateWithoutOrganizationInput, AIProviderSettingsUncheckedCreateWithoutOrganizationInput> | AIProviderSettingsCreateWithoutOrganizationInput[] | AIProviderSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutOrganizationInput | AIProviderSettingsCreateOrConnectWithoutOrganizationInput[]
    createMany?: AIProviderSettingsCreateManyOrganizationInputEnvelope
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
  }

  export type AlertSettingsCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AlertSettingsCreateWithoutOrganizationInput, AlertSettingsUncheckedCreateWithoutOrganizationInput> | AlertSettingsCreateWithoutOrganizationInput[] | AlertSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutOrganizationInput | AlertSettingsCreateOrConnectWithoutOrganizationInput[]
    createMany?: AlertSettingsCreateManyOrganizationInputEnvelope
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
  }

  export type ArticleAnalyticsCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutOrganizationInput, ArticleAnalyticsUncheckedCreateWithoutOrganizationInput> | ArticleAnalyticsCreateWithoutOrganizationInput[] | ArticleAnalyticsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutOrganizationInput | ArticleAnalyticsCreateOrConnectWithoutOrganizationInput[]
    createMany?: ArticleAnalyticsCreateManyOrganizationInputEnvelope
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
  }

  export type OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<OrganizationMembershipCreateWithoutOrganizationInput, OrganizationMembershipUncheckedCreateWithoutOrganizationInput> | OrganizationMembershipCreateWithoutOrganizationInput[] | OrganizationMembershipUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutOrganizationInput | OrganizationMembershipCreateOrConnectWithoutOrganizationInput[]
    createMany?: OrganizationMembershipCreateManyOrganizationInputEnvelope
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
  }

  export type ArticleUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ArticleCreateWithoutOrganizationInput, ArticleUncheckedCreateWithoutOrganizationInput> | ArticleCreateWithoutOrganizationInput[] | ArticleUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutOrganizationInput | ArticleCreateOrConnectWithoutOrganizationInput[]
    createMany?: ArticleCreateManyOrganizationInputEnvelope
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
  }

  export type TemplateUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<TemplateCreateWithoutOrganizationInput, TemplateUncheckedCreateWithoutOrganizationInput> | TemplateCreateWithoutOrganizationInput[] | TemplateUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: TemplateCreateOrConnectWithoutOrganizationInput | TemplateCreateOrConnectWithoutOrganizationInput[]
    createMany?: TemplateCreateManyOrganizationInputEnvelope
    connect?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
  }

  export type AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AIProviderSettingsCreateWithoutOrganizationInput, AIProviderSettingsUncheckedCreateWithoutOrganizationInput> | AIProviderSettingsCreateWithoutOrganizationInput[] | AIProviderSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutOrganizationInput | AIProviderSettingsCreateOrConnectWithoutOrganizationInput[]
    createMany?: AIProviderSettingsCreateManyOrganizationInputEnvelope
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
  }

  export type AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<AlertSettingsCreateWithoutOrganizationInput, AlertSettingsUncheckedCreateWithoutOrganizationInput> | AlertSettingsCreateWithoutOrganizationInput[] | AlertSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutOrganizationInput | AlertSettingsCreateOrConnectWithoutOrganizationInput[]
    createMany?: AlertSettingsCreateManyOrganizationInputEnvelope
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
  }

  export type ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutOrganizationInput, ArticleAnalyticsUncheckedCreateWithoutOrganizationInput> | ArticleAnalyticsCreateWithoutOrganizationInput[] | ArticleAnalyticsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutOrganizationInput | ArticleAnalyticsCreateOrConnectWithoutOrganizationInput[]
    createMany?: ArticleAnalyticsCreateManyOrganizationInputEnvelope
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type OrganizationMembershipUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<OrganizationMembershipCreateWithoutOrganizationInput, OrganizationMembershipUncheckedCreateWithoutOrganizationInput> | OrganizationMembershipCreateWithoutOrganizationInput[] | OrganizationMembershipUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutOrganizationInput | OrganizationMembershipCreateOrConnectWithoutOrganizationInput[]
    upsert?: OrganizationMembershipUpsertWithWhereUniqueWithoutOrganizationInput | OrganizationMembershipUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: OrganizationMembershipCreateManyOrganizationInputEnvelope
    set?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    disconnect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    delete?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    update?: OrganizationMembershipUpdateWithWhereUniqueWithoutOrganizationInput | OrganizationMembershipUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: OrganizationMembershipUpdateManyWithWhereWithoutOrganizationInput | OrganizationMembershipUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: OrganizationMembershipScalarWhereInput | OrganizationMembershipScalarWhereInput[]
  }

  export type ArticleUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ArticleCreateWithoutOrganizationInput, ArticleUncheckedCreateWithoutOrganizationInput> | ArticleCreateWithoutOrganizationInput[] | ArticleUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutOrganizationInput | ArticleCreateOrConnectWithoutOrganizationInput[]
    upsert?: ArticleUpsertWithWhereUniqueWithoutOrganizationInput | ArticleUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ArticleCreateManyOrganizationInputEnvelope
    set?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    disconnect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    delete?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    update?: ArticleUpdateWithWhereUniqueWithoutOrganizationInput | ArticleUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ArticleUpdateManyWithWhereWithoutOrganizationInput | ArticleUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
  }

  export type TemplateUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<TemplateCreateWithoutOrganizationInput, TemplateUncheckedCreateWithoutOrganizationInput> | TemplateCreateWithoutOrganizationInput[] | TemplateUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: TemplateCreateOrConnectWithoutOrganizationInput | TemplateCreateOrConnectWithoutOrganizationInput[]
    upsert?: TemplateUpsertWithWhereUniqueWithoutOrganizationInput | TemplateUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: TemplateCreateManyOrganizationInputEnvelope
    set?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    disconnect?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    delete?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    connect?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    update?: TemplateUpdateWithWhereUniqueWithoutOrganizationInput | TemplateUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: TemplateUpdateManyWithWhereWithoutOrganizationInput | TemplateUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: TemplateScalarWhereInput | TemplateScalarWhereInput[]
  }

  export type AIProviderSettingsUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AIProviderSettingsCreateWithoutOrganizationInput, AIProviderSettingsUncheckedCreateWithoutOrganizationInput> | AIProviderSettingsCreateWithoutOrganizationInput[] | AIProviderSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutOrganizationInput | AIProviderSettingsCreateOrConnectWithoutOrganizationInput[]
    upsert?: AIProviderSettingsUpsertWithWhereUniqueWithoutOrganizationInput | AIProviderSettingsUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AIProviderSettingsCreateManyOrganizationInputEnvelope
    set?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    disconnect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    delete?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    update?: AIProviderSettingsUpdateWithWhereUniqueWithoutOrganizationInput | AIProviderSettingsUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AIProviderSettingsUpdateManyWithWhereWithoutOrganizationInput | AIProviderSettingsUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AIProviderSettingsScalarWhereInput | AIProviderSettingsScalarWhereInput[]
  }

  export type AlertSettingsUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AlertSettingsCreateWithoutOrganizationInput, AlertSettingsUncheckedCreateWithoutOrganizationInput> | AlertSettingsCreateWithoutOrganizationInput[] | AlertSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutOrganizationInput | AlertSettingsCreateOrConnectWithoutOrganizationInput[]
    upsert?: AlertSettingsUpsertWithWhereUniqueWithoutOrganizationInput | AlertSettingsUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AlertSettingsCreateManyOrganizationInputEnvelope
    set?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    disconnect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    delete?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    update?: AlertSettingsUpdateWithWhereUniqueWithoutOrganizationInput | AlertSettingsUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AlertSettingsUpdateManyWithWhereWithoutOrganizationInput | AlertSettingsUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AlertSettingsScalarWhereInput | AlertSettingsScalarWhereInput[]
  }

  export type ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutOrganizationInput, ArticleAnalyticsUncheckedCreateWithoutOrganizationInput> | ArticleAnalyticsCreateWithoutOrganizationInput[] | ArticleAnalyticsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutOrganizationInput | ArticleAnalyticsCreateOrConnectWithoutOrganizationInput[]
    upsert?: ArticleAnalyticsUpsertWithWhereUniqueWithoutOrganizationInput | ArticleAnalyticsUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ArticleAnalyticsCreateManyOrganizationInputEnvelope
    set?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    disconnect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    delete?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    update?: ArticleAnalyticsUpdateWithWhereUniqueWithoutOrganizationInput | ArticleAnalyticsUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ArticleAnalyticsUpdateManyWithWhereWithoutOrganizationInput | ArticleAnalyticsUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ArticleAnalyticsScalarWhereInput | ArticleAnalyticsScalarWhereInput[]
  }

  export type OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<OrganizationMembershipCreateWithoutOrganizationInput, OrganizationMembershipUncheckedCreateWithoutOrganizationInput> | OrganizationMembershipCreateWithoutOrganizationInput[] | OrganizationMembershipUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutOrganizationInput | OrganizationMembershipCreateOrConnectWithoutOrganizationInput[]
    upsert?: OrganizationMembershipUpsertWithWhereUniqueWithoutOrganizationInput | OrganizationMembershipUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: OrganizationMembershipCreateManyOrganizationInputEnvelope
    set?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    disconnect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    delete?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    update?: OrganizationMembershipUpdateWithWhereUniqueWithoutOrganizationInput | OrganizationMembershipUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: OrganizationMembershipUpdateManyWithWhereWithoutOrganizationInput | OrganizationMembershipUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: OrganizationMembershipScalarWhereInput | OrganizationMembershipScalarWhereInput[]
  }

  export type ArticleUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ArticleCreateWithoutOrganizationInput, ArticleUncheckedCreateWithoutOrganizationInput> | ArticleCreateWithoutOrganizationInput[] | ArticleUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutOrganizationInput | ArticleCreateOrConnectWithoutOrganizationInput[]
    upsert?: ArticleUpsertWithWhereUniqueWithoutOrganizationInput | ArticleUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ArticleCreateManyOrganizationInputEnvelope
    set?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    disconnect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    delete?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    update?: ArticleUpdateWithWhereUniqueWithoutOrganizationInput | ArticleUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ArticleUpdateManyWithWhereWithoutOrganizationInput | ArticleUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
  }

  export type TemplateUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<TemplateCreateWithoutOrganizationInput, TemplateUncheckedCreateWithoutOrganizationInput> | TemplateCreateWithoutOrganizationInput[] | TemplateUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: TemplateCreateOrConnectWithoutOrganizationInput | TemplateCreateOrConnectWithoutOrganizationInput[]
    upsert?: TemplateUpsertWithWhereUniqueWithoutOrganizationInput | TemplateUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: TemplateCreateManyOrganizationInputEnvelope
    set?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    disconnect?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    delete?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    connect?: TemplateWhereUniqueInput | TemplateWhereUniqueInput[]
    update?: TemplateUpdateWithWhereUniqueWithoutOrganizationInput | TemplateUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: TemplateUpdateManyWithWhereWithoutOrganizationInput | TemplateUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: TemplateScalarWhereInput | TemplateScalarWhereInput[]
  }

  export type AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AIProviderSettingsCreateWithoutOrganizationInput, AIProviderSettingsUncheckedCreateWithoutOrganizationInput> | AIProviderSettingsCreateWithoutOrganizationInput[] | AIProviderSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutOrganizationInput | AIProviderSettingsCreateOrConnectWithoutOrganizationInput[]
    upsert?: AIProviderSettingsUpsertWithWhereUniqueWithoutOrganizationInput | AIProviderSettingsUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AIProviderSettingsCreateManyOrganizationInputEnvelope
    set?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    disconnect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    delete?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    update?: AIProviderSettingsUpdateWithWhereUniqueWithoutOrganizationInput | AIProviderSettingsUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AIProviderSettingsUpdateManyWithWhereWithoutOrganizationInput | AIProviderSettingsUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AIProviderSettingsScalarWhereInput | AIProviderSettingsScalarWhereInput[]
  }

  export type AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<AlertSettingsCreateWithoutOrganizationInput, AlertSettingsUncheckedCreateWithoutOrganizationInput> | AlertSettingsCreateWithoutOrganizationInput[] | AlertSettingsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutOrganizationInput | AlertSettingsCreateOrConnectWithoutOrganizationInput[]
    upsert?: AlertSettingsUpsertWithWhereUniqueWithoutOrganizationInput | AlertSettingsUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: AlertSettingsCreateManyOrganizationInputEnvelope
    set?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    disconnect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    delete?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    update?: AlertSettingsUpdateWithWhereUniqueWithoutOrganizationInput | AlertSettingsUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: AlertSettingsUpdateManyWithWhereWithoutOrganizationInput | AlertSettingsUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: AlertSettingsScalarWhereInput | AlertSettingsScalarWhereInput[]
  }

  export type ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutOrganizationInput, ArticleAnalyticsUncheckedCreateWithoutOrganizationInput> | ArticleAnalyticsCreateWithoutOrganizationInput[] | ArticleAnalyticsUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutOrganizationInput | ArticleAnalyticsCreateOrConnectWithoutOrganizationInput[]
    upsert?: ArticleAnalyticsUpsertWithWhereUniqueWithoutOrganizationInput | ArticleAnalyticsUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ArticleAnalyticsCreateManyOrganizationInputEnvelope
    set?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    disconnect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    delete?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    update?: ArticleAnalyticsUpdateWithWhereUniqueWithoutOrganizationInput | ArticleAnalyticsUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ArticleAnalyticsUpdateManyWithWhereWithoutOrganizationInput | ArticleAnalyticsUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ArticleAnalyticsScalarWhereInput | ArticleAnalyticsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutMembershipsInput = {
    create?: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembershipsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutMembershipsInput = {
    create?: XOR<OrganizationCreateWithoutMembershipsInput, OrganizationUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutMembershipsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type EnumMemberRoleFieldUpdateOperationsInput = {
    set?: $Enums.MemberRole
  }

  export type UserUpdateOneRequiredWithoutMembershipsNestedInput = {
    create?: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembershipsInput
    upsert?: UserUpsertWithoutMembershipsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMembershipsInput, UserUpdateWithoutMembershipsInput>, UserUncheckedUpdateWithoutMembershipsInput>
  }

  export type OrganizationUpdateOneRequiredWithoutMembershipsNestedInput = {
    create?: XOR<OrganizationCreateWithoutMembershipsInput, OrganizationUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutMembershipsInput
    upsert?: OrganizationUpsertWithoutMembershipsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutMembershipsInput, OrganizationUpdateWithoutMembershipsInput>, OrganizationUncheckedUpdateWithoutMembershipsInput>
  }

  export type OrganizationMembershipCreateNestedManyWithoutUserInput = {
    create?: XOR<OrganizationMembershipCreateWithoutUserInput, OrganizationMembershipUncheckedCreateWithoutUserInput> | OrganizationMembershipCreateWithoutUserInput[] | OrganizationMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutUserInput | OrganizationMembershipCreateOrConnectWithoutUserInput[]
    createMany?: OrganizationMembershipCreateManyUserInputEnvelope
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
  }

  export type AIProviderSettingsCreateNestedManyWithoutUserInput = {
    create?: XOR<AIProviderSettingsCreateWithoutUserInput, AIProviderSettingsUncheckedCreateWithoutUserInput> | AIProviderSettingsCreateWithoutUserInput[] | AIProviderSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutUserInput | AIProviderSettingsCreateOrConnectWithoutUserInput[]
    createMany?: AIProviderSettingsCreateManyUserInputEnvelope
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
  }

  export type AlertSettingsCreateNestedManyWithoutUserInput = {
    create?: XOR<AlertSettingsCreateWithoutUserInput, AlertSettingsUncheckedCreateWithoutUserInput> | AlertSettingsCreateWithoutUserInput[] | AlertSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutUserInput | AlertSettingsCreateOrConnectWithoutUserInput[]
    createMany?: AlertSettingsCreateManyUserInputEnvelope
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
  }

  export type ArticleVersionCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ArticleVersionCreateWithoutAuthorInput, ArticleVersionUncheckedCreateWithoutAuthorInput> | ArticleVersionCreateWithoutAuthorInput[] | ArticleVersionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutAuthorInput | ArticleVersionCreateOrConnectWithoutAuthorInput[]
    createMany?: ArticleVersionCreateManyAuthorInputEnvelope
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
  }

  export type ArticleCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ArticleCreateWithoutAuthorInput, ArticleUncheckedCreateWithoutAuthorInput> | ArticleCreateWithoutAuthorInput[] | ArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutAuthorInput | ArticleCreateOrConnectWithoutAuthorInput[]
    createMany?: ArticleCreateManyAuthorInputEnvelope
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
  }

  export type UserSessionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OrganizationMembershipCreateWithoutUserInput, OrganizationMembershipUncheckedCreateWithoutUserInput> | OrganizationMembershipCreateWithoutUserInput[] | OrganizationMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutUserInput | OrganizationMembershipCreateOrConnectWithoutUserInput[]
    createMany?: OrganizationMembershipCreateManyUserInputEnvelope
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
  }

  export type AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AIProviderSettingsCreateWithoutUserInput, AIProviderSettingsUncheckedCreateWithoutUserInput> | AIProviderSettingsCreateWithoutUserInput[] | AIProviderSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutUserInput | AIProviderSettingsCreateOrConnectWithoutUserInput[]
    createMany?: AIProviderSettingsCreateManyUserInputEnvelope
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
  }

  export type AlertSettingsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AlertSettingsCreateWithoutUserInput, AlertSettingsUncheckedCreateWithoutUserInput> | AlertSettingsCreateWithoutUserInput[] | AlertSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutUserInput | AlertSettingsCreateOrConnectWithoutUserInput[]
    createMany?: AlertSettingsCreateManyUserInputEnvelope
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
  }

  export type ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ArticleVersionCreateWithoutAuthorInput, ArticleVersionUncheckedCreateWithoutAuthorInput> | ArticleVersionCreateWithoutAuthorInput[] | ArticleVersionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutAuthorInput | ArticleVersionCreateOrConnectWithoutAuthorInput[]
    createMany?: ArticleVersionCreateManyAuthorInputEnvelope
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
  }

  export type ArticleUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ArticleCreateWithoutAuthorInput, ArticleUncheckedCreateWithoutAuthorInput> | ArticleCreateWithoutAuthorInput[] | ArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutAuthorInput | ArticleCreateOrConnectWithoutAuthorInput[]
    createMany?: ArticleCreateManyAuthorInputEnvelope
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
  }

  export type UserSessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type OrganizationMembershipUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrganizationMembershipCreateWithoutUserInput, OrganizationMembershipUncheckedCreateWithoutUserInput> | OrganizationMembershipCreateWithoutUserInput[] | OrganizationMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutUserInput | OrganizationMembershipCreateOrConnectWithoutUserInput[]
    upsert?: OrganizationMembershipUpsertWithWhereUniqueWithoutUserInput | OrganizationMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrganizationMembershipCreateManyUserInputEnvelope
    set?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    disconnect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    delete?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    update?: OrganizationMembershipUpdateWithWhereUniqueWithoutUserInput | OrganizationMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrganizationMembershipUpdateManyWithWhereWithoutUserInput | OrganizationMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrganizationMembershipScalarWhereInput | OrganizationMembershipScalarWhereInput[]
  }

  export type AIProviderSettingsUpdateManyWithoutUserNestedInput = {
    create?: XOR<AIProviderSettingsCreateWithoutUserInput, AIProviderSettingsUncheckedCreateWithoutUserInput> | AIProviderSettingsCreateWithoutUserInput[] | AIProviderSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutUserInput | AIProviderSettingsCreateOrConnectWithoutUserInput[]
    upsert?: AIProviderSettingsUpsertWithWhereUniqueWithoutUserInput | AIProviderSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AIProviderSettingsCreateManyUserInputEnvelope
    set?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    disconnect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    delete?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    update?: AIProviderSettingsUpdateWithWhereUniqueWithoutUserInput | AIProviderSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AIProviderSettingsUpdateManyWithWhereWithoutUserInput | AIProviderSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AIProviderSettingsScalarWhereInput | AIProviderSettingsScalarWhereInput[]
  }

  export type AlertSettingsUpdateManyWithoutUserNestedInput = {
    create?: XOR<AlertSettingsCreateWithoutUserInput, AlertSettingsUncheckedCreateWithoutUserInput> | AlertSettingsCreateWithoutUserInput[] | AlertSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutUserInput | AlertSettingsCreateOrConnectWithoutUserInput[]
    upsert?: AlertSettingsUpsertWithWhereUniqueWithoutUserInput | AlertSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AlertSettingsCreateManyUserInputEnvelope
    set?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    disconnect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    delete?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    update?: AlertSettingsUpdateWithWhereUniqueWithoutUserInput | AlertSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AlertSettingsUpdateManyWithWhereWithoutUserInput | AlertSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AlertSettingsScalarWhereInput | AlertSettingsScalarWhereInput[]
  }

  export type ArticleVersionUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ArticleVersionCreateWithoutAuthorInput, ArticleVersionUncheckedCreateWithoutAuthorInput> | ArticleVersionCreateWithoutAuthorInput[] | ArticleVersionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutAuthorInput | ArticleVersionCreateOrConnectWithoutAuthorInput[]
    upsert?: ArticleVersionUpsertWithWhereUniqueWithoutAuthorInput | ArticleVersionUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ArticleVersionCreateManyAuthorInputEnvelope
    set?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    disconnect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    delete?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    update?: ArticleVersionUpdateWithWhereUniqueWithoutAuthorInput | ArticleVersionUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ArticleVersionUpdateManyWithWhereWithoutAuthorInput | ArticleVersionUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ArticleVersionScalarWhereInput | ArticleVersionScalarWhereInput[]
  }

  export type ArticleUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ArticleCreateWithoutAuthorInput, ArticleUncheckedCreateWithoutAuthorInput> | ArticleCreateWithoutAuthorInput[] | ArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutAuthorInput | ArticleCreateOrConnectWithoutAuthorInput[]
    upsert?: ArticleUpsertWithWhereUniqueWithoutAuthorInput | ArticleUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ArticleCreateManyAuthorInputEnvelope
    set?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    disconnect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    delete?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    update?: ArticleUpdateWithWhereUniqueWithoutAuthorInput | ArticleUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ArticleUpdateManyWithWhereWithoutAuthorInput | ArticleUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
  }

  export type UserSessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrganizationMembershipCreateWithoutUserInput, OrganizationMembershipUncheckedCreateWithoutUserInput> | OrganizationMembershipCreateWithoutUserInput[] | OrganizationMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrganizationMembershipCreateOrConnectWithoutUserInput | OrganizationMembershipCreateOrConnectWithoutUserInput[]
    upsert?: OrganizationMembershipUpsertWithWhereUniqueWithoutUserInput | OrganizationMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrganizationMembershipCreateManyUserInputEnvelope
    set?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    disconnect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    delete?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    connect?: OrganizationMembershipWhereUniqueInput | OrganizationMembershipWhereUniqueInput[]
    update?: OrganizationMembershipUpdateWithWhereUniqueWithoutUserInput | OrganizationMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrganizationMembershipUpdateManyWithWhereWithoutUserInput | OrganizationMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrganizationMembershipScalarWhereInput | OrganizationMembershipScalarWhereInput[]
  }

  export type AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AIProviderSettingsCreateWithoutUserInput, AIProviderSettingsUncheckedCreateWithoutUserInput> | AIProviderSettingsCreateWithoutUserInput[] | AIProviderSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIProviderSettingsCreateOrConnectWithoutUserInput | AIProviderSettingsCreateOrConnectWithoutUserInput[]
    upsert?: AIProviderSettingsUpsertWithWhereUniqueWithoutUserInput | AIProviderSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AIProviderSettingsCreateManyUserInputEnvelope
    set?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    disconnect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    delete?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    connect?: AIProviderSettingsWhereUniqueInput | AIProviderSettingsWhereUniqueInput[]
    update?: AIProviderSettingsUpdateWithWhereUniqueWithoutUserInput | AIProviderSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AIProviderSettingsUpdateManyWithWhereWithoutUserInput | AIProviderSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AIProviderSettingsScalarWhereInput | AIProviderSettingsScalarWhereInput[]
  }

  export type AlertSettingsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AlertSettingsCreateWithoutUserInput, AlertSettingsUncheckedCreateWithoutUserInput> | AlertSettingsCreateWithoutUserInput[] | AlertSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AlertSettingsCreateOrConnectWithoutUserInput | AlertSettingsCreateOrConnectWithoutUserInput[]
    upsert?: AlertSettingsUpsertWithWhereUniqueWithoutUserInput | AlertSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AlertSettingsCreateManyUserInputEnvelope
    set?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    disconnect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    delete?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    connect?: AlertSettingsWhereUniqueInput | AlertSettingsWhereUniqueInput[]
    update?: AlertSettingsUpdateWithWhereUniqueWithoutUserInput | AlertSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AlertSettingsUpdateManyWithWhereWithoutUserInput | AlertSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AlertSettingsScalarWhereInput | AlertSettingsScalarWhereInput[]
  }

  export type ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ArticleVersionCreateWithoutAuthorInput, ArticleVersionUncheckedCreateWithoutAuthorInput> | ArticleVersionCreateWithoutAuthorInput[] | ArticleVersionUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutAuthorInput | ArticleVersionCreateOrConnectWithoutAuthorInput[]
    upsert?: ArticleVersionUpsertWithWhereUniqueWithoutAuthorInput | ArticleVersionUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ArticleVersionCreateManyAuthorInputEnvelope
    set?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    disconnect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    delete?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    update?: ArticleVersionUpdateWithWhereUniqueWithoutAuthorInput | ArticleVersionUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ArticleVersionUpdateManyWithWhereWithoutAuthorInput | ArticleVersionUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ArticleVersionScalarWhereInput | ArticleVersionScalarWhereInput[]
  }

  export type ArticleUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ArticleCreateWithoutAuthorInput, ArticleUncheckedCreateWithoutAuthorInput> | ArticleCreateWithoutAuthorInput[] | ArticleUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutAuthorInput | ArticleCreateOrConnectWithoutAuthorInput[]
    upsert?: ArticleUpsertWithWhereUniqueWithoutAuthorInput | ArticleUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ArticleCreateManyAuthorInputEnvelope
    set?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    disconnect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    delete?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    update?: ArticleUpdateWithWhereUniqueWithoutAuthorInput | ArticleUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ArticleUpdateManyWithWhereWithoutAuthorInput | ArticleUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
  }

  export type UserSessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type OrganizationCreateNestedOneWithoutArticlesInput = {
    create?: XOR<OrganizationCreateWithoutArticlesInput, OrganizationUncheckedCreateWithoutArticlesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutArticlesInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ArticleAnalyticsCreateNestedManyWithoutArticleInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutArticleInput, ArticleAnalyticsUncheckedCreateWithoutArticleInput> | ArticleAnalyticsCreateWithoutArticleInput[] | ArticleAnalyticsUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutArticleInput | ArticleAnalyticsCreateOrConnectWithoutArticleInput[]
    createMany?: ArticleAnalyticsCreateManyArticleInputEnvelope
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
  }

  export type ArticleVersionCreateNestedManyWithoutArticleInput = {
    create?: XOR<ArticleVersionCreateWithoutArticleInput, ArticleVersionUncheckedCreateWithoutArticleInput> | ArticleVersionCreateWithoutArticleInput[] | ArticleVersionUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutArticleInput | ArticleVersionCreateOrConnectWithoutArticleInput[]
    createMany?: ArticleVersionCreateManyArticleInputEnvelope
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutArticlesInput = {
    create?: XOR<UserCreateWithoutArticlesInput, UserUncheckedCreateWithoutArticlesInput>
    connectOrCreate?: UserCreateOrConnectWithoutArticlesInput
    connect?: UserWhereUniqueInput
  }

  export type TemplateCreateNestedOneWithoutArticlesInput = {
    create?: XOR<TemplateCreateWithoutArticlesInput, TemplateUncheckedCreateWithoutArticlesInput>
    connectOrCreate?: TemplateCreateOrConnectWithoutArticlesInput
    connect?: TemplateWhereUniqueInput
  }

  export type ArticleAnalyticsUncheckedCreateNestedManyWithoutArticleInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutArticleInput, ArticleAnalyticsUncheckedCreateWithoutArticleInput> | ArticleAnalyticsCreateWithoutArticleInput[] | ArticleAnalyticsUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutArticleInput | ArticleAnalyticsCreateOrConnectWithoutArticleInput[]
    createMany?: ArticleAnalyticsCreateManyArticleInputEnvelope
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
  }

  export type ArticleVersionUncheckedCreateNestedManyWithoutArticleInput = {
    create?: XOR<ArticleVersionCreateWithoutArticleInput, ArticleVersionUncheckedCreateWithoutArticleInput> | ArticleVersionCreateWithoutArticleInput[] | ArticleVersionUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutArticleInput | ArticleVersionCreateOrConnectWithoutArticleInput[]
    createMany?: ArticleVersionCreateManyArticleInputEnvelope
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
  }

  export type EnumArticleStatusFieldUpdateOperationsInput = {
    set?: $Enums.ArticleStatus
  }

  export type EnumSourceTypeFieldUpdateOperationsInput = {
    set?: $Enums.SourceType
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OrganizationUpdateOneRequiredWithoutArticlesNestedInput = {
    create?: XOR<OrganizationCreateWithoutArticlesInput, OrganizationUncheckedCreateWithoutArticlesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutArticlesInput
    upsert?: OrganizationUpsertWithoutArticlesInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutArticlesInput, OrganizationUpdateWithoutArticlesInput>, OrganizationUncheckedUpdateWithoutArticlesInput>
  }

  export type ArticleAnalyticsUpdateManyWithoutArticleNestedInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutArticleInput, ArticleAnalyticsUncheckedCreateWithoutArticleInput> | ArticleAnalyticsCreateWithoutArticleInput[] | ArticleAnalyticsUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutArticleInput | ArticleAnalyticsCreateOrConnectWithoutArticleInput[]
    upsert?: ArticleAnalyticsUpsertWithWhereUniqueWithoutArticleInput | ArticleAnalyticsUpsertWithWhereUniqueWithoutArticleInput[]
    createMany?: ArticleAnalyticsCreateManyArticleInputEnvelope
    set?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    disconnect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    delete?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    update?: ArticleAnalyticsUpdateWithWhereUniqueWithoutArticleInput | ArticleAnalyticsUpdateWithWhereUniqueWithoutArticleInput[]
    updateMany?: ArticleAnalyticsUpdateManyWithWhereWithoutArticleInput | ArticleAnalyticsUpdateManyWithWhereWithoutArticleInput[]
    deleteMany?: ArticleAnalyticsScalarWhereInput | ArticleAnalyticsScalarWhereInput[]
  }

  export type ArticleVersionUpdateManyWithoutArticleNestedInput = {
    create?: XOR<ArticleVersionCreateWithoutArticleInput, ArticleVersionUncheckedCreateWithoutArticleInput> | ArticleVersionCreateWithoutArticleInput[] | ArticleVersionUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutArticleInput | ArticleVersionCreateOrConnectWithoutArticleInput[]
    upsert?: ArticleVersionUpsertWithWhereUniqueWithoutArticleInput | ArticleVersionUpsertWithWhereUniqueWithoutArticleInput[]
    createMany?: ArticleVersionCreateManyArticleInputEnvelope
    set?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    disconnect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    delete?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    update?: ArticleVersionUpdateWithWhereUniqueWithoutArticleInput | ArticleVersionUpdateWithWhereUniqueWithoutArticleInput[]
    updateMany?: ArticleVersionUpdateManyWithWhereWithoutArticleInput | ArticleVersionUpdateManyWithWhereWithoutArticleInput[]
    deleteMany?: ArticleVersionScalarWhereInput | ArticleVersionScalarWhereInput[]
  }

  export type UserUpdateOneWithoutArticlesNestedInput = {
    create?: XOR<UserCreateWithoutArticlesInput, UserUncheckedCreateWithoutArticlesInput>
    connectOrCreate?: UserCreateOrConnectWithoutArticlesInput
    upsert?: UserUpsertWithoutArticlesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutArticlesInput, UserUpdateWithoutArticlesInput>, UserUncheckedUpdateWithoutArticlesInput>
  }

  export type TemplateUpdateOneWithoutArticlesNestedInput = {
    create?: XOR<TemplateCreateWithoutArticlesInput, TemplateUncheckedCreateWithoutArticlesInput>
    connectOrCreate?: TemplateCreateOrConnectWithoutArticlesInput
    upsert?: TemplateUpsertWithoutArticlesInput
    disconnect?: TemplateWhereInput | boolean
    delete?: TemplateWhereInput | boolean
    connect?: TemplateWhereUniqueInput
    update?: XOR<XOR<TemplateUpdateToOneWithWhereWithoutArticlesInput, TemplateUpdateWithoutArticlesInput>, TemplateUncheckedUpdateWithoutArticlesInput>
  }

  export type ArticleAnalyticsUncheckedUpdateManyWithoutArticleNestedInput = {
    create?: XOR<ArticleAnalyticsCreateWithoutArticleInput, ArticleAnalyticsUncheckedCreateWithoutArticleInput> | ArticleAnalyticsCreateWithoutArticleInput[] | ArticleAnalyticsUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleAnalyticsCreateOrConnectWithoutArticleInput | ArticleAnalyticsCreateOrConnectWithoutArticleInput[]
    upsert?: ArticleAnalyticsUpsertWithWhereUniqueWithoutArticleInput | ArticleAnalyticsUpsertWithWhereUniqueWithoutArticleInput[]
    createMany?: ArticleAnalyticsCreateManyArticleInputEnvelope
    set?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    disconnect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    delete?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    connect?: ArticleAnalyticsWhereUniqueInput | ArticleAnalyticsWhereUniqueInput[]
    update?: ArticleAnalyticsUpdateWithWhereUniqueWithoutArticleInput | ArticleAnalyticsUpdateWithWhereUniqueWithoutArticleInput[]
    updateMany?: ArticleAnalyticsUpdateManyWithWhereWithoutArticleInput | ArticleAnalyticsUpdateManyWithWhereWithoutArticleInput[]
    deleteMany?: ArticleAnalyticsScalarWhereInput | ArticleAnalyticsScalarWhereInput[]
  }

  export type ArticleVersionUncheckedUpdateManyWithoutArticleNestedInput = {
    create?: XOR<ArticleVersionCreateWithoutArticleInput, ArticleVersionUncheckedCreateWithoutArticleInput> | ArticleVersionCreateWithoutArticleInput[] | ArticleVersionUncheckedCreateWithoutArticleInput[]
    connectOrCreate?: ArticleVersionCreateOrConnectWithoutArticleInput | ArticleVersionCreateOrConnectWithoutArticleInput[]
    upsert?: ArticleVersionUpsertWithWhereUniqueWithoutArticleInput | ArticleVersionUpsertWithWhereUniqueWithoutArticleInput[]
    createMany?: ArticleVersionCreateManyArticleInputEnvelope
    set?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    disconnect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    delete?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    connect?: ArticleVersionWhereUniqueInput | ArticleVersionWhereUniqueInput[]
    update?: ArticleVersionUpdateWithWhereUniqueWithoutArticleInput | ArticleVersionUpdateWithWhereUniqueWithoutArticleInput[]
    updateMany?: ArticleVersionUpdateManyWithWhereWithoutArticleInput | ArticleVersionUpdateManyWithWhereWithoutArticleInput[]
    deleteMany?: ArticleVersionScalarWhereInput | ArticleVersionScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutTemplatesInput = {
    create?: XOR<OrganizationCreateWithoutTemplatesInput, OrganizationUncheckedCreateWithoutTemplatesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutTemplatesInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ArticleCreateNestedManyWithoutTemplateInput = {
    create?: XOR<ArticleCreateWithoutTemplateInput, ArticleUncheckedCreateWithoutTemplateInput> | ArticleCreateWithoutTemplateInput[] | ArticleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutTemplateInput | ArticleCreateOrConnectWithoutTemplateInput[]
    createMany?: ArticleCreateManyTemplateInputEnvelope
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
  }

  export type ArticleUncheckedCreateNestedManyWithoutTemplateInput = {
    create?: XOR<ArticleCreateWithoutTemplateInput, ArticleUncheckedCreateWithoutTemplateInput> | ArticleCreateWithoutTemplateInput[] | ArticleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutTemplateInput | ArticleCreateOrConnectWithoutTemplateInput[]
    createMany?: ArticleCreateManyTemplateInputEnvelope
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
  }

  export type OrganizationUpdateOneRequiredWithoutTemplatesNestedInput = {
    create?: XOR<OrganizationCreateWithoutTemplatesInput, OrganizationUncheckedCreateWithoutTemplatesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutTemplatesInput
    upsert?: OrganizationUpsertWithoutTemplatesInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutTemplatesInput, OrganizationUpdateWithoutTemplatesInput>, OrganizationUncheckedUpdateWithoutTemplatesInput>
  }

  export type ArticleUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<ArticleCreateWithoutTemplateInput, ArticleUncheckedCreateWithoutTemplateInput> | ArticleCreateWithoutTemplateInput[] | ArticleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutTemplateInput | ArticleCreateOrConnectWithoutTemplateInput[]
    upsert?: ArticleUpsertWithWhereUniqueWithoutTemplateInput | ArticleUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: ArticleCreateManyTemplateInputEnvelope
    set?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    disconnect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    delete?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    update?: ArticleUpdateWithWhereUniqueWithoutTemplateInput | ArticleUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: ArticleUpdateManyWithWhereWithoutTemplateInput | ArticleUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
  }

  export type ArticleUncheckedUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<ArticleCreateWithoutTemplateInput, ArticleUncheckedCreateWithoutTemplateInput> | ArticleCreateWithoutTemplateInput[] | ArticleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: ArticleCreateOrConnectWithoutTemplateInput | ArticleCreateOrConnectWithoutTemplateInput[]
    upsert?: ArticleUpsertWithWhereUniqueWithoutTemplateInput | ArticleUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: ArticleCreateManyTemplateInputEnvelope
    set?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    disconnect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    delete?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    connect?: ArticleWhereUniqueInput | ArticleWhereUniqueInput[]
    update?: ArticleUpdateWithWhereUniqueWithoutTemplateInput | ArticleUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: ArticleUpdateManyWithWhereWithoutTemplateInput | ArticleUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
  }

  export type ArticleCreateNestedOneWithoutVersionsInput = {
    create?: XOR<ArticleCreateWithoutVersionsInput, ArticleUncheckedCreateWithoutVersionsInput>
    connectOrCreate?: ArticleCreateOrConnectWithoutVersionsInput
    connect?: ArticleWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutArticleVersionsInput = {
    create?: XOR<UserCreateWithoutArticleVersionsInput, UserUncheckedCreateWithoutArticleVersionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutArticleVersionsInput
    connect?: UserWhereUniqueInput
  }

  export type ArticleUpdateOneRequiredWithoutVersionsNestedInput = {
    create?: XOR<ArticleCreateWithoutVersionsInput, ArticleUncheckedCreateWithoutVersionsInput>
    connectOrCreate?: ArticleCreateOrConnectWithoutVersionsInput
    upsert?: ArticleUpsertWithoutVersionsInput
    connect?: ArticleWhereUniqueInput
    update?: XOR<XOR<ArticleUpdateToOneWithWhereWithoutVersionsInput, ArticleUpdateWithoutVersionsInput>, ArticleUncheckedUpdateWithoutVersionsInput>
  }

  export type UserUpdateOneWithoutArticleVersionsNestedInput = {
    create?: XOR<UserCreateWithoutArticleVersionsInput, UserUncheckedCreateWithoutArticleVersionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutArticleVersionsInput
    upsert?: UserUpsertWithoutArticleVersionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutArticleVersionsInput, UserUpdateWithoutArticleVersionsInput>, UserUncheckedUpdateWithoutArticleVersionsInput>
  }

  export type OrganizationCreateNestedOneWithoutAnalyticsInput = {
    create?: XOR<OrganizationCreateWithoutAnalyticsInput, OrganizationUncheckedCreateWithoutAnalyticsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAnalyticsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ArticleCreateNestedOneWithoutAnalyticsInput = {
    create?: XOR<ArticleCreateWithoutAnalyticsInput, ArticleUncheckedCreateWithoutAnalyticsInput>
    connectOrCreate?: ArticleCreateOrConnectWithoutAnalyticsInput
    connect?: ArticleWhereUniqueInput
  }

  export type OrganizationUpdateOneRequiredWithoutAnalyticsNestedInput = {
    create?: XOR<OrganizationCreateWithoutAnalyticsInput, OrganizationUncheckedCreateWithoutAnalyticsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAnalyticsInput
    upsert?: OrganizationUpsertWithoutAnalyticsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutAnalyticsInput, OrganizationUpdateWithoutAnalyticsInput>, OrganizationUncheckedUpdateWithoutAnalyticsInput>
  }

  export type ArticleUpdateOneRequiredWithoutAnalyticsNestedInput = {
    create?: XOR<ArticleCreateWithoutAnalyticsInput, ArticleUncheckedCreateWithoutAnalyticsInput>
    connectOrCreate?: ArticleCreateOrConnectWithoutAnalyticsInput
    upsert?: ArticleUpsertWithoutAnalyticsInput
    connect?: ArticleWhereUniqueInput
    update?: XOR<XOR<ArticleUpdateToOneWithWhereWithoutAnalyticsInput, ArticleUpdateWithoutAnalyticsInput>, ArticleUncheckedUpdateWithoutAnalyticsInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumAlertTypeFieldUpdateOperationsInput = {
    set?: $Enums.AlertType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OrganizationCreateNestedOneWithoutAlertSettingsInput = {
    create?: XOR<OrganizationCreateWithoutAlertSettingsInput, OrganizationUncheckedCreateWithoutAlertSettingsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAlertSettingsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAlertSettingsInput = {
    create?: XOR<UserCreateWithoutAlertSettingsInput, UserUncheckedCreateWithoutAlertSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAlertSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationUpdateOneRequiredWithoutAlertSettingsNestedInput = {
    create?: XOR<OrganizationCreateWithoutAlertSettingsInput, OrganizationUncheckedCreateWithoutAlertSettingsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAlertSettingsInput
    upsert?: OrganizationUpsertWithoutAlertSettingsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutAlertSettingsInput, OrganizationUpdateWithoutAlertSettingsInput>, OrganizationUncheckedUpdateWithoutAlertSettingsInput>
  }

  export type UserUpdateOneWithoutAlertSettingsNestedInput = {
    create?: XOR<UserCreateWithoutAlertSettingsInput, UserUncheckedCreateWithoutAlertSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAlertSettingsInput
    upsert?: UserUpsertWithoutAlertSettingsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAlertSettingsInput, UserUpdateWithoutAlertSettingsInput>, UserUncheckedUpdateWithoutAlertSettingsInput>
  }

  export type OrganizationCreateNestedOneWithoutAiProviderSettingsInput = {
    create?: XOR<OrganizationCreateWithoutAiProviderSettingsInput, OrganizationUncheckedCreateWithoutAiProviderSettingsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAiProviderSettingsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAiProviderSettingsInput = {
    create?: XOR<UserCreateWithoutAiProviderSettingsInput, UserUncheckedCreateWithoutAiProviderSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiProviderSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAIProviderFieldUpdateOperationsInput = {
    set?: $Enums.AIProvider
  }

  export type OrganizationUpdateOneRequiredWithoutAiProviderSettingsNestedInput = {
    create?: XOR<OrganizationCreateWithoutAiProviderSettingsInput, OrganizationUncheckedCreateWithoutAiProviderSettingsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutAiProviderSettingsInput
    upsert?: OrganizationUpsertWithoutAiProviderSettingsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutAiProviderSettingsInput, OrganizationUpdateWithoutAiProviderSettingsInput>, OrganizationUncheckedUpdateWithoutAiProviderSettingsInput>
  }

  export type UserUpdateOneRequiredWithoutAiProviderSettingsNestedInput = {
    create?: XOR<UserCreateWithoutAiProviderSettingsInput, UserUncheckedCreateWithoutAiProviderSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiProviderSettingsInput
    upsert?: UserUpsertWithoutAiProviderSettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAiProviderSettingsInput, UserUpdateWithoutAiProviderSettingsInput>, UserUncheckedUpdateWithoutAiProviderSettingsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumMemberRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.MemberRole | EnumMemberRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMemberRoleFilter<$PrismaModel> | $Enums.MemberRole
  }

  export type NestedEnumMemberRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MemberRole | EnumMemberRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MemberRole[] | ListEnumMemberRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMemberRoleWithAggregatesFilter<$PrismaModel> | $Enums.MemberRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMemberRoleFilter<$PrismaModel>
    _max?: NestedEnumMemberRoleFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumArticleStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ArticleStatus | EnumArticleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumArticleStatusFilter<$PrismaModel> | $Enums.ArticleStatus
  }

  export type NestedEnumSourceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SourceType | EnumSourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSourceTypeFilter<$PrismaModel> | $Enums.SourceType
  }

  export type NestedEnumArticleStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ArticleStatus | EnumArticleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ArticleStatus[] | ListEnumArticleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumArticleStatusWithAggregatesFilter<$PrismaModel> | $Enums.ArticleStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumArticleStatusFilter<$PrismaModel>
    _max?: NestedEnumArticleStatusFilter<$PrismaModel>
  }

  export type NestedEnumSourceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SourceType | EnumSourceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SourceType[] | ListEnumSourceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSourceTypeWithAggregatesFilter<$PrismaModel> | $Enums.SourceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSourceTypeFilter<$PrismaModel>
    _max?: NestedEnumSourceTypeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumAlertTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeFilter<$PrismaModel> | $Enums.AlertType
  }

  export type NestedEnumAlertTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AlertType | EnumAlertTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AlertType[] | ListEnumAlertTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAlertTypeWithAggregatesFilter<$PrismaModel> | $Enums.AlertType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAlertTypeFilter<$PrismaModel>
    _max?: NestedEnumAlertTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumAIProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.AIProvider | EnumAIProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAIProviderFilter<$PrismaModel> | $Enums.AIProvider
  }

  export type NestedEnumAIProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AIProvider | EnumAIProviderFieldRefInput<$PrismaModel>
    in?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIProvider[] | ListEnumAIProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumAIProviderWithAggregatesFilter<$PrismaModel> | $Enums.AIProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAIProviderFilter<$PrismaModel>
    _max?: NestedEnumAIProviderFilter<$PrismaModel>
  }

  export type OrganizationMembershipCreateWithoutOrganizationInput = {
    id?: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
    user: UserCreateNestedOneWithoutMembershipsInput
  }

  export type OrganizationMembershipUncheckedCreateWithoutOrganizationInput = {
    id?: string
    userId: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
  }

  export type OrganizationMembershipCreateOrConnectWithoutOrganizationInput = {
    where: OrganizationMembershipWhereUniqueInput
    create: XOR<OrganizationMembershipCreateWithoutOrganizationInput, OrganizationMembershipUncheckedCreateWithoutOrganizationInput>
  }

  export type OrganizationMembershipCreateManyOrganizationInputEnvelope = {
    data: OrganizationMembershipCreateManyOrganizationInput | OrganizationMembershipCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ArticleCreateWithoutOrganizationInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    analytics?: ArticleAnalyticsCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionCreateNestedManyWithoutArticleInput
    author?: UserCreateNestedOneWithoutArticlesInput
    template?: TemplateCreateNestedOneWithoutArticlesInput
  }

  export type ArticleUncheckedCreateWithoutOrganizationInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionUncheckedCreateNestedManyWithoutArticleInput
  }

  export type ArticleCreateOrConnectWithoutOrganizationInput = {
    where: ArticleWhereUniqueInput
    create: XOR<ArticleCreateWithoutOrganizationInput, ArticleUncheckedCreateWithoutOrganizationInput>
  }

  export type ArticleCreateManyOrganizationInputEnvelope = {
    data: ArticleCreateManyOrganizationInput | ArticleCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type TemplateCreateWithoutOrganizationInput = {
    id?: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    articles?: ArticleCreateNestedManyWithoutTemplateInput
  }

  export type TemplateUncheckedCreateWithoutOrganizationInput = {
    id?: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    articles?: ArticleUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type TemplateCreateOrConnectWithoutOrganizationInput = {
    where: TemplateWhereUniqueInput
    create: XOR<TemplateCreateWithoutOrganizationInput, TemplateUncheckedCreateWithoutOrganizationInput>
  }

  export type TemplateCreateManyOrganizationInputEnvelope = {
    data: TemplateCreateManyOrganizationInput | TemplateCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type AIProviderSettingsCreateWithoutOrganizationInput = {
    id?: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAiProviderSettingsInput
  }

  export type AIProviderSettingsUncheckedCreateWithoutOrganizationInput = {
    id?: string
    userId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIProviderSettingsCreateOrConnectWithoutOrganizationInput = {
    where: AIProviderSettingsWhereUniqueInput
    create: XOR<AIProviderSettingsCreateWithoutOrganizationInput, AIProviderSettingsUncheckedCreateWithoutOrganizationInput>
  }

  export type AIProviderSettingsCreateManyOrganizationInputEnvelope = {
    data: AIProviderSettingsCreateManyOrganizationInput | AIProviderSettingsCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type AlertSettingsCreateWithoutOrganizationInput = {
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutAlertSettingsInput
  }

  export type AlertSettingsUncheckedCreateWithoutOrganizationInput = {
    id?: number
    userId?: string | null
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AlertSettingsCreateOrConnectWithoutOrganizationInput = {
    where: AlertSettingsWhereUniqueInput
    create: XOR<AlertSettingsCreateWithoutOrganizationInput, AlertSettingsUncheckedCreateWithoutOrganizationInput>
  }

  export type AlertSettingsCreateManyOrganizationInputEnvelope = {
    data: AlertSettingsCreateManyOrganizationInput | AlertSettingsCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ArticleAnalyticsCreateWithoutOrganizationInput = {
    id?: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    article: ArticleCreateNestedOneWithoutAnalyticsInput
  }

  export type ArticleAnalyticsUncheckedCreateWithoutOrganizationInput = {
    id?: string
    articleId: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleAnalyticsCreateOrConnectWithoutOrganizationInput = {
    where: ArticleAnalyticsWhereUniqueInput
    create: XOR<ArticleAnalyticsCreateWithoutOrganizationInput, ArticleAnalyticsUncheckedCreateWithoutOrganizationInput>
  }

  export type ArticleAnalyticsCreateManyOrganizationInputEnvelope = {
    data: ArticleAnalyticsCreateManyOrganizationInput | ArticleAnalyticsCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationMembershipUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: OrganizationMembershipWhereUniqueInput
    update: XOR<OrganizationMembershipUpdateWithoutOrganizationInput, OrganizationMembershipUncheckedUpdateWithoutOrganizationInput>
    create: XOR<OrganizationMembershipCreateWithoutOrganizationInput, OrganizationMembershipUncheckedCreateWithoutOrganizationInput>
  }

  export type OrganizationMembershipUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: OrganizationMembershipWhereUniqueInput
    data: XOR<OrganizationMembershipUpdateWithoutOrganizationInput, OrganizationMembershipUncheckedUpdateWithoutOrganizationInput>
  }

  export type OrganizationMembershipUpdateManyWithWhereWithoutOrganizationInput = {
    where: OrganizationMembershipScalarWhereInput
    data: XOR<OrganizationMembershipUpdateManyMutationInput, OrganizationMembershipUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type OrganizationMembershipScalarWhereInput = {
    AND?: OrganizationMembershipScalarWhereInput | OrganizationMembershipScalarWhereInput[]
    OR?: OrganizationMembershipScalarWhereInput[]
    NOT?: OrganizationMembershipScalarWhereInput | OrganizationMembershipScalarWhereInput[]
    id?: StringFilter<"OrganizationMembership"> | string
    userId?: StringFilter<"OrganizationMembership"> | string
    organizationId?: StringFilter<"OrganizationMembership"> | string
    role?: EnumMemberRoleFilter<"OrganizationMembership"> | $Enums.MemberRole
    isActive?: BoolFilter<"OrganizationMembership"> | boolean
    joinedAt?: DateTimeFilter<"OrganizationMembership"> | Date | string
  }

  export type ArticleUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ArticleWhereUniqueInput
    update: XOR<ArticleUpdateWithoutOrganizationInput, ArticleUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ArticleCreateWithoutOrganizationInput, ArticleUncheckedCreateWithoutOrganizationInput>
  }

  export type ArticleUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ArticleWhereUniqueInput
    data: XOR<ArticleUpdateWithoutOrganizationInput, ArticleUncheckedUpdateWithoutOrganizationInput>
  }

  export type ArticleUpdateManyWithWhereWithoutOrganizationInput = {
    where: ArticleScalarWhereInput
    data: XOR<ArticleUpdateManyMutationInput, ArticleUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ArticleScalarWhereInput = {
    AND?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
    OR?: ArticleScalarWhereInput[]
    NOT?: ArticleScalarWhereInput | ArticleScalarWhereInput[]
    id?: StringFilter<"Article"> | string
    organizationId?: StringFilter<"Article"> | string
    title?: StringFilter<"Article"> | string
    content?: StringNullableFilter<"Article"> | string | null
    summary?: StringNullableFilter<"Article"> | string | null
    slug?: StringFilter<"Article"> | string
    status?: EnumArticleStatusFilter<"Article"> | $Enums.ArticleStatus
    authorId?: StringNullableFilter<"Article"> | string | null
    metaTitle?: StringNullableFilter<"Article"> | string | null
    metaDescription?: StringNullableFilter<"Article"> | string | null
    tags?: JsonNullableFilter<"Article">
    keywords?: JsonNullableFilter<"Article">
    sourceType?: EnumSourceTypeFilter<"Article"> | $Enums.SourceType
    sourceData?: JsonNullableFilter<"Article">
    generatedBy?: StringNullableFilter<"Article"> | string | null
    templateId?: StringNullableFilter<"Article"> | string | null
    publishedAt?: DateTimeNullableFilter<"Article"> | Date | string | null
    scheduledAt?: DateTimeNullableFilter<"Article"> | Date | string | null
    viewCount?: IntFilter<"Article"> | number
    shareCount?: IntFilter<"Article"> | number
    engagementRate?: FloatFilter<"Article"> | number
    createdAt?: DateTimeFilter<"Article"> | Date | string
    updatedAt?: DateTimeFilter<"Article"> | Date | string
  }

  export type TemplateUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: TemplateWhereUniqueInput
    update: XOR<TemplateUpdateWithoutOrganizationInput, TemplateUncheckedUpdateWithoutOrganizationInput>
    create: XOR<TemplateCreateWithoutOrganizationInput, TemplateUncheckedCreateWithoutOrganizationInput>
  }

  export type TemplateUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: TemplateWhereUniqueInput
    data: XOR<TemplateUpdateWithoutOrganizationInput, TemplateUncheckedUpdateWithoutOrganizationInput>
  }

  export type TemplateUpdateManyWithWhereWithoutOrganizationInput = {
    where: TemplateScalarWhereInput
    data: XOR<TemplateUpdateManyMutationInput, TemplateUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type TemplateScalarWhereInput = {
    AND?: TemplateScalarWhereInput | TemplateScalarWhereInput[]
    OR?: TemplateScalarWhereInput[]
    NOT?: TemplateScalarWhereInput | TemplateScalarWhereInput[]
    id?: StringFilter<"Template"> | string
    organizationId?: StringFilter<"Template"> | string
    name?: StringFilter<"Template"> | string
    description?: StringNullableFilter<"Template"> | string | null
    content?: StringFilter<"Template"> | string
    variables?: JsonFilter<"Template">
    category?: StringNullableFilter<"Template"> | string | null
    usageCount?: IntFilter<"Template"> | number
    lastUsedAt?: DateTimeNullableFilter<"Template"> | Date | string | null
    isActive?: BoolFilter<"Template"> | boolean
    isSystem?: BoolFilter<"Template"> | boolean
    createdAt?: DateTimeFilter<"Template"> | Date | string
    updatedAt?: DateTimeFilter<"Template"> | Date | string
  }

  export type AIProviderSettingsUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: AIProviderSettingsWhereUniqueInput
    update: XOR<AIProviderSettingsUpdateWithoutOrganizationInput, AIProviderSettingsUncheckedUpdateWithoutOrganizationInput>
    create: XOR<AIProviderSettingsCreateWithoutOrganizationInput, AIProviderSettingsUncheckedCreateWithoutOrganizationInput>
  }

  export type AIProviderSettingsUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: AIProviderSettingsWhereUniqueInput
    data: XOR<AIProviderSettingsUpdateWithoutOrganizationInput, AIProviderSettingsUncheckedUpdateWithoutOrganizationInput>
  }

  export type AIProviderSettingsUpdateManyWithWhereWithoutOrganizationInput = {
    where: AIProviderSettingsScalarWhereInput
    data: XOR<AIProviderSettingsUpdateManyMutationInput, AIProviderSettingsUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type AIProviderSettingsScalarWhereInput = {
    AND?: AIProviderSettingsScalarWhereInput | AIProviderSettingsScalarWhereInput[]
    OR?: AIProviderSettingsScalarWhereInput[]
    NOT?: AIProviderSettingsScalarWhereInput | AIProviderSettingsScalarWhereInput[]
    id?: StringFilter<"AIProviderSettings"> | string
    organizationId?: StringFilter<"AIProviderSettings"> | string
    userId?: StringFilter<"AIProviderSettings"> | string
    provider?: EnumAIProviderFilter<"AIProviderSettings"> | $Enums.AIProvider
    apiKey?: StringFilter<"AIProviderSettings"> | string
    model?: StringFilter<"AIProviderSettings"> | string
    temperature?: FloatFilter<"AIProviderSettings"> | number
    maxTokens?: IntFilter<"AIProviderSettings"> | number
    topP?: FloatFilter<"AIProviderSettings"> | number
    frequencyPenalty?: FloatFilter<"AIProviderSettings"> | number
    presencePenalty?: FloatFilter<"AIProviderSettings"> | number
    advancedSettings?: JsonNullableFilter<"AIProviderSettings">
    isDefault?: BoolFilter<"AIProviderSettings"> | boolean
    isActive?: BoolFilter<"AIProviderSettings"> | boolean
    lastUsed?: DateTimeNullableFilter<"AIProviderSettings"> | Date | string | null
    lastModified?: DateTimeFilter<"AIProviderSettings"> | Date | string
    createdAt?: DateTimeFilter<"AIProviderSettings"> | Date | string
    updatedAt?: DateTimeFilter<"AIProviderSettings"> | Date | string
  }

  export type AlertSettingsUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: AlertSettingsWhereUniqueInput
    update: XOR<AlertSettingsUpdateWithoutOrganizationInput, AlertSettingsUncheckedUpdateWithoutOrganizationInput>
    create: XOR<AlertSettingsCreateWithoutOrganizationInput, AlertSettingsUncheckedCreateWithoutOrganizationInput>
  }

  export type AlertSettingsUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: AlertSettingsWhereUniqueInput
    data: XOR<AlertSettingsUpdateWithoutOrganizationInput, AlertSettingsUncheckedUpdateWithoutOrganizationInput>
  }

  export type AlertSettingsUpdateManyWithWhereWithoutOrganizationInput = {
    where: AlertSettingsScalarWhereInput
    data: XOR<AlertSettingsUpdateManyMutationInput, AlertSettingsUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type AlertSettingsScalarWhereInput = {
    AND?: AlertSettingsScalarWhereInput | AlertSettingsScalarWhereInput[]
    OR?: AlertSettingsScalarWhereInput[]
    NOT?: AlertSettingsScalarWhereInput | AlertSettingsScalarWhereInput[]
    id?: IntFilter<"AlertSettings"> | number
    organizationId?: StringFilter<"AlertSettings"> | string
    userId?: StringNullableFilter<"AlertSettings"> | string | null
    symbol?: StringNullableFilter<"AlertSettings"> | string | null
    alertType?: StringFilter<"AlertSettings"> | string
    isEnabled?: BoolFilter<"AlertSettings"> | boolean
    threshold?: FloatNullableFilter<"AlertSettings"> | number | null
    cooldownHours?: IntFilter<"AlertSettings"> | number
    maxAlertsPerDay?: IntFilter<"AlertSettings"> | number
    maxGlobalAlertsPerDay?: IntFilter<"AlertSettings"> | number
    createdAt?: DateTimeFilter<"AlertSettings"> | Date | string
    updatedAt?: DateTimeFilter<"AlertSettings"> | Date | string
  }

  export type ArticleAnalyticsUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ArticleAnalyticsWhereUniqueInput
    update: XOR<ArticleAnalyticsUpdateWithoutOrganizationInput, ArticleAnalyticsUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ArticleAnalyticsCreateWithoutOrganizationInput, ArticleAnalyticsUncheckedCreateWithoutOrganizationInput>
  }

  export type ArticleAnalyticsUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ArticleAnalyticsWhereUniqueInput
    data: XOR<ArticleAnalyticsUpdateWithoutOrganizationInput, ArticleAnalyticsUncheckedUpdateWithoutOrganizationInput>
  }

  export type ArticleAnalyticsUpdateManyWithWhereWithoutOrganizationInput = {
    where: ArticleAnalyticsScalarWhereInput
    data: XOR<ArticleAnalyticsUpdateManyMutationInput, ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ArticleAnalyticsScalarWhereInput = {
    AND?: ArticleAnalyticsScalarWhereInput | ArticleAnalyticsScalarWhereInput[]
    OR?: ArticleAnalyticsScalarWhereInput[]
    NOT?: ArticleAnalyticsScalarWhereInput | ArticleAnalyticsScalarWhereInput[]
    id?: StringFilter<"ArticleAnalytics"> | string
    organizationId?: StringFilter<"ArticleAnalytics"> | string
    articleId?: StringFilter<"ArticleAnalytics"> | string
    date?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    views?: IntFilter<"ArticleAnalytics"> | number
    uniqueViews?: IntFilter<"ArticleAnalytics"> | number
    shares?: IntFilter<"ArticleAnalytics"> | number
    comments?: IntFilter<"ArticleAnalytics"> | number
    avgReadTime?: FloatFilter<"ArticleAnalytics"> | number
    bounceRate?: FloatFilter<"ArticleAnalytics"> | number
    engagementRate?: FloatFilter<"ArticleAnalytics"> | number
    trafficSources?: JsonNullableFilter<"ArticleAnalytics">
    createdAt?: DateTimeFilter<"ArticleAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"ArticleAnalytics"> | Date | string
  }

  export type UserCreateWithoutMembershipsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionCreateNestedManyWithoutAuthorInput
    articles?: ArticleCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMembershipsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput
    articles?: ArticleUncheckedCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMembershipsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
  }

  export type OrganizationCreateWithoutMembershipsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    articles?: ArticleCreateNestedManyWithoutOrganizationInput
    templates?: TemplateCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutMembershipsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    articles?: ArticleUncheckedCreateNestedManyWithoutOrganizationInput
    templates?: TemplateUncheckedCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutMembershipsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutMembershipsInput, OrganizationUncheckedCreateWithoutMembershipsInput>
  }

  export type UserUpsertWithoutMembershipsInput = {
    update: XOR<UserUpdateWithoutMembershipsInput, UserUncheckedUpdateWithoutMembershipsInput>
    create: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMembershipsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMembershipsInput, UserUncheckedUpdateWithoutMembershipsInput>
  }

  export type UserUpdateWithoutMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationUpsertWithoutMembershipsInput = {
    update: XOR<OrganizationUpdateWithoutMembershipsInput, OrganizationUncheckedUpdateWithoutMembershipsInput>
    create: XOR<OrganizationCreateWithoutMembershipsInput, OrganizationUncheckedCreateWithoutMembershipsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutMembershipsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutMembershipsInput, OrganizationUncheckedUpdateWithoutMembershipsInput>
  }

  export type OrganizationUpdateWithoutMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    articles?: ArticleUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    articles?: ArticleUncheckedUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUncheckedUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationMembershipCreateWithoutUserInput = {
    id?: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutMembershipsInput
  }

  export type OrganizationMembershipUncheckedCreateWithoutUserInput = {
    id?: string
    organizationId: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
  }

  export type OrganizationMembershipCreateOrConnectWithoutUserInput = {
    where: OrganizationMembershipWhereUniqueInput
    create: XOR<OrganizationMembershipCreateWithoutUserInput, OrganizationMembershipUncheckedCreateWithoutUserInput>
  }

  export type OrganizationMembershipCreateManyUserInputEnvelope = {
    data: OrganizationMembershipCreateManyUserInput | OrganizationMembershipCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AIProviderSettingsCreateWithoutUserInput = {
    id?: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAiProviderSettingsInput
  }

  export type AIProviderSettingsUncheckedCreateWithoutUserInput = {
    id?: string
    organizationId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIProviderSettingsCreateOrConnectWithoutUserInput = {
    where: AIProviderSettingsWhereUniqueInput
    create: XOR<AIProviderSettingsCreateWithoutUserInput, AIProviderSettingsUncheckedCreateWithoutUserInput>
  }

  export type AIProviderSettingsCreateManyUserInputEnvelope = {
    data: AIProviderSettingsCreateManyUserInput | AIProviderSettingsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AlertSettingsCreateWithoutUserInput = {
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAlertSettingsInput
  }

  export type AlertSettingsUncheckedCreateWithoutUserInput = {
    id?: number
    organizationId: string
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AlertSettingsCreateOrConnectWithoutUserInput = {
    where: AlertSettingsWhereUniqueInput
    create: XOR<AlertSettingsCreateWithoutUserInput, AlertSettingsUncheckedCreateWithoutUserInput>
  }

  export type AlertSettingsCreateManyUserInputEnvelope = {
    data: AlertSettingsCreateManyUserInput | AlertSettingsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ArticleVersionCreateWithoutAuthorInput = {
    id?: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    changeType?: string | null
    article: ArticleCreateNestedOneWithoutVersionsInput
  }

  export type ArticleVersionUncheckedCreateWithoutAuthorInput = {
    id?: string
    articleId: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    changeType?: string | null
  }

  export type ArticleVersionCreateOrConnectWithoutAuthorInput = {
    where: ArticleVersionWhereUniqueInput
    create: XOR<ArticleVersionCreateWithoutAuthorInput, ArticleVersionUncheckedCreateWithoutAuthorInput>
  }

  export type ArticleVersionCreateManyAuthorInputEnvelope = {
    data: ArticleVersionCreateManyAuthorInput | ArticleVersionCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type ArticleCreateWithoutAuthorInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutArticlesInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionCreateNestedManyWithoutArticleInput
    template?: TemplateCreateNestedOneWithoutArticlesInput
  }

  export type ArticleUncheckedCreateWithoutAuthorInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionUncheckedCreateNestedManyWithoutArticleInput
  }

  export type ArticleCreateOrConnectWithoutAuthorInput = {
    where: ArticleWhereUniqueInput
    create: XOR<ArticleCreateWithoutAuthorInput, ArticleUncheckedCreateWithoutAuthorInput>
  }

  export type ArticleCreateManyAuthorInputEnvelope = {
    data: ArticleCreateManyAuthorInput | ArticleCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type UserSessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    userAgent?: string | null
    ipAddress?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type UserSessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    userAgent?: string | null
    ipAddress?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type UserSessionCreateOrConnectWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionCreateManyUserInputEnvelope = {
    data: UserSessionCreateManyUserInput | UserSessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationMembershipUpsertWithWhereUniqueWithoutUserInput = {
    where: OrganizationMembershipWhereUniqueInput
    update: XOR<OrganizationMembershipUpdateWithoutUserInput, OrganizationMembershipUncheckedUpdateWithoutUserInput>
    create: XOR<OrganizationMembershipCreateWithoutUserInput, OrganizationMembershipUncheckedCreateWithoutUserInput>
  }

  export type OrganizationMembershipUpdateWithWhereUniqueWithoutUserInput = {
    where: OrganizationMembershipWhereUniqueInput
    data: XOR<OrganizationMembershipUpdateWithoutUserInput, OrganizationMembershipUncheckedUpdateWithoutUserInput>
  }

  export type OrganizationMembershipUpdateManyWithWhereWithoutUserInput = {
    where: OrganizationMembershipScalarWhereInput
    data: XOR<OrganizationMembershipUpdateManyMutationInput, OrganizationMembershipUncheckedUpdateManyWithoutUserInput>
  }

  export type AIProviderSettingsUpsertWithWhereUniqueWithoutUserInput = {
    where: AIProviderSettingsWhereUniqueInput
    update: XOR<AIProviderSettingsUpdateWithoutUserInput, AIProviderSettingsUncheckedUpdateWithoutUserInput>
    create: XOR<AIProviderSettingsCreateWithoutUserInput, AIProviderSettingsUncheckedCreateWithoutUserInput>
  }

  export type AIProviderSettingsUpdateWithWhereUniqueWithoutUserInput = {
    where: AIProviderSettingsWhereUniqueInput
    data: XOR<AIProviderSettingsUpdateWithoutUserInput, AIProviderSettingsUncheckedUpdateWithoutUserInput>
  }

  export type AIProviderSettingsUpdateManyWithWhereWithoutUserInput = {
    where: AIProviderSettingsScalarWhereInput
    data: XOR<AIProviderSettingsUpdateManyMutationInput, AIProviderSettingsUncheckedUpdateManyWithoutUserInput>
  }

  export type AlertSettingsUpsertWithWhereUniqueWithoutUserInput = {
    where: AlertSettingsWhereUniqueInput
    update: XOR<AlertSettingsUpdateWithoutUserInput, AlertSettingsUncheckedUpdateWithoutUserInput>
    create: XOR<AlertSettingsCreateWithoutUserInput, AlertSettingsUncheckedCreateWithoutUserInput>
  }

  export type AlertSettingsUpdateWithWhereUniqueWithoutUserInput = {
    where: AlertSettingsWhereUniqueInput
    data: XOR<AlertSettingsUpdateWithoutUserInput, AlertSettingsUncheckedUpdateWithoutUserInput>
  }

  export type AlertSettingsUpdateManyWithWhereWithoutUserInput = {
    where: AlertSettingsScalarWhereInput
    data: XOR<AlertSettingsUpdateManyMutationInput, AlertSettingsUncheckedUpdateManyWithoutUserInput>
  }

  export type ArticleVersionUpsertWithWhereUniqueWithoutAuthorInput = {
    where: ArticleVersionWhereUniqueInput
    update: XOR<ArticleVersionUpdateWithoutAuthorInput, ArticleVersionUncheckedUpdateWithoutAuthorInput>
    create: XOR<ArticleVersionCreateWithoutAuthorInput, ArticleVersionUncheckedCreateWithoutAuthorInput>
  }

  export type ArticleVersionUpdateWithWhereUniqueWithoutAuthorInput = {
    where: ArticleVersionWhereUniqueInput
    data: XOR<ArticleVersionUpdateWithoutAuthorInput, ArticleVersionUncheckedUpdateWithoutAuthorInput>
  }

  export type ArticleVersionUpdateManyWithWhereWithoutAuthorInput = {
    where: ArticleVersionScalarWhereInput
    data: XOR<ArticleVersionUpdateManyMutationInput, ArticleVersionUncheckedUpdateManyWithoutAuthorInput>
  }

  export type ArticleVersionScalarWhereInput = {
    AND?: ArticleVersionScalarWhereInput | ArticleVersionScalarWhereInput[]
    OR?: ArticleVersionScalarWhereInput[]
    NOT?: ArticleVersionScalarWhereInput | ArticleVersionScalarWhereInput[]
    id?: StringFilter<"ArticleVersion"> | string
    articleId?: StringFilter<"ArticleVersion"> | string
    version?: IntFilter<"ArticleVersion"> | number
    title?: StringFilter<"ArticleVersion"> | string
    content?: StringFilter<"ArticleVersion"> | string
    changes?: StringNullableFilter<"ArticleVersion"> | string | null
    createdAt?: DateTimeFilter<"ArticleVersion"> | Date | string
    authorId?: StringNullableFilter<"ArticleVersion"> | string | null
    changeType?: StringNullableFilter<"ArticleVersion"> | string | null
  }

  export type ArticleUpsertWithWhereUniqueWithoutAuthorInput = {
    where: ArticleWhereUniqueInput
    update: XOR<ArticleUpdateWithoutAuthorInput, ArticleUncheckedUpdateWithoutAuthorInput>
    create: XOR<ArticleCreateWithoutAuthorInput, ArticleUncheckedCreateWithoutAuthorInput>
  }

  export type ArticleUpdateWithWhereUniqueWithoutAuthorInput = {
    where: ArticleWhereUniqueInput
    data: XOR<ArticleUpdateWithoutAuthorInput, ArticleUncheckedUpdateWithoutAuthorInput>
  }

  export type ArticleUpdateManyWithWhereWithoutAuthorInput = {
    where: ArticleScalarWhereInput
    data: XOR<ArticleUpdateManyMutationInput, ArticleUncheckedUpdateManyWithoutAuthorInput>
  }

  export type UserSessionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    update: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    data: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
  }

  export type UserSessionUpdateManyWithWhereWithoutUserInput = {
    where: UserSessionScalarWhereInput
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSessionScalarWhereInput = {
    AND?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    OR?: UserSessionScalarWhereInput[]
    NOT?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    sessionToken?: StringFilter<"UserSession"> | string
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionCreateNestedManyWithoutAuthorInput
    articles?: ArticleCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput
    articles?: ArticleUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type OrganizationCreateWithoutArticlesInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutOrganizationInput
    templates?: TemplateCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutArticlesInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput
    templates?: TemplateUncheckedCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutArticlesInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutArticlesInput, OrganizationUncheckedCreateWithoutArticlesInput>
  }

  export type ArticleAnalyticsCreateWithoutArticleInput = {
    id?: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutAnalyticsInput
  }

  export type ArticleAnalyticsUncheckedCreateWithoutArticleInput = {
    id?: string
    organizationId: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleAnalyticsCreateOrConnectWithoutArticleInput = {
    where: ArticleAnalyticsWhereUniqueInput
    create: XOR<ArticleAnalyticsCreateWithoutArticleInput, ArticleAnalyticsUncheckedCreateWithoutArticleInput>
  }

  export type ArticleAnalyticsCreateManyArticleInputEnvelope = {
    data: ArticleAnalyticsCreateManyArticleInput | ArticleAnalyticsCreateManyArticleInput[]
    skipDuplicates?: boolean
  }

  export type ArticleVersionCreateWithoutArticleInput = {
    id?: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    changeType?: string | null
    author?: UserCreateNestedOneWithoutArticleVersionsInput
  }

  export type ArticleVersionUncheckedCreateWithoutArticleInput = {
    id?: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    authorId?: string | null
    changeType?: string | null
  }

  export type ArticleVersionCreateOrConnectWithoutArticleInput = {
    where: ArticleVersionWhereUniqueInput
    create: XOR<ArticleVersionCreateWithoutArticleInput, ArticleVersionUncheckedCreateWithoutArticleInput>
  }

  export type ArticleVersionCreateManyArticleInputEnvelope = {
    data: ArticleVersionCreateManyArticleInput | ArticleVersionCreateManyArticleInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutArticlesInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutArticlesInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutArticlesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutArticlesInput, UserUncheckedCreateWithoutArticlesInput>
  }

  export type TemplateCreateWithoutArticlesInput = {
    id?: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutTemplatesInput
  }

  export type TemplateUncheckedCreateWithoutArticlesInput = {
    id?: string
    organizationId: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateCreateOrConnectWithoutArticlesInput = {
    where: TemplateWhereUniqueInput
    create: XOR<TemplateCreateWithoutArticlesInput, TemplateUncheckedCreateWithoutArticlesInput>
  }

  export type OrganizationUpsertWithoutArticlesInput = {
    update: XOR<OrganizationUpdateWithoutArticlesInput, OrganizationUncheckedUpdateWithoutArticlesInput>
    create: XOR<OrganizationCreateWithoutArticlesInput, OrganizationUncheckedCreateWithoutArticlesInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutArticlesInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutArticlesInput, OrganizationUncheckedUpdateWithoutArticlesInput>
  }

  export type OrganizationUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUncheckedUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ArticleAnalyticsUpsertWithWhereUniqueWithoutArticleInput = {
    where: ArticleAnalyticsWhereUniqueInput
    update: XOR<ArticleAnalyticsUpdateWithoutArticleInput, ArticleAnalyticsUncheckedUpdateWithoutArticleInput>
    create: XOR<ArticleAnalyticsCreateWithoutArticleInput, ArticleAnalyticsUncheckedCreateWithoutArticleInput>
  }

  export type ArticleAnalyticsUpdateWithWhereUniqueWithoutArticleInput = {
    where: ArticleAnalyticsWhereUniqueInput
    data: XOR<ArticleAnalyticsUpdateWithoutArticleInput, ArticleAnalyticsUncheckedUpdateWithoutArticleInput>
  }

  export type ArticleAnalyticsUpdateManyWithWhereWithoutArticleInput = {
    where: ArticleAnalyticsScalarWhereInput
    data: XOR<ArticleAnalyticsUpdateManyMutationInput, ArticleAnalyticsUncheckedUpdateManyWithoutArticleInput>
  }

  export type ArticleVersionUpsertWithWhereUniqueWithoutArticleInput = {
    where: ArticleVersionWhereUniqueInput
    update: XOR<ArticleVersionUpdateWithoutArticleInput, ArticleVersionUncheckedUpdateWithoutArticleInput>
    create: XOR<ArticleVersionCreateWithoutArticleInput, ArticleVersionUncheckedCreateWithoutArticleInput>
  }

  export type ArticleVersionUpdateWithWhereUniqueWithoutArticleInput = {
    where: ArticleVersionWhereUniqueInput
    data: XOR<ArticleVersionUpdateWithoutArticleInput, ArticleVersionUncheckedUpdateWithoutArticleInput>
  }

  export type ArticleVersionUpdateManyWithWhereWithoutArticleInput = {
    where: ArticleVersionScalarWhereInput
    data: XOR<ArticleVersionUpdateManyMutationInput, ArticleVersionUncheckedUpdateManyWithoutArticleInput>
  }

  export type UserUpsertWithoutArticlesInput = {
    update: XOR<UserUpdateWithoutArticlesInput, UserUncheckedUpdateWithoutArticlesInput>
    create: XOR<UserCreateWithoutArticlesInput, UserUncheckedCreateWithoutArticlesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutArticlesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutArticlesInput, UserUncheckedUpdateWithoutArticlesInput>
  }

  export type UserUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TemplateUpsertWithoutArticlesInput = {
    update: XOR<TemplateUpdateWithoutArticlesInput, TemplateUncheckedUpdateWithoutArticlesInput>
    create: XOR<TemplateCreateWithoutArticlesInput, TemplateUncheckedCreateWithoutArticlesInput>
    where?: TemplateWhereInput
  }

  export type TemplateUpdateToOneWithWhereWithoutArticlesInput = {
    where?: TemplateWhereInput
    data: XOR<TemplateUpdateWithoutArticlesInput, TemplateUncheckedUpdateWithoutArticlesInput>
  }

  export type TemplateUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutTemplatesNestedInput
  }

  export type TemplateUncheckedUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationCreateWithoutTemplatesInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutOrganizationInput
    articles?: ArticleCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutTemplatesInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput
    articles?: ArticleUncheckedCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutTemplatesInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutTemplatesInput, OrganizationUncheckedCreateWithoutTemplatesInput>
  }

  export type ArticleCreateWithoutTemplateInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutArticlesInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionCreateNestedManyWithoutArticleInput
    author?: UserCreateNestedOneWithoutArticlesInput
  }

  export type ArticleUncheckedCreateWithoutTemplateInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutArticleInput
    versions?: ArticleVersionUncheckedCreateNestedManyWithoutArticleInput
  }

  export type ArticleCreateOrConnectWithoutTemplateInput = {
    where: ArticleWhereUniqueInput
    create: XOR<ArticleCreateWithoutTemplateInput, ArticleUncheckedCreateWithoutTemplateInput>
  }

  export type ArticleCreateManyTemplateInputEnvelope = {
    data: ArticleCreateManyTemplateInput | ArticleCreateManyTemplateInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutTemplatesInput = {
    update: XOR<OrganizationUpdateWithoutTemplatesInput, OrganizationUncheckedUpdateWithoutTemplatesInput>
    create: XOR<OrganizationCreateWithoutTemplatesInput, OrganizationUncheckedCreateWithoutTemplatesInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutTemplatesInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutTemplatesInput, OrganizationUncheckedUpdateWithoutTemplatesInput>
  }

  export type OrganizationUpdateWithoutTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ArticleUpsertWithWhereUniqueWithoutTemplateInput = {
    where: ArticleWhereUniqueInput
    update: XOR<ArticleUpdateWithoutTemplateInput, ArticleUncheckedUpdateWithoutTemplateInput>
    create: XOR<ArticleCreateWithoutTemplateInput, ArticleUncheckedCreateWithoutTemplateInput>
  }

  export type ArticleUpdateWithWhereUniqueWithoutTemplateInput = {
    where: ArticleWhereUniqueInput
    data: XOR<ArticleUpdateWithoutTemplateInput, ArticleUncheckedUpdateWithoutTemplateInput>
  }

  export type ArticleUpdateManyWithWhereWithoutTemplateInput = {
    where: ArticleScalarWhereInput
    data: XOR<ArticleUpdateManyMutationInput, ArticleUncheckedUpdateManyWithoutTemplateInput>
  }

  export type ArticleCreateWithoutVersionsInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutArticlesInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutArticleInput
    author?: UserCreateNestedOneWithoutArticlesInput
    template?: TemplateCreateNestedOneWithoutArticlesInput
  }

  export type ArticleUncheckedCreateWithoutVersionsInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutArticleInput
  }

  export type ArticleCreateOrConnectWithoutVersionsInput = {
    where: ArticleWhereUniqueInput
    create: XOR<ArticleCreateWithoutVersionsInput, ArticleUncheckedCreateWithoutVersionsInput>
  }

  export type UserCreateWithoutArticleVersionsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutUserInput
    articles?: ArticleCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutArticleVersionsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutUserInput
    articles?: ArticleUncheckedCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutArticleVersionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutArticleVersionsInput, UserUncheckedCreateWithoutArticleVersionsInput>
  }

  export type ArticleUpsertWithoutVersionsInput = {
    update: XOR<ArticleUpdateWithoutVersionsInput, ArticleUncheckedUpdateWithoutVersionsInput>
    create: XOR<ArticleCreateWithoutVersionsInput, ArticleUncheckedCreateWithoutVersionsInput>
    where?: ArticleWhereInput
  }

  export type ArticleUpdateToOneWithWhereWithoutVersionsInput = {
    where?: ArticleWhereInput
    data: XOR<ArticleUpdateWithoutVersionsInput, ArticleUncheckedUpdateWithoutVersionsInput>
  }

  export type ArticleUpdateWithoutVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutArticlesNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutArticleNestedInput
    author?: UserUpdateOneWithoutArticlesNestedInput
    template?: TemplateUpdateOneWithoutArticlesNestedInput
  }

  export type ArticleUncheckedUpdateWithoutVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutArticleNestedInput
  }

  export type UserUpsertWithoutArticleVersionsInput = {
    update: XOR<UserUpdateWithoutArticleVersionsInput, UserUncheckedUpdateWithoutArticleVersionsInput>
    create: XOR<UserCreateWithoutArticleVersionsInput, UserUncheckedCreateWithoutArticleVersionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutArticleVersionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutArticleVersionsInput, UserUncheckedUpdateWithoutArticleVersionsInput>
  }

  export type UserUpdateWithoutArticleVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutUserNestedInput
    articles?: ArticleUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutArticleVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutUserNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationCreateWithoutAnalyticsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutOrganizationInput
    articles?: ArticleCreateNestedManyWithoutOrganizationInput
    templates?: TemplateCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutAnalyticsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput
    articles?: ArticleUncheckedCreateNestedManyWithoutOrganizationInput
    templates?: TemplateUncheckedCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutAnalyticsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutAnalyticsInput, OrganizationUncheckedCreateWithoutAnalyticsInput>
  }

  export type ArticleCreateWithoutAnalyticsInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutArticlesInput
    versions?: ArticleVersionCreateNestedManyWithoutArticleInput
    author?: UserCreateNestedOneWithoutArticlesInput
    template?: TemplateCreateNestedOneWithoutArticlesInput
  }

  export type ArticleUncheckedCreateWithoutAnalyticsInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    versions?: ArticleVersionUncheckedCreateNestedManyWithoutArticleInput
  }

  export type ArticleCreateOrConnectWithoutAnalyticsInput = {
    where: ArticleWhereUniqueInput
    create: XOR<ArticleCreateWithoutAnalyticsInput, ArticleUncheckedCreateWithoutAnalyticsInput>
  }

  export type OrganizationUpsertWithoutAnalyticsInput = {
    update: XOR<OrganizationUpdateWithoutAnalyticsInput, OrganizationUncheckedUpdateWithoutAnalyticsInput>
    create: XOR<OrganizationCreateWithoutAnalyticsInput, OrganizationUncheckedCreateWithoutAnalyticsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutAnalyticsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutAnalyticsInput, OrganizationUncheckedUpdateWithoutAnalyticsInput>
  }

  export type OrganizationUpdateWithoutAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUncheckedUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ArticleUpsertWithoutAnalyticsInput = {
    update: XOR<ArticleUpdateWithoutAnalyticsInput, ArticleUncheckedUpdateWithoutAnalyticsInput>
    create: XOR<ArticleCreateWithoutAnalyticsInput, ArticleUncheckedCreateWithoutAnalyticsInput>
    where?: ArticleWhereInput
  }

  export type ArticleUpdateToOneWithWhereWithoutAnalyticsInput = {
    where?: ArticleWhereInput
    data: XOR<ArticleUpdateWithoutAnalyticsInput, ArticleUncheckedUpdateWithoutAnalyticsInput>
  }

  export type ArticleUpdateWithoutAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutArticlesNestedInput
    versions?: ArticleVersionUpdateManyWithoutArticleNestedInput
    author?: UserUpdateOneWithoutArticlesNestedInput
    template?: TemplateUpdateOneWithoutArticlesNestedInput
  }

  export type ArticleUncheckedUpdateWithoutAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    versions?: ArticleVersionUncheckedUpdateManyWithoutArticleNestedInput
  }

  export type OrganizationCreateWithoutAlertSettingsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutOrganizationInput
    articles?: ArticleCreateNestedManyWithoutOrganizationInput
    templates?: TemplateCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutAlertSettingsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput
    articles?: ArticleUncheckedCreateNestedManyWithoutOrganizationInput
    templates?: TemplateUncheckedCreateNestedManyWithoutOrganizationInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutAlertSettingsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutAlertSettingsInput, OrganizationUncheckedCreateWithoutAlertSettingsInput>
  }

  export type UserCreateWithoutAlertSettingsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionCreateNestedManyWithoutAuthorInput
    articles?: ArticleCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAlertSettingsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput
    aiProviderSettings?: AIProviderSettingsUncheckedCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput
    articles?: ArticleUncheckedCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAlertSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAlertSettingsInput, UserUncheckedCreateWithoutAlertSettingsInput>
  }

  export type OrganizationUpsertWithoutAlertSettingsInput = {
    update: XOR<OrganizationUpdateWithoutAlertSettingsInput, OrganizationUncheckedUpdateWithoutAlertSettingsInput>
    create: XOR<OrganizationCreateWithoutAlertSettingsInput, OrganizationUncheckedCreateWithoutAlertSettingsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutAlertSettingsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutAlertSettingsInput, OrganizationUncheckedUpdateWithoutAlertSettingsInput>
  }

  export type OrganizationUpdateWithoutAlertSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutAlertSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUncheckedUpdateManyWithoutOrganizationNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutAlertSettingsInput = {
    update: XOR<UserUpdateWithoutAlertSettingsInput, UserUncheckedUpdateWithoutAlertSettingsInput>
    create: XOR<UserCreateWithoutAlertSettingsInput, UserUncheckedCreateWithoutAlertSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAlertSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAlertSettingsInput, UserUncheckedUpdateWithoutAlertSettingsInput>
  }

  export type UserUpdateWithoutAlertSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAlertSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput
    aiProviderSettings?: AIProviderSettingsUncheckedUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationCreateWithoutAiProviderSettingsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutOrganizationInput
    articles?: ArticleCreateNestedManyWithoutOrganizationInput
    templates?: TemplateCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutAiProviderSettingsInput = {
    id?: string
    name: string
    slug: string
    domain?: string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: string
    maxUsers?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutOrganizationInput
    articles?: ArticleUncheckedCreateNestedManyWithoutOrganizationInput
    templates?: TemplateUncheckedCreateNestedManyWithoutOrganizationInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutOrganizationInput
    analytics?: ArticleAnalyticsUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutAiProviderSettingsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutAiProviderSettingsInput, OrganizationUncheckedCreateWithoutAiProviderSettingsInput>
  }

  export type UserCreateWithoutAiProviderSettingsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionCreateNestedManyWithoutAuthorInput
    articles?: ArticleCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAiProviderSettingsInput = {
    id?: string
    email: string
    username: string
    password: string
    firstName?: string | null
    lastName?: string | null
    avatar?: string | null
    role?: $Enums.UserRole
    isActive?: boolean
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: boolean
    mfaSecret?: string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    memberships?: OrganizationMembershipUncheckedCreateNestedManyWithoutUserInput
    alertSettings?: AlertSettingsUncheckedCreateNestedManyWithoutUserInput
    articleVersions?: ArticleVersionUncheckedCreateNestedManyWithoutAuthorInput
    articles?: ArticleUncheckedCreateNestedManyWithoutAuthorInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAiProviderSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAiProviderSettingsInput, UserUncheckedCreateWithoutAiProviderSettingsInput>
  }

  export type OrganizationUpsertWithoutAiProviderSettingsInput = {
    update: XOR<OrganizationUpdateWithoutAiProviderSettingsInput, OrganizationUncheckedUpdateWithoutAiProviderSettingsInput>
    create: XOR<OrganizationCreateWithoutAiProviderSettingsInput, OrganizationUncheckedCreateWithoutAiProviderSettingsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutAiProviderSettingsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutAiProviderSettingsInput, OrganizationUncheckedUpdateWithoutAiProviderSettingsInput>
  }

  export type OrganizationUpdateWithoutAiProviderSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutAiProviderSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: NullableJsonNullValueInput | InputJsonValue
    plan?: StringFieldUpdateOperationsInput | string
    maxUsers?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutOrganizationNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutOrganizationNestedInput
    templates?: TemplateUncheckedUpdateManyWithoutOrganizationNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutOrganizationNestedInput
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutAiProviderSettingsInput = {
    update: XOR<UserUpdateWithoutAiProviderSettingsInput, UserUncheckedUpdateWithoutAiProviderSettingsInput>
    create: XOR<UserCreateWithoutAiProviderSettingsInput, UserUncheckedCreateWithoutAiProviderSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAiProviderSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAiProviderSettingsInput, UserUncheckedUpdateWithoutAiProviderSettingsInput>
  }

  export type UserUpdateWithoutAiProviderSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAiProviderSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    mfaEnabled?: BoolFieldUpdateOperationsInput | boolean
    mfaSecret?: NullableStringFieldUpdateOperationsInput | string | null
    mfaBackupCodes?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    memberships?: OrganizationMembershipUncheckedUpdateManyWithoutUserNestedInput
    alertSettings?: AlertSettingsUncheckedUpdateManyWithoutUserNestedInput
    articleVersions?: ArticleVersionUncheckedUpdateManyWithoutAuthorNestedInput
    articles?: ArticleUncheckedUpdateManyWithoutAuthorNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationMembershipCreateManyOrganizationInput = {
    id?: string
    userId: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
  }

  export type ArticleCreateManyOrganizationInput = {
    id?: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TemplateCreateManyOrganizationInput = {
    id?: string
    name: string
    description?: string | null
    content: string
    variables: JsonNullValueInput | InputJsonValue
    category?: string | null
    usageCount?: number
    lastUsedAt?: Date | string | null
    isActive?: boolean
    isSystem?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIProviderSettingsCreateManyOrganizationInput = {
    id?: string
    userId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AlertSettingsCreateManyOrganizationInput = {
    id?: number
    userId?: string | null
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleAnalyticsCreateManyOrganizationInput = {
    id?: string
    articleId: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrganizationMembershipUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutMembershipsNestedInput
  }

  export type OrganizationMembershipUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationMembershipUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    analytics?: ArticleAnalyticsUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUpdateManyWithoutArticleNestedInput
    author?: UserUpdateOneWithoutArticlesNestedInput
    template?: TemplateUpdateOneWithoutArticlesNestedInput
  }

  export type ArticleUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUncheckedUpdateManyWithoutArticleNestedInput
  }

  export type ArticleUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TemplateUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    articles?: ArticleUpdateManyWithoutTemplateNestedInput
  }

  export type TemplateUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    articles?: ArticleUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type TemplateUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    variables?: JsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    usageCount?: IntFieldUpdateOperationsInput | number
    lastUsedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSystem?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAiProviderSettingsNestedInput
  }

  export type AIProviderSettingsUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsUpdateWithoutOrganizationInput = {
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutAlertSettingsNestedInput
  }

  export type AlertSettingsUncheckedUpdateWithoutOrganizationInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsUncheckedUpdateManyWithoutOrganizationInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleAnalyticsUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    article?: ArticleUpdateOneRequiredWithoutAnalyticsNestedInput
  }

  export type ArticleAnalyticsUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleAnalyticsUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationMembershipCreateManyUserInput = {
    id?: string
    organizationId: string
    role?: $Enums.MemberRole
    isActive?: boolean
    joinedAt?: Date | string
  }

  export type AIProviderSettingsCreateManyUserInput = {
    id?: string
    organizationId: string
    provider: $Enums.AIProvider
    apiKey: string
    model: string
    temperature?: number
    maxTokens?: number
    topP?: number
    frequencyPenalty?: number
    presencePenalty?: number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: boolean
    isActive?: boolean
    lastUsed?: Date | string | null
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AlertSettingsCreateManyUserInput = {
    id?: number
    organizationId: string
    symbol?: string | null
    alertType: string
    isEnabled?: boolean
    threshold?: number | null
    cooldownHours?: number
    maxAlertsPerDay?: number
    maxGlobalAlertsPerDay?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleVersionCreateManyAuthorInput = {
    id?: string
    articleId: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    changeType?: string | null
  }

  export type ArticleCreateManyAuthorInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    templateId?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    userAgent?: string | null
    ipAddress?: string | null
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type OrganizationMembershipUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutMembershipsNestedInput
  }

  export type OrganizationMembershipUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationMembershipUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: EnumMemberRoleFieldUpdateOperationsInput | $Enums.MemberRole
    isActive?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAiProviderSettingsNestedInput
  }

  export type AIProviderSettingsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIProviderSettingsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    provider?: EnumAIProviderFieldUpdateOperationsInput | $Enums.AIProvider
    apiKey?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    temperature?: FloatFieldUpdateOperationsInput | number
    maxTokens?: IntFieldUpdateOperationsInput | number
    topP?: FloatFieldUpdateOperationsInput | number
    frequencyPenalty?: FloatFieldUpdateOperationsInput | number
    presencePenalty?: FloatFieldUpdateOperationsInput | number
    advancedSettings?: NullableJsonNullValueInput | InputJsonValue
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastUsed?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsUpdateWithoutUserInput = {
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAlertSettingsNestedInput
  }

  export type AlertSettingsUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    organizationId?: StringFieldUpdateOperationsInput | string
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlertSettingsUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    organizationId?: StringFieldUpdateOperationsInput | string
    symbol?: NullableStringFieldUpdateOperationsInput | string | null
    alertType?: StringFieldUpdateOperationsInput | string
    isEnabled?: BoolFieldUpdateOperationsInput | boolean
    threshold?: NullableFloatFieldUpdateOperationsInput | number | null
    cooldownHours?: IntFieldUpdateOperationsInput | number
    maxAlertsPerDay?: IntFieldUpdateOperationsInput | number
    maxGlobalAlertsPerDay?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleVersionUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
    article?: ArticleUpdateOneRequiredWithoutVersionsNestedInput
  }

  export type ArticleVersionUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleVersionUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    articleId?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutArticlesNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUpdateManyWithoutArticleNestedInput
    template?: TemplateUpdateOneWithoutArticlesNestedInput
  }

  export type ArticleUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUncheckedUpdateManyWithoutArticleNestedInput
  }

  export type ArticleUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleAnalyticsCreateManyArticleInput = {
    id?: string
    organizationId: string
    date: Date | string
    views?: number
    uniqueViews?: number
    shares?: number
    comments?: number
    avgReadTime?: number
    bounceRate?: number
    engagementRate?: number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleVersionCreateManyArticleInput = {
    id?: string
    version: number
    title: string
    content: string
    changes?: string | null
    createdAt?: Date | string
    authorId?: string | null
    changeType?: string | null
  }

  export type ArticleAnalyticsUpdateWithoutArticleInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutAnalyticsNestedInput
  }

  export type ArticleAnalyticsUncheckedUpdateWithoutArticleInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleAnalyticsUncheckedUpdateManyWithoutArticleInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    views?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    shares?: IntFieldUpdateOperationsInput | number
    comments?: IntFieldUpdateOperationsInput | number
    avgReadTime?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    trafficSources?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArticleVersionUpdateWithoutArticleInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
    author?: UserUpdateOneWithoutArticleVersionsNestedInput
  }

  export type ArticleVersionUncheckedUpdateWithoutArticleInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleVersionUncheckedUpdateManyWithoutArticleInput = {
    id?: StringFieldUpdateOperationsInput | string
    version?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    changes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    changeType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArticleCreateManyTemplateInput = {
    id?: string
    organizationId: string
    title: string
    content?: string | null
    summary?: string | null
    slug: string
    status?: $Enums.ArticleStatus
    authorId?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: string | null
    publishedAt?: Date | string | null
    scheduledAt?: Date | string | null
    viewCount?: number
    shareCount?: number
    engagementRate?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ArticleUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutArticlesNestedInput
    analytics?: ArticleAnalyticsUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUpdateManyWithoutArticleNestedInput
    author?: UserUpdateOneWithoutArticlesNestedInput
  }

  export type ArticleUncheckedUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    analytics?: ArticleAnalyticsUncheckedUpdateManyWithoutArticleNestedInput
    versions?: ArticleVersionUncheckedUpdateManyWithoutArticleNestedInput
  }

  export type ArticleUncheckedUpdateManyWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: StringFieldUpdateOperationsInput | string
    status?: EnumArticleStatusFieldUpdateOperationsInput | $Enums.ArticleStatus
    authorId?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    keywords?: NullableJsonNullValueInput | InputJsonValue
    sourceType?: EnumSourceTypeFieldUpdateOperationsInput | $Enums.SourceType
    sourceData?: NullableJsonNullValueInput | InputJsonValue
    generatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}